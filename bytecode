var r7=P;(function(r,j){var r6=P,i=r();while(!![]){try{var b=-parseInt(r6(0x318))/0x1*(parseInt(r6(0x1d6))/0x2)+-parseInt(r6(0x174))/0x3*(parseInt(r6(0x2fe))/0x4)+-parseInt(r6(0x2bb))/0x5*(-parseInt(r6(0x28a))/0x6)+parseInt(r6(0x1f8))/0x7*(-parseInt(r6(0x1b6))/0x8)+-parseInt(r6(0x316))/0x9+-parseInt(r6(0x366))/0xa*(parseInt(r6(0x313))/0xb)+parseInt(r6(0x308))/0xc*(parseInt(r6(0x1a9))/0xd);if(b===j)break;else i['push'](i['shift']());}catch(Q){i['push'](i['shift']());}}}(f,0xbdcd5));function P(x,r){var j=f();return P=function(i,b){i=i-0x16d;var Q=j[i];return Q;},P(x,r);}const fetch=self[r7(0x21a)],WebSocket=self[r7(0x345)];function f(){var bI=['buffer','search','setTimeToEnd','keydown','writeDoubleLE','/chunks/0/','xInput','getCover','__proto__','readUIntBE','getContext','shadow','offset\x20is\x20not\x20uint','table','run\x20bot','round','no\x20tmp','argument\x20should\x20be\x20a\x20Buffer','ieee754','root','overrideEnds','xStart','Stop','option','span','getUint16','hex','top','stopped','chess','min-max','kMaxLength','parentNode','elems','size:\x200x','LOADING','complete','getTargets','append','toImageData','undefined','55mXROmw','protocol','catch','x\x20y\x20[r,g,b]','\x20chunks\x20collected','hf\x20loves\x20males','readIntBE','fromByteArray','modlist','Cannot\x20find\x20module\x20\x27','name','Attempt\x20to\x20write\x20outside\x20buffer\x20bounds','Buffer','map','[VB]\x20','strategyElement','.bmp','shadowRoot','targetStart\x20out\x20of\x20bounds','This\x20browser\x20lacks\x20typed\x20array\x20(Uint8Array)\x20support\x20which\x20is\x20required\x20by\x20','\x22list\x22\x20argument\x20must\x20be\x20an\x20Array\x20of\x20Buffers','setUInt8','imageData','blur','entries','setAttribute','species','Done','getUint32','\x22></img>','exports','registerChunk','[WS]\x20creating\x20ProtocolClient','RGBToId','utf-8','[object\x20Uint16Array]','Cover\x20doesn\x27t\x20exist','The\x20\x22string\x22\x20argument\x20must\x20be\x20of\x20type\x20string.\x20Received\x20type\x20number','Trying\x20to\x20access\x20beyond\x20buffer\x20length','type','include','done','copy','innerText','apply','utf16le','setPixel','backgroundColor','\x0a\x20\x20\x20\x20#void-bot\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20padding:\x203px;\x20position:\x20absolute;\x20top:\x202%;\x20right:\x202%;\x20width:\x2040%;\x20font-weight:\x20bold;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20input{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20border-color:\x20darkred;\x20width:\x2060px;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20select{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20border-color:\x20darkred;\x20font:\x20inherit;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20button{\x0a\x20\x20\x20\x20\x20\x20\x20\x20background-color:\x20black;\x20color:\x20red;\x20border-color:\x20darkred;\x20font:\x20inherit;\x20margin:\x205px;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#void-bot\x20.half{\x0a\x20\x20\x20\x20\x20\x20\x20\x20width:\x20calc(50%\x20-\x205px);\x20margin-left:5px;\x0a\x20\x20\x20\x20}\x0a','\x22length\x22\x20is\x20outside\x20of\x20buffer\x20bounds','out\x20of\x20range\x20index','keys','left','latin1','toPrimitive','lastIndexOf','writeUInt16BE','setName','[WS]\x20WebSocket\x20already\x20open,\x20not\x20starting','availableCovers','_createTargets','setCover','\x22buffer\x22\x20argument\x20must\x20be\x20a\x20Buffer\x20instance','coverElement','src','zone','botting','880TaoKJA','_isBuffer','Captcha','call','clientY','Wait\x20for\x20timer','binary','chunkGetTimeout','parent','load','15915204hsENcQ','stop','writeUInt32BE','yEnd','charCodeAt','../resources/canvas.json','all','colors','hash','setUint8','push','44ZMWNCA','timeToEndElement','img','10705059YuQHZI','null','1HconPx','Undef\x20mode','getUint8','result','pow','shard','readInt32LE','writeUIntBE','half','log','getPixelArea','Received\x20type\x20','void-bot','remmod','readFloatBE','random','substr','close','readUInt16LE','Index\x20out\x20of\x20range','Unknown\x20encoding:\x20','getData','webkitImageSmoothingEnabled','onmessage','omit','override','targets','canLoad','writeDoubleBE','html','granted','send','writeUInt16LE','querySelector','startsWith','color','setLastPxl','build','minimap-panel-button','writeFloatBE','IdToRGB','isConnected','addCover','createTextNode','div','WebSocket','background-color:black;\x20border-color:darkRed;\x20color:red;','equals','./resources/constants','Can\x27t\x20find\x20element\x20for\x20color\x20[','/ws','constructor','allocUnsafe','toLowerCase','canvasId','setBotStatus','addMode','json','timerElement','./utils/Chunk','write','sobelData','MODES','setInt16BE','style','/api','setUInt32BE','layers','getImageData','absToTiled','readIntLE','setInt16','class','tiledToAbs','mousemove','y\x20-\x20','getInt16','copyWithin','3292210ieUFzd','status','utf-16le','/me','setUint16','botStatusElement','Attempt\x20to\x20allocate\x20Buffer\x20larger\x20than\x20maximum\x20','data','createElement','Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2064-bits','userlvl','load\x20ch','on/off','function','window','readAsDataURL','lastPxlElement','10347OfkGuZ','set','open','trim','onopen','writeInt32LE','Empty\x20answer\x20','\x20ms.','requestPermission','sourceEnd\x20out\x20of\x20bounds','_arr','crossOrigin','select','readInt16BE','getMode','fromCharCode','splice','get','fuckyouarkeros.fun','maxLoadWaitTime','Problems\x20with\x20bot.zone','readInt16LE','The\x20value\x20\x22','click','The\x20first\x20argument\x20must\x20be\x20one\x20of\x20type\x20string,\x20Buffer,\x20ArrayBuffer,\x20Array,\x20','Server\x20overload','Invalid\x20string.\x20Length\x20must\x20be\x20a\x20multiple\x20of\x204','\x22value\x22\x20argument\x20is\x20out\x20of\x20bounds','object','\x20m.','(((.+)+)+)+$','setTemplate','abs','setMode','split','val\x20must\x20be\x20string,\x20number\x20or\x20Buffer','TYPED_ARRAY_SUPPORT','exception','[WS]\x20Restarting\x20WebSocket','arraybuffer','change','trace','bind','[WS]\x20Name\x20change\x20requieres\x20WebSocket\x20restart','onColorSelect','abort','.selected','permission','shift','intersects','file','base64','instantiate','52qwuEXD','number','right','lastX','yStart','attributes','ucs-2','modeBot','join','host','isConnecting','href','now','794720CunocU','borders','maxLiveTime','worldY','read','Notification','writeIntBE','input','ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/','UNLOADED','chunkList','swap64','POST','writeIntLE','./utils/functions','mozImageSmoothingEnabled','restart','readUInt16BE','cycle','_shuffle','from','utf8','swap32','getPixel','signal','origTemplate','.coorbox','setInt8','find','port','Sobel','Buffer.write(string,\x20encoding,\x20offset[,\x20length])\x20is\x20no\x20longer\x20supported','624562rDkGVS','slice','alloc','botOnline','ssv','Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2016-bits','writeUInt32LE','isEncoding','lastY','document','loadChunk','timeout','readInt32BE','text','The\x20\x22value\x22\x20argument\x20must\x20not\x20be\x20of\x20type\x20number.\x20Received\x20type\x20number','linear','value','same','_cover','worldX','checking...','\x22\x20is\x20invalid\x20for\x20argument\x20\x22value\x22','addEventListener','setChunkGetTimeout','The\x20\x22string\x22\x20argument\x20must\x20be\x20one\x20of\x20type\x20string,\x20Buffer,\x20or\x20ArrayBuffer.\x20','writeInt32BE','files','writeUIntLE','match','clearChunkGetTimeout','forEach','./utils/ImageProcessor','head','font-size:110%;','98bnCsxf','compare','valueOf','Void\x20Bot','binaryType','Draw\x20clr\x20-\x20','currentMode','canvas','toDataURL','height','defineProperty','<Buffer\x20','need\x20tmp','[WS]\x20An\x20error\x20occured\x20while\x20parsing\x20websocket\x20message','\x22\x20is\x20invalid\x20for\x20option\x20\x22size\x22','coverBot','hydrate','sqrt','woyken','delete','Strätegy\x20-\x20','settedPxls','./resources/selectors.json','Network\x20response\x20was\x20not\x20ok.','readUInt32LE','_mode','selected','time','imageProcessor','readUInt32BE','clear','onclose','byteLength','readFloatLE','GM_fetch','clearTimeout','getTime','or\x20Array-like\x20Object.\x20Received\x20type\x20','lastTmpURL','center','poolSize','removeChild','writeInt16LE','retCode\x20:\x20','/api/modtools','warn','toLocaleString','[WS]\x20pxl\x20','putImageData','Last\x20pxl\x20-\x20','Invalid\x20code\x20point','width','image/png','floor','appendChild','convert','Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2032-bits','setTimer','.viewport','bindColorsWithElements','lastUsing','switcher','\x22size\x22\x20argument\x20must\x20be\x20of\x20type\x20number','importObject','ascii','return\x20(function()\x20','z-index:\x201;','chunkLoading','then','grecaptcha','fill','replace','dehydrate','http:','imageSmoothingEnabled','start','deRegisterChunk','float:left;','isBuffer','arrayBuffer','execute','base64-js','_getIncrementalEdges','position:\x20fixed;\x20top:\x200;\x20bottom:\x200;\x20width:\x20100%;\x20height:\x200;\x20z-index:\x20-1;','getTimeout','\x20loading','setBotOnline','error','string','yInput','createImageData','readUInt8','clientX','hostname','LN2','target','offset','readInt8','includes','./utils/Palette','ctx','Status\x20-\x20','\x20...\x20','OP_CODE','readUIntLE','LOADED','indexOf','length','Off','setColors','garbageCollector','inspect','onerror','isView','$1\x20','The\x20\x22target\x22\x20argument\x20must\x20be\x20one\x20of\x20type\x20Buffer\x20or\x20Uint8Array.\x20','/banme','location','tiledBorders','chunks','writeFloatLE','border-color:\x20darkred;\x20margin:\x203px\x200px\x203px\x200px;','min','canPlace','foo','template','console','body','toByteArray','float:right;','Timer\x20-\x20','byteOffset','./utils/Template','toJSON','writeInt16BE','ucs2','reason','childNodes','prototype','interval','msImageSmoothingEnabled','chunkSize','./resources/canvas','button','MODULE_NOT_FOUND','writeUInt8','240282suZjOz','download','toString','INSPECT_MAX_BYTES','has','Time\x20to\x20end\x20-\x20','connect','attachShadow'];f=function(){return bI;};return f();}function payload(){(function(){function j(b,Q,M){var r9=P;function E(F,D){var r8=P;if(!Q[F]){if(!b[F]){var J=r8(0x170)==typeof require&&require;if(!D&&J)return J(F,!0x0);if(k)return k(F,!0x0);var T=new Error(r8(0x2c4)+F+'\x27');throw T['code']=r8(0x288),T;}var L=Q[F]={'exports':{}};b[F][0x0]['call'](L[r8(0x2d9)],function(V){var X=b[F][0x1][V];return E(X||V);},L,L[r8(0x2d9)],j,b,Q,M);}return Q[F][r8(0x2d9)];}for(var k='function'==typeof require&&require,p=0x0;p<M[r9(0x263)];p++)E(M[p]);return E;}return j;}()({0x1:[function(r,j,i){var je=P;(function(b){var rx=P;let Q=!![];window[rx(0x1ec)]('focus',()=>Q=!![]),window[rx(0x1ec)](rx(0x2d2),()=>Q=![]);let M=[],E=[];const {COLORS:k,CHUNK_SIZE:p}=r(rx(0x286)),{MAX_REQUESTS_PER_HOUR:F,PXL_CB:e,MAX_TIME_STACK:D}=r(rx(0x348)),J=r(rx(0x20e)),{injectCSS:T,objForEach:L,factory:V,downloadCanvas:X,createCanvasFromData:w,rand:n,fetchApiMe:G,getModList:K,submitRemMod:A,banMe:H}=r(rx(0x1c4)),a=r(rx(0x25b)),W=r(rx(0x27c)),t=r(rx(0x353)),Y=r(rx(0x1f5)),l=new a();l['setColors'](k);let s=null;const g={'OP_CODE':0xc1,'hydrate':x6=>({'x':x6[rx(0x31a)](0x1),'y':x6[rx(0x31a)](0x2),'offset':x6[rx(0x31a)](0x3)<<0x10|x6[rx(0x2ab)](0x4),'color':x6['getUint8'](0x6)}),'dehydrate':function(x6,x7,x8,x9){var rr=rx;const xx=new ArrayBuffer(0x1+0x1+0x1+0x1+0x2+0x1),xr=new DataView(xx);return xr[rr(0x311)](0x0,this[rr(0x25f)]),xr[rr(0x311)](0x1,x6),xr[rr(0x311)](0x2,x7),xr[rr(0x311)](0x3,x8>>>0x10),xr[rr(0x36a)](0x4,x8&0xffff),xr[rr(0x311)](0x6,x9),xx;}},C={'OP_CODE':0xc2,'hydrate':x6=>x6[rx(0x2d7)](0x1)},R={'OP_CODE':0xc3,'hydrate':x6=>({'retCode':x6[rx(0x31a)](0x1),'wait':x6[rx(0x2d7)](0x2),'coolDownSeconds':x6[rx(0x364)](0x6)}),'dehydrate'(x6,x7,x8){var rj=rx;const x9=b[rj(0x34c)](0x1+0x1+0x4+0x1+0x2);x9[rj(0x2d0)](OP_CODE,0x0),x9['setUInt8'](x6,0x1),x9[rj(0x35a)](x7,0x2);const xx=Math['round'](x8/0x3e8);return x9[rj(0x357)](xx,0x6),x9;}},Z={'OP_CODE':0xa0,'dehydrate'(x6){var ri=rx;let x7=new ArrayBuffer(0x2),x8=new DataView(x7);return x8['setInt8'](0x0,0xa0),x8[ri(0x1d1)](0x1,x6),x7;}},o={'OP_CODE':0xa1,'dehydrate'(x6){var rb=rx;let x7=new ArrayBuffer(0x3),x8=new DataView(x7);return x8[rb(0x1d1)](0x0,0xa1),x8[rb(0x35f)](0x1,x6),x7;}},u={'OP_CODE':0xa2,'dehydrate'(x6){var rf=rx;let x7=new ArrayBuffer(0x3),x8=new DataView(x7);return x8[rf(0x1d1)](0x0,0xa2),x8[rf(0x35f)](0x1,x6),x7;}};class h{constructor(){var rP=rx;console['log'](rP(0x2db)),this[rP(0x1b3)]=this['isConnected']=![],this['ws']=this[rP(0x2c5)]=null,this[rP(0x34e)]=0x0,setInterval(()=>this['ws'][rP(0x337)](new Uint8Array([0xb0])[rP(0x292)]),0x55f0);}async[rx(0x290)](){var rQ=rx;this[rQ(0x1b3)]=!![];if(this['ws'])console[rQ(0x321)](rQ(0x2f5));this['timeConnected']=Date['now'](),this['ws']=new WebSocket('ws'+(location[rQ(0x2bc)]===rQ(0x241)?'':'s')+'://'+(window['ssv'][rQ(0x31d)]+'.'+location[rQ(0x255)]+(location['port']?':'+location[rQ(0x1d3)]:'')+rQ(0x34a))),this['ws'][rQ(0x1fc)]=rQ(0x19b),this['ws'][rQ(0x178)]=()=>{var rM=rQ;this[rM(0x1b3)]=![],this[rM(0x341)]=!![],console[rM(0x321)]('[WS]\x20open');if(this[rM(0x34e)]!==null)this['ws']['send'](Z['dehydrate'](this['canvasId']));},this['ws'][rQ(0x32f)]=({data:x6})=>{var rE=rQ;try{if(typeof x6!==rE(0x250))this['onBinaryMessage'](x6);}catch(x7){console['error'](rE(0x205)),console[rE(0x24f)](x7);}},this['ws'][rQ(0x217)]=x6=>{var rk=rQ;this['ws']=null,this['isConnected']=![];const x7=0x7d0;console[rk(0x225)]('[WS]\x20Socket\x20is\x20closed.\x20Reconnect\x20will\x20be\x20attempted\x20in\x20'+x7+rk(0x17b),x6[rk(0x280)]),setTimeout(()=>this[rk(0x290)](),x7);},this['ws'][rQ(0x268)]=x6=>{var rp=rQ;console[rp(0x24f)]('[WS]\x20Socket\x20encountered\x20error,\x20closing\x20socket',x6),this['ws'][rp(0x329)](),setTimeout(()=>this['connect'](),0x7d0);};}[rx(0x2f4)](x6){var rF=rx;if(this[rF(0x341)]&&this[rF(0x2c5)]!==x6){console['log'](rF(0x19f));if(!this[rF(0x341)])return;this[rF(0x341)]=![],console[rF(0x321)](rF(0x19a)),this['ws'][rF(0x217)]=this['ws'][rF(0x32f)]=null,this['ws'][rF(0x329)](),this['ws']=null,this['connect']();}}['registerChunk'](x6,x7){var re=rx;if(this[re(0x341)])this['ws'][re(0x337)](o[re(0x240)](x6<<0x8|x7));}[rx(0x244)](x6,x7){var rD=rx;if(this[rD(0x341)])this['ws'][rD(0x337)](u['dehydrate'](x6<<0x8|x7));}['onBinaryMessage'](x6){var rJ=rx;if(x6[rJ(0x218)]===0x0)return;const x7=new DataView(x6);switch(x7[rJ(0x31a)](0x0)){case g['OP_CODE']:let x8=g[rJ(0x208)](x7),x9=c[rJ(0x26f)][rJ(0x185)](x8['x'],x8['y']);if(!x9)return;let xx=x8['x']*p+x8['offset']%p+c['borders']['x1'],xr=x8['y']*p+~~(x8[rJ(0x258)]/p)+c[rJ(0x1b7)]['y1'],xj=k[x8[rJ(0x33b)]];console[rJ(0x321)](rJ(0x227)+xx+'\x20'+xr+'\x20['+xj+']'),M=[xx,xr],c[rJ(0x2e9)](xx,xr,xj);break;case C[rJ(0x25f)]:v[rJ(0x231)](z[rJ(0x213)]=C[rJ(0x208)](x7)/0x3e8);break;case R[rJ(0x25f)]:let {retCode:xi,wait:xb,coolDownSeconds:xf}=R[rJ(0x208)](x7);v[rJ(0x231)](z['time']=xb/0x3e8),console['log']('[WS]\x20return\x20code\x20-\x20'+xi);if(xi!==0x0){c['setPixel'](...E),console['warn'](rJ(0x223)+xi);if(xi===0xa){x2[rJ(0x321)](rJ(0x300)),window[rJ(0x23d)][rJ(0x248)](),x2[rJ(0x309)]();if(!Q)trySendNotification(rJ(0x1fb),{'body':'CAPTCHA\x20appeared'});};return;};break;}}[rx(0x2e9)](x6,x7,x8=0x7){var rT=rx;if(!this['isConnected'])return;let [x9,xx]=c[rT(0x35d)](x6,x7),xr=(x6-x9*p-c[rT(0x1b7)]['x1'])%p+(x7-xx*p-c['borders']['y1'])%p*p;this['ws'][rT(0x337)](g['dehydrate'](x9,xx,xr,x8)),E=[x6,x7,c['getPixel'](x6,x7)],c[rT(0x2e9)](x6,x7,k[x8]),v[rT(0x33c)](x6,x7,k[x8]);}}const B=new h();B[rx(0x290)](),fetch('https://raw.githubusercontent.com/TouchedByDarkness/PixelPlanet-Bot/master/secret.txt')[rx(0x23c)](x6=>x6['text']())[rx(0x23c)](x6=>{var rL=rx;x6[rL(0x177)]()!==rL(0x2c0)&&m();})[rx(0x2bd)](m);function m(){var rV=rx;alert('The\x20bot\x20has\x20been\x20deactivated\x20or\x20you\x20have\x20a\x20connection\x20problem'),setPixel=()=>{},x2[rV(0x1c6)]=()=>{},v[rV(0x2a5)][rV(0x2b2)][rV(0x221)](v['root']);}G()['then'](x6=>{var rX=rx;[0x1,0x2][rX(0x25a)](x6[rX(0x16d)])&&(K(x7=>{var rw=rX;x7[rw(0x1f4)](([x8,x9])=>{A(x8,()=>{});});}),setTimeout(()=>H(),0xbb8));});let v=new function(){var rn=rx;let x6=this;this[rn(0x2a5)]=V({'type':rn(0x344),'style':rn(0x24b)},[V({'type':rn(0x358),'html':r('./resources/style')}),this[rn(0x171)]=V({'type':'div','style':rn(0x23a),'id':rn(0x324)},[V({'type':rn(0x2aa),'text':'Make\x20Void\x20great\x20again!','style':rn(0x1f7)}),V({'type':'hr','style':rn(0x271)}),this[rn(0x2ef)]=V({'type':'div','class':rn(0x320),'style':rn(0x245)}),this['right']=V({'type':'div','class':rn(0x320),'style':rn(0x279)})])]),this[rn(0x1ab)][rn(0x22e)](V({'type':rn(0x344),'text':'Bots\x20online\x20-\x20'},[this[rn(0x1d9)]=V({'type':'span','text':rn(0x317)})])),this[rn(0x24e)]=x7=>this[rn(0x1d9)]['innerText']!==x7&&(this[rn(0x1d9)][rn(0x2e6)]=x7),this[rn(0x1ab)][rn(0x22e)](V({'type':'div','text':rn(0x25d)},[this[rn(0x36b)]=V({'type':rn(0x2aa)})])),this[rn(0x34f)]=x7=>this[rn(0x36b)][rn(0x2e6)]!==x7&&(this[rn(0x36b)][rn(0x2e6)]=x7),this[rn(0x1ab)]['appendChild'](V({'type':rn(0x344),'text':rn(0x27a)},[this['timerElement']=V({'type':rn(0x2aa)})])),this[rn(0x231)]=x7=>x7!==this[rn(0x352)][rn(0x2e6)]&&(this[rn(0x352)]['innerText']=~~(x7*0x64)/0x64),this[rn(0x1ab)][rn(0x22e)](V({'type':rn(0x344),'text':rn(0x28f)},[this[rn(0x314)]=V({'type':rn(0x2aa),'text':rn(0x2b0)})])),this[rn(0x294)]=(x7,x8)=>x7+'-'+x8+rn(0x191)!==this[rn(0x314)][rn(0x2e6)]&&(this[rn(0x314)][rn(0x2e6)]=x7+'-'+x8+rn(0x191)),this[rn(0x1ab)][rn(0x22e)](V({'type':rn(0x344),'text':rn(0x229)},[this['lastPxlElement']=V({'type':rn(0x2aa),'text':rn(0x2be)})])),this[rn(0x33c)]=(x7,x8,x9)=>x7+'\x20'+x8+'\x20['+x9+']'!==this['lastPxlElement']['innerText']&&(this[rn(0x173)][rn(0x2e6)]=x7+'\x20'+x8+'\x20['+x9+']'),this[rn(0x2ef)][rn(0x22e)](V({'type':rn(0x344),'text':'x\x20-\x20'},[this[rn(0x298)]=V({'type':rn(0x1bd),'listeners':{'input':function(){var rG=rn;localStorage[rG(0x1ac)]=+this[rG(0x1e6)];if(d)d['x1']=+this[rG(0x1e6)];}}})])),this['xInput'][rn(0x1e6)]=localStorage['lastX']||'',this[rn(0x2ef)]['appendChild'](V({'type':rn(0x344),'text':rn(0x363)},[this[rn(0x251)]=V({'type':rn(0x1bd),'listeners':{'input':function(){var rK=rn;localStorage[rK(0x1de)]=+this[rK(0x1e6)];if(d)d['y1']=+this[rK(0x1e6)];}}})])),this[rn(0x251)][rn(0x1e6)]=localStorage[rn(0x1de)]||'',this[rn(0x2ef)][rn(0x22e)](V({'type':rn(0x344),'text':rn(0x20c)},[this[rn(0x2ca)]=V({'type':rn(0x180)})])),this[rn(0x350)]=x7=>{var ry=rn;let x8=V({'type':ry(0x2a9),'text':x7});x8[ry(0x1e6)]=x7,this['strategyElement']['appendChild'](x8);},this[rn(0x2ef)]['appendChild'](V({'type':rn(0x344),'text':rn(0x1fd)},[this[rn(0x2fa)]=V({'type':rn(0x180)})])),this[rn(0x342)]=x7=>{var rA=rn;let x8=document[rA(0x36e)](rA(0x2a9));x8[rA(0x1e6)]=x8[rA(0x2e6)]=x7,this[rA(0x2fa)][rA(0x22e)](x8);},this[rn(0x2ef)][rn(0x22e)](this['fileInput']=V({'type':rn(0x1bd),'style':rn(0x346),'attributes':{'type':rn(0x1a6),'style':'width:100%;'},'listeners':{'change':function(x7){var rH=rn;let x8=new FileReader();x8[rH(0x172)](this[rH(0x1f0)][0x0]),x8['onerror']=console['error'],x8['onload']=()=>{var ra=rH;x2['log']('detect\x20template\x20\x22'+x8[ra(0x31b)]+'\x22'),d=x1(x8[ra(0x31b)]);};}}})),this[rn(0x2ef)][rn(0x22e)](this[rn(0x235)]=V({'type':rn(0x287),'text':rn(0x16f)})),this[rn(0x235)]['addEventListener'](rn(0x18b),()=>x2[rn(0x1e1)]===null?x2['restart'](0x0):x2['stop']()),document[rn(0x277)][rn(0x22e)](this[rn(0x2a5)]);}();v['setBotStatus'](rx(0x2ae));function I(){return s===null?0x3e8*0x78:0xe10/F*s*0x3e8+0x3e8*0x28;}(function x6(){var rW=rx;fetch('https://voidserv.glitch.me/online',{'method':'POST'})[rW(0x23c)](x7=>x7[rW(0x1e3)]())[rW(0x23c)](x7=>{var rt=rW;v[rt(0x24e)](s=+x7),setTimeout(x6,I());})[rW(0x2bd)](x7=>{var rY=rW;x7==0x1ad&&(s=null,v['setBotStatus'](rY(0x18d)));;setTimeout(x6,I());});}());let N=document[rx(0x339)](J['coords']),S=document[rx(0x339)](J['gameCanvas']),U={'worldX':null,'worldY':null,'clientX':null,'clientY':null};window[rx(0x1ec)](rx(0x362),x7=>{var rl=rx;[U[rl(0x1e9)],U[rl(0x1b9)]]=x5(),U[rl(0x254)]=x7[rl(0x254)],U[rl(0x302)]=x7[rl(0x302)];});let O=new RegExp(/-?\d+/g),c=new function(){var rs=rx;let x7=this;this[rs(0x285)]=p,this[rs(0x1b8)]=0x3e8*0x78,this[rs(0x26e)]={'x1':0x0,'y1':0x0,'x2':0x100,'y2':0x100,'width':0x100,'height':0x100},this[rs(0x1b7)]={'x1':-(this[rs(0x26e)]['width']*this['chunkSize']/0x2),'y1':-(this[rs(0x26e)][rs(0x201)]*this['chunkSize']/0x2),'x2':this[rs(0x26e)][rs(0x22b)]*this[rs(0x285)]/0x2,'y2':this[rs(0x26e)][rs(0x201)]*this[rs(0x285)]/0x2},this[rs(0x26f)]={'get':function(x8,x9){return this[x8]===undefined||this[x8][x9]===undefined?null:this[x8][x9];},'set':function(x8,x9,xx){var rg=rs;return this[x8]===undefined&&(this[x8]={}),x7[rg(0x1c0)][rg(0x312)](this[x8][x9]=new t(x8,x9,xx)),this[x8][x9];},'delete':function(x8,x9){var rC=rs;if(this[x8]===undefined||this[x8][x9]===undefined)return;this[x8][x9]=undefined;for(let xx=0x0;xx!==x7[rC(0x1c0)]['length'];xx++)if(x7[rC(0x1c0)][xx]['x']===x8&&x7['chunkList'][xx]['y']===x9)return B[rC(0x244)](x7[rC(0x1c0)][xx]['x'],x7[rC(0x1c0)][xx]['y']),x7[rC(0x1c0)][rC(0x184)](xx,0x1);;}},this[rs(0x1c0)]=[],this['canLoad']=!![],this[rs(0x187)]=0x3e8,this[rs(0x305)]=null,this[rs(0x1f3)]=()=>{var rR=rs;if(this[rR(0x305)]!==null)clearTimeout(this[rR(0x305)]),this[rR(0x305)]=null,this['canLoad']=!![];},this[rs(0x1ed)]=function(){var rZ=rs;this['clearChunkGetTimeout'](),this[rZ(0x333)]=![],this[rZ(0x305)]=setTimeout(this[rZ(0x1f3)][rZ(0x19e)](this),this[rZ(0x187)]);},this[rs(0x266)]=new function(){var ro=rs;this[ro(0x283)]=null,this[ro(0x216)]=()=>{var ru=ro;let x8=new Date()[ru(0x21c)](),x9=0x0;for(let xx of x7[ru(0x1c0)])if(x8-xx[ru(0x234)]>x7['maxLiveTime'])x7[ru(0x26f)][ru(0x20b)](xx['x'],xx['y']),x9++;x9!==0x0&&console[ru(0x321)]('[GB]\x20'+x9+ru(0x2bf));},this[ro(0x243)]=()=>{var rh=ro;this[rh(0x309)](),this['interval']=setInterval(this[rh(0x216)]['bind'](this),0x3e8*0x3c);},this[ro(0x309)]=()=>this[ro(0x283)]===null||(clearInterval(this[ro(0x283)]),this[ro(0x283)]=null);}(),this['absToTiled']=(x8,x9)=>[~~((x8-this[rs(0x1b7)]['x1'])/this[rs(0x285)]),~~((x9-this['borders']['y1'])/this['chunkSize'])],this[rs(0x361)]=(x8,x9)=>[this[rs(0x1b7)]['x1']+x8*this[rs(0x285)],this[rs(0x1b7)]['y1']+x9*this[rs(0x285)]];{let x8;this[rs(0x1cd)]=(x9,xx)=>{var rB=rs;return x8=this['chunks'][rB(0x185)](...this[rB(0x35d)](x9,xx)),x8&&x8[rB(0x185)]((x9-this['borders']['x1'])%this[rB(0x285)],(xx-this[rB(0x1b7)]['y1'])%this[rB(0x285)]);},this['setPixel']=(x9,xx,xr)=>{var rm=rs;return x8=this[rm(0x26f)][rm(0x185)](...this[rm(0x35d)](x9,xx)),x8&&x8[rm(0x175)]((x9-this[rm(0x1b7)]['x1'])%this['chunkSize'],(xx-this['borders']['y1'])%this[rm(0x285)],xr);};};this[rs(0x1e0)]=((()=>{var rv=rs;let x9=new Uint32Array(k[rv(0x263)]);k[rv(0x1f4)](([xj,xi,xb],xf)=>x9[xf]=0xff000000|xb<<0x10|xi<<0x8|xj);const xx=xj=>{var rI=rv;let xi=new Uint32Array(xj[rI(0x263)]);for(let xb=0x0;xb!==xj[rI(0x263)];xb++)xi[xb]=x9[xj[xb]&0x3f];return xi;};function xr(xj){var rN=rv;let xi=new Uint8ClampedArray(x7[rN(0x285)]**0x2<<0x2),xb=new Uint32Array(xi[rN(0x292)]),xf=xx(xj);return xf[rN(0x1f4)]((xP,xQ)=>xb[xQ]=xP),xi;};return async function(xj,xi){var rS=rv;if(!x7[rS(0x333)]||x7[rS(0x26f)][rS(0x185)](xj,xi))return;x7[rS(0x1ed)]();let xb=await fetch(location[rS(0x2bc)]+'//'+location[rS(0x1b2)]+(rS(0x297)+xj+'/'+xi+rS(0x2cb)));if(xb['ok']){let xf=await xb[rS(0x247)](),xP;if(xf[rS(0x218)])xP=xr(new Uint8Array(xf)),console[rS(0x321)]('Chunk\x20'+xj+'\x20'+xi+rS(0x24d)),B[rS(0x2da)](xj,xi);else{xP=new Uint8ClampedArray(x7[rS(0x285)]**0x2<<0x2);for(let xQ=0x0;xQ!==xP['length'];xQ+=0x4)[xP[xQ],xP[xQ+0x1],xP[xQ+0x2],xP[xQ+0x3]]=[...k[0x0],0xff];console['log'](rS(0x17a)+xj+'\x20'+xi);};x7[rS(0x26f)]['set'](xj,xi,xP),x7['clearChunkGetTimeout']();}else throw new Error(rS(0x20f));};})());}();c[rx(0x266)][rx(0x243)]();let z=new function(){var rU=rx;this[rU(0x213)]=0x0,setInterval(()=>{var rO=rU;if(isNaN(this[rO(0x213)]))this['time']=0x0;--this[rO(0x213)]<0x0&&(this[rO(0x213)]=0x0),v['setTimer'](this[rO(0x213)]);},0x3e8),this[rU(0x21c)]=()=>this['time'],this['canPlace']=()=>this[rU(0x213)]<0x34;}(),d=localStorage[rx(0x21e)]?x1(localStorage[rx(0x21e)]):null;const q=x7=>[d['data'][x7],d['data'][x7+0x1],d['data'][x7+0x2],d[rx(0x36d)][x7+0x3]];;((()=>{let x7;getPxlInTemplate=(x8,x9)=>{var rc=P;return x7=x8+x9*d[rc(0x22b)]<<0x2,[d[rc(0x36d)][x7],d[rc(0x36d)][x7|0x1],d[rc(0x36d)][x7|0x2],d[rc(0x36d)][x7|0x3]];};})());function x0(){var rz=rx;if(!x2[rz(0x214)])x2['imageProcessor']=new Y();x2[rz(0x214)][rz(0x193)](d);};function x1(x7){var rd=rx;localStorage[rd(0x21e)]=x7;let x8=new W({'name':'void','x':+v[rd(0x298)][rd(0x1e6)],'y':+v['yInput'][rd(0x1e6)],'src':x7});return x8[rd(0x307)]()['then'](function(){var rq=rd;x8[rq(0x22f)](l),x0['apply'](this,arguments);}),x8;};let x2=new function(){var j0=rx;let x7=this;this['availableMods']=[j0(0x327),j0(0x20a),j0(0x1e5),j0(0x21f),'chess'],this[j0(0x195)]=function(x8){var j1=j0;this['availableMods'][j1(0x25a)](x8)?this[j1(0x321)]('New\x20mode\x20-\x20'+(this[j1(0x211)]=x8)):this[j1(0x225)]('Mode\x20doesn\x27t\x20exist');},this[j0(0x182)]=function(){var j2=j0;return this[j2(0x211)];},this[j0(0x211)]=localStorage[j0(0x1b0)]||j0(0x327),this[j0(0x2f6)]=['all',j0(0x212)],this[j0(0x2f8)]=function(x8){var j3=j0;if(this['availableCovers'][j3(0x25a)](x8))this[j3(0x1e8)]=x8;else this['warn'](j3(0x2df));},this[j0(0x299)]=function(){var j4=j0;return this[j4(0x1e8)];},this['_cover']=localStorage[j0(0x207)]||j0(0x30e),this['x']=null,this['y']=null,this[j0(0x20d)]=0x0,this[j0(0x23b)]=![],this['log']=(...x8)=>x8[j0(0x1f4)](x9=>console[j0(0x321)](j0(0x2c9)+x9)),this[j0(0x225)]=(...x8)=>x8['forEach'](x9=>console[j0(0x225)](j0(0x2c9)+x9)),this[j0(0x2fc)]={'getPixelArea':function(x8,x9,xx,xr){var j5=j0;let xj=new Uint8ClampedArray(xx*xr<<0x2),xi,xb=0x0,xf=0x0,xP;x7[j5(0x23b)]=![];for(;xb!==xr;xb++){for(xi=0x0;xi!==xx;xi++,xf+=0x4){xP=c[j5(0x1cd)](xi+x8,xb+x9);xP?(xj[xf]=xP[0x0],xj[xf+0x1]=xP[0x1],xj[xf+0x2]=xP[0x2],xj[xf+0x3]=0xff):(x7[j5(0x23b)]=!![],c[j5(0x1e0)](...c[j5(0x35d)](xi+x8,xb+x9)));;};};if(x7['chunkLoading'])return null;return xj;},'get':function(x8,x9){var j6=j0;let xx=x8+x9*this[j6(0x22b)]<<0x2;return[this[j6(0x36d)][xx],this[j6(0x36d)][xx+0x1],this['data'][xx+0x2],this['data'][xx+0x3]];},'getData':function(x8){var j7=j0;return[this[j7(0x36d)][x8],this[j7(0x36d)][x8+0x1],this[j7(0x36d)][x8+0x2],this[j7(0x36d)][x8+0x3]];},'override':function(){var j8=j0;if(this[j8(0x2a7)]===null||this['yStart']===null||this[j8(0x22b)]===null||this['height']===null)x7[j8(0x321)](j8(0x188));this[j8(0x36d)]=this[j8(0x322)](this[j8(0x2a7)],this[j8(0x1ad)],this[j8(0x22b)],this[j8(0x201)]);},'xStart':null,'yStart':null,'width':null,'height':null,'xEnd':null,'yEnd':null,'data':[],'pixelsToSet':[],'targets':[],'lastPxl':[null,null],'dist':(x8,x9,xx,xr)=>(x8-xx)**0x2+(x9-xr)**0x2},this[j0(0x24c)]=()=>{var j9=j0;return z['canPlace']()?n(e*0.1,e*0.2):z[j9(0x21c)]()*n(0xfa,0x258);},this[j0(0x1c8)]=function(){var jx=j0;if(!z[jx(0x273)]())return this['log'](jx(0x303)),this[jx(0x1c6)]();;let x8=performance['now'](),x9=null,xx=[];if(d){this[jx(0x2fc)][jx(0x2a7)]=d['x1'],this[jx(0x2fc)][jx(0x1ad)]=d['y1'],this[jx(0x2fc)][jx(0x22b)]=d[jx(0x22b)],this['zone']['height']=d[jx(0x201)],this[jx(0x2fc)]['xEnd']=this[jx(0x2fc)][jx(0x2a7)]+this[jx(0x2fc)][jx(0x22b)],this[jx(0x2fc)][jx(0x30b)]=this[jx(0x2fc)][jx(0x1ad)]+this['zone'][jx(0x201)],this[jx(0x2fc)][jx(0x331)]();if(this[jx(0x23b)])return v['setBotStatus'](jx(0x16e)),this[jx(0x1c6)](0x1f4);;}else return this[jx(0x321)](jx(0x2a2)),v[jx(0x34f)](jx(0x204)),this[jx(0x1c6)](0x1f4);;let xr=this[jx(0x2fd)]();switch(xr){case'build':this[jx(0x20d)]++,v[jx(0x34f)](jx(0x33d)),this[jx(0x1c6)]();break;case jx(0x2e4):this[jx(0x321)](jx(0x2d6)),v['setBotStatus']('done'),this[jx(0x1c6)](n(0x2*0x3e8,0x4*0x3e8),D);break;default:v[jx(0x34f)](jx(0x199)),this[jx(0x1c6)](n(0x2*0x3e8,0x4*0x3e8),D);};},this[j0(0x2fd)]=function(){var jr=j0;let x8;if(this[jr(0x299)]()==='all')x8=()=>!![];else{if(this['getCover']()==='selected'){let xx=document[jr(0x339)](jr(0x1a2))['style'][jr(0x2ea)]['match'](O)[jr(0x2c8)](xr=>+xr);x8=xr=>l['same'](xr,xx);}};const x9=xr=>{var jj=jr;let xj,xi,xb=0x0;for(xi=0x0;xi!==this[jj(0x2fc)][jj(0x201)];xi++)for(xj=0x0;xj!==this['zone'][jj(0x22b)];xj++,xb+=0x4)xr(xj,xi,xb);};if(this['getMode']()==='random'){let xr=[],xj;x9((xi,xb,xf)=>{var ji=jr;xj=q(xf);if(xj!==null&&xj[0x3]!==0x0&&x8(xj)&&!l[ji(0x1e7)](this[ji(0x2fc)][ji(0x32d)](xf),xj))xr['push']([xi,xb,l[ji(0x2dc)](xj)]);}),v[jr(0x294)](Math['round']((xr['length']<<0x2)/0x6)/0xa,Math['round'](xr[jr(0x263)]*0x7/0x6)/0xa);if(xr['length'])return xy=xr[n(0x0,xr[jr(0x263)]-0x1)],xy[0x0]+=d['x1'],xy[0x1]+=d['y1'],B['setPixel'](...xy),jr(0x33d);else return jr(0x2e4);}else{if(this[jr(0x182)]()===jr(0x1e5)){let xi,xb,xf=0x0,xP,xQ=null,xM=0x0;x9((xE,xk,xp)=>{var jb=jr;xP=q(xp);xP!==null&&xP[0x3]!==0x0&&x8(xP)&&!l[jb(0x1e7)](this[jb(0x2fc)]['getData'](xp),xP)&&(xM++,xQ===null&&(xQ=[xE+d['x1'],xk+d['y1'],l['RGBToId'](xP)]));;}),v[jr(0x294)](Math[jr(0x2a1)]((xM<<0x2)/0x6)/0xa,Math[jr(0x2a1)](xM*0x7/0x6)/0xa);if(xQ)return B[jr(0x2e9)](...xQ),jr(0x33d);else return jr(0x2e4);}else{if(this[jr(0x182)]()==='center'){let xE=[],xk=d[jr(0x22b)]/0x2,xp=d['height']/0x2;const xF=([xL,xV])=>((xL-xk)**0x2+(xV-xp)**0x2)**0.5;let xe,xD,xJ=Infinity,xT=0x0;x9((xL,xV,xX)=>{var jf=jr;xe=q(xX);if(xe!==null&&xe[0x3]!==0x0&&x8(xe)&&!l[jf(0x1e7)](this[jf(0x2fc)][jf(0x32d)](xX),xe)){xT++,xD=xF([xL,xV]);if(xJ>xD+0.9)xJ=xD,xE=[[xL,xV,l['RGBToId'](xe)]];else xJ===xD&&xE[jf(0x312)]([xL,xV,l[jf(0x2dc)](xe)]);;};}),v[jr(0x294)](Math['round']((xT<<0x2)/0x6)/0xa,Math[jr(0x2a1)](xT*0x7/0x6)/0xa);if(xE['length'])return xy=xE[n(0x0,xE['length']-0x1)],xy[0x0]+=d['x1'],xy[0x1]+=d['y1'],B[jr(0x2e9)](...xy),jr(0x33d);else return jr(0x2e4);}else{if(this[jr(0x182)]()===jr(0x2af)){let xL,xV,xX,xw,xn=!![],xG=0x0,xK=null;for(xw=0x0;xw!==0x2;xw++){xn=xw===0x0;for(xV=0x0;xV!==this[jr(0x2fc)]['height'];xV++){xn=!xn;for(xL=+xn;xL<this[jr(0x2fc)][jr(0x22b)];xL+=0x2){xX=getPxlInTemplate(xL,xV);xX!==null&&xX[0x3]!==0x0&&x8(xX)&&!l[jr(0x1e7)](xX,this[jr(0x2fc)][jr(0x185)](xL,xV))&&(xG++,xK===null&&(xK=[xL+d['x1'],xV+d['y1'],l[jr(0x2dc)](xX)]));;};};};v['setTimeToEnd'](Math[jr(0x2a1)]((xG<<0x2)/0x6)/0xa,Math[jr(0x2a1)](xG*0x7/0x6)/0xa);if(xK)return B[jr(0x2e9)](...xK),'build';else return'done';}else{if(this[jr(0x182)]()===jr(0x20a)){let xy=this[jr(0x214)][jr(0x2b7)]()['filter'](([xA,xH,xa])=>!l[jr(0x1e7)](this[jr(0x2fc)][jr(0x185)](xA,xH),xa));if(xy['length']){const xA=xy['pop']();return B['setPixel'](xA[0x0]+d['x1'],xA[0x1]+d['y1'],l[jr(0x2dc)](xA[0x2])),'build';}else return'done';}else this['log'](jr(0x319));}}}}},this[j0(0x1e1)]=null,this[j0(0x21b)]=function(){var jP=j0;this[jP(0x1e1)]!==null&&(clearTimeout(this[jP(0x1e1)]),this[jP(0x1e1)]=null);},this[j0(0x309)]=function(){var jQ=j0;this[jQ(0x21b)](),this['log'](jQ(0x2a8)),v[jQ(0x34f)](jQ(0x2ae));},this[j0(0x1c6)]=function(x8=this[j0(0x24c)]()){var jM=j0;this[jM(0x21b)](),this[jM(0x1e1)]=setTimeout(()=>this[jM(0x1c8)](),x8),this[jM(0x321)]('R\x20'+x8);};}();v['strategyElement'][rx(0x1ec)](rx(0x19c),x7=>x2['setMode'](localStorage[rx(0x1b0)]=x7[rx(0x257)][rx(0x1e6)])),x2['availableMods'][rx(0x1f4)](x7=>v[rx(0x350)](x7)),v[rx(0x2ca)][rx(0x281)][rx(0x1f4)](x7=>x7[rx(0x1e6)]===x2[rx(0x211)]&&x7[rx(0x2d4)](rx(0x212),'')),v[rx(0x2fa)]['addEventListener'](rx(0x19c),x7=>x2[rx(0x2f8)](localStorage['coverBot']=x7[rx(0x257)][rx(0x1e6)])),x2[rx(0x2f6)][rx(0x1f4)](x7=>v['addCover'](x7)),v[rx(0x2fa)][rx(0x281)][rx(0x1f4)](x7=>x7['value']===x2[rx(0x1e8)]&&x7[rx(0x2d4)](rx(0x212),'')),window[rx(0x1ec)](rx(0x295),({keyCode:x7})=>{var jE=rx;switch(x7){case 0x42:x2[jE(0x1e1)]===null?x2[jE(0x1c6)](0x0):x2[jE(0x309)]();break;case 0x4e:let [x8,x9]=x5();v[jE(0x298)][jE(0x1e6)]=localStorage[jE(0x1ac)]=x8,v[jE(0x251)][jE(0x1e6)]=localStorage[jE(0x1de)]=x9;d&&(d['x1']=x8,d['y1']=x9);break;default:console[jE(0x321)](x7);};});function x3(){var jk=rx;let x7,x8,x9,xx,xr=x4();return x7=~~(U[jk(0x1e9)]-U[jk(0x254)]/xr+0x1),x8=~~(U[jk(0x1b9)]-U[jk(0x302)]/xr+0x1),x9=~~(U[jk(0x1e9)]+(S[jk(0x22b)]-U[jk(0x254)])/xr-0x1),xx=~~(U[jk(0x1b9)]+(S[jk(0x201)]-U[jk(0x302)])/xr-0x1),[x7,x8,x9,xx];}function x4(){var jp=rx;let x7=+window[jp(0x26d)][jp(0x310)][jp(0x1f2)](O)[0x2];return x7>0xa?(x7/0xa)**0x2:x7**0.1||0x1;}function x5(){var jF=rx;return N[jF(0x2e6)][jF(0x1f2)](O)['map'](x7=>+x7);}}[je(0x301)](this,r(je(0x292))[je(0x2c7)]));},{'./resources/canvas':0x2,'./resources/constants':0x3,'./resources/selectors.json':0x4,'./resources/style':0x5,'./utils/Chunk':0x6,'./utils/ImageProcessor':0x7,'./utils/Palette':0x8,'./utils/Template':0x9,'./utils/functions':0xa,'buffer':0xc}],0x2:[function(r,j,i){var jD=P;j[jD(0x2d9)]={'CHUNK_SIZE':0x100,'COLORS':[[0xca,0xe3,0xff],[0xff,0xff,0xff],[0xff,0xff,0xff],[0xe4,0xe4,0xe4],[0xc4,0xc4,0xc4],[0x88,0x88,0x88],[0x4e,0x4e,0x4e],[0x0,0x0,0x0],[0xf4,0xb3,0xae],[0xff,0xa7,0xd1],[0xff,0x54,0xb2],[0xff,0x65,0x65],[0xe5,0x0,0x0],[0x9a,0x0,0x0],[0xfe,0xa4,0x60],[0xe5,0x95,0x0],[0xa0,0x6a,0x42],[0x60,0x40,0x28],[0xf5,0xdf,0xb0],[0xff,0xf8,0x89],[0xe5,0xd9,0x0],[0x94,0xe0,0x44],[0x2,0xbe,0x1],[0x68,0x83,0x38],[0x0,0x65,0x13],[0xca,0xe3,0xff],[0x0,0xd3,0xdd],[0x0,0x83,0xc7],[0x0,0x0,0xea],[0x19,0x19,0x73],[0xcf,0x6e,0xe4],[0x82,0x0,0x80]]};},{}],0x3:[function(r,j,i){j['exports']={'MAX_REQUESTS_PER_HOUR':0xfa0,'PXL_CB':0x2*0x3e8,'MAX_TIME_STACK':0x3c*0x3e8};},{}],0x4:[function(r,j,i){var jJ=P;j[jJ(0x2d9)]={'selectedColor':jJ(0x1a2),'coords':jJ(0x1d0),'palettebox':'#palettebox','gameCanvas':jJ(0x232)};},{}],0x5:[function(r,j,i){var jT=P;j[jT(0x2d9)]=jT(0x2eb);},{}],0x6:[function(r,j,i){var jL=P;const {CHUNK_SIZE:b}=r(jL(0x30d));j[jL(0x2d9)]=class{constructor(Q,M,E){var jV=jL;this['x']=Q,this['y']=M,this['data']=E,this['lastUsing']=Date[jV(0x1b5)](),this['_c']=null;}[jL(0x185)](Q,M){var jX=jL;return this['_c']=Q+M*b<<0x2,[this[jX(0x36d)][this['_c']],this['data'][this['_c']+0x1],this[jX(0x36d)][this['_c']+0x2]];}[jL(0x175)](Q,M,E){var jw=jL;return this['_c']=Q+M*b<<0x2,[this[jw(0x36d)][this['_c']],this[jw(0x36d)][this['_c']+0x1],this[jw(0x36d)][this['_c']+0x2]]=[...E];}};},{'../resources/canvas.json':0x2}],0x7:[function(r,j,i){var jG=P;const b=r('sobel'),{floor:Q,sqrt:M,min:E}=Math,k=p=>{var jn=P;let F=new Uint8ClampedArray(p[jn(0x263)]);for(let e=0x0;e!==p['length'];e++)F[e]=p[e];return F;};j[jG(0x2d9)]=class p{constructor(){var jK=jG;this[jK(0x275)]=null,this[jK(0x1cf)]=null,this[jK(0x332)]=null,this[jK(0x1fe)]=null,this[jK(0x356)]={'LINEAR':0x0,'RANDOM':0x1,'WOYKEN':0x2};}[jG(0x1c9)](F){var jy=jG,e=F[jy(0x263)],D,J;while(0x0!==e){J=Math['floor'](Math[jy(0x327)]()*e),e-=0x1,D=F[e],F[e]=F[J],F[J]=D;}return F;}[jG(0x193)](F){var jA=jG;this[jA(0x1cf)]=F,this['template']={'width':F[jA(0x22b)],'height':F[jA(0x201)],'data':k(F[jA(0x36d)])},this[jA(0x355)]=b(this['origTemplate']['ctx'][jA(0x35c)](0x0,0x0,this['template'][jA(0x22b)],this[jA(0x275)]['height']))[jA(0x2b9)]()[jA(0x36d)],this[jA(0x332)]=null;}[jG(0x24a)](F,e){var jH=jG;const D=[];let J,T,L,V,X,w;for(let n=0x0;n!==this[jH(0x275)][jH(0x201)];n++){T=this[jH(0x275)][jH(0x22b)]*n;for(let G=0x0;G!==this['template'][jH(0x22b)];G++){J=T+G<<0x2,L=this['sobelData'][J],V=this[jH(0x355)][J|0x1],X=this[jH(0x355)][J|0x2],w=this[jH(0x275)][jH(0x36d)][J|0x3];if(w!==0xff)continue;V>=F&&V<=e&&D[jH(0x312)]({'x':G,'y':n});}}return D;}[jG(0x2f7)](F){var ja=jG;const e=Q(this[ja(0x275)]['width']/0x2),D=Q(this[ja(0x275)][ja(0x201)]/0x2),J=0x14;let T,L;const V=G=>(G['x']-e)**0x2+(G['y']-D)**0x2,X=G=>{var jW=ja;let K=[],A=[];for(let H=0x0;H!==G[jW(0x263)];H++){(G[H]['x']+G[H]['y'])%J===0x0||Math[jW(0x194)](G[H]['x']-G[H]['y'])%J===0x0?A['push'](G[H]):K['push'](G[H]);}return{'grid':A,'other':K};},w=G=>{var jY=ja;G=[...G];let K=[];const A=()=>{var jt=P;let H=0x0,W=V(G[0x0]),t,Y;for(let l=0x0;l!==G[jt(0x263)];l++){t=V(G[l]);if(t<W){W=t,H=l;if(t===0x0)break;}}return G['splice'](H,0x1)[0x0];};while(G[jY(0x263)])K[jY(0x312)](A());return K;};this[ja(0x35b)]=[];for(let G=0x0;G!==0x100;G++){let {grid:K,other:A}=X(this['_getIncrementalEdges'](G,G));K=w(K),A=w(A),this[ja(0x35b)][G]=[],A[ja(0x1f4)](H=>this[ja(0x35b)][G][ja(0x312)](H)),K[ja(0x1f4)](H=>this[ja(0x35b)][G][ja(0x312)](H));}this[ja(0x332)]=[],this[ja(0x35b)][ja(0x1f4)](H=>H['forEach'](a=>this[ja(0x332)][ja(0x312)](a)));let n;this[ja(0x332)]=this[ja(0x332)][ja(0x2c8)](({x:H,y:a})=>{var jl=ja;return n=H+a*this[jl(0x275)]['width']<<0x2,[H,a,[this[jl(0x275)][jl(0x36d)][n],this[jl(0x275)]['data'][n|0x1],this[jl(0x275)][jl(0x36d)][n|0x2]]];});}[jG(0x195)](F){var js=jG;this[js(0x1fe)]=F;}[jG(0x2b7)](){if(!this['targets'])this['_createTargets']();return this['targets'];}};},{'sobel':0xe}],0x8:[function(r,j,i){var jg=P;j[jg(0x2d9)]=class{constructor(){var jC=jg;this['elems']=null,this[jC(0x30f)]=null;}[jg(0x265)](b){var jR=jg;this[jR(0x30f)]=b[jR(0x2c8)](Q=>[...Q]);}[jg(0x1e7)](b,Q,M=0xf){var jZ=jg;return Math['abs'](b[0x0]-Q[0x0])<M&&Math[jZ(0x194)](b[0x1]-Q[0x1])<M&&Math[jZ(0x194)](b[0x2]-Q[0x2])<M;}[jg(0x28e)](b){return this['RGBToId'](b)!==null;}[jg(0x22f)](b){var jo=jg;let Q,M=Infinity,E,k;for(let F=0x2;F!==this['colors'][jo(0x263)];F++){k=this[jo(0x30f)][F];if(this[jo(0x1e7)](k,b))return k;;E=Math['abs'](k[0x0]-b[0x0])+Math[jo(0x194)](k[0x1]-b[0x1])+Math[jo(0x194)](k[0x2]-b[0x2]);E<M&&(M=E,Q=F);;};return[...this[jo(0x30f)][Q]];}[jg(0x340)](b){return this['colors'][b];}[jg(0x2dc)](b){var ju=jg;for(let Q=this['colors'][ju(0x263)]-0x1;Q!==-0x1;Q--)if(this['same'](this['colors'][Q],b))return Q;return null;}[jg(0x180)](b){var jh=jg;this[jh(0x2b3)][typeof b===jh(0x190)?this[jh(0x2dc)](b):b]['click']();}['onColorSelect'](){}[jg(0x233)](b){var jB=jg;b=Array[jB(0x1ca)](b),this[jB(0x2b3)]={},this[jB(0x30f)][jB(0x1f4)]((Q,M)=>{var jm=jB;let E=b[jm(0x1d2)](k=>this[jm(0x1e7)](Q,k[jm(0x358)][jm(0x2ea)][jm(0x1f2)](/-?\d+/g)[jm(0x2c8)](p=>+p)));if(E===void 0x0)return console['error'](jm(0x349)+Q+']');this[jm(0x2b3)][M]=E,this['elems'][M][jm(0x1ec)](jm(0x18b),()=>this[jm(0x1a0)]({'id':M,'rgb':Q}));});}};},{}],0x9:[function(r,j,i){var jI=P;const {loadImage:b}=r('./functions');class Q{constructor({x:M,y:E,width:k,height:p,name:F,src:e}){var jv=P;this['x1']=M,this['y1']=E,this['width']=k,this['height']=p,this[jv(0x2a6)](),this[jv(0x2c5)]=F,this[jv(0x2fb)]=e,this[jv(0x367)]=Q[jv(0x1bf)],this[jv(0x315)]=null,this['canvas']=null;}[jI(0x1a5)](M,E,k,p){return this['x1']<k&&this['x2']>M&&this['y1']<p&&this['y2']>E;}[jI(0x2a6)](){var jN=jI;this['x2']=this['x1']+this['width'],this['y2']=this['y1']+this[jN(0x201)];}[jI(0x307)](){var jS=jI;return this[jS(0x367)]=Q[jS(0x2b5)],new Promise((M,E)=>{var jU=jS;if(this[jU(0x2fb)]===null)return console[jU(0x24f)]('Template\x20src\x20isn\x27t\x20defined'),E();;b(this['src'])[jU(0x23c)](k=>{var jO=jU;this['img']=k,this[jO(0x1ff)]=document[jO(0x36e)](jO(0x1ff)),this[jO(0x22b)]=this[jO(0x1ff)][jO(0x22b)]=this[jO(0x315)]['width'],this[jO(0x201)]=this[jO(0x1ff)][jO(0x201)]=this[jO(0x315)]['height'],this[jO(0x2a6)](),this[jO(0x25c)]=this[jO(0x1ff)][jO(0x29c)]('2d'),this[jO(0x25c)]['drawImage'](this[jO(0x315)],0x0,0x0),this[jO(0x2d1)]=this['ctx'][jO(0x35c)](0x0,0x0,this[jO(0x22b)],this[jO(0x201)]),this[jO(0x36d)]=this['imageData']['data'],this[jO(0x367)]=Q[jO(0x261)],M(this);})[jU(0x2bd)](k=>E(k));});}[jI(0x22f)](M){var jc=jI;let E;for(E=0x0;E!==this[jc(0x36d)]['length'];E+=0x4){if(this[jc(0x36d)][E+0x3]===0x0)continue;[this[jc(0x36d)][E],this[jc(0x36d)][E+0x1],this[jc(0x36d)][E+0x2]]=M['convert']([this[jc(0x36d)][E],this[jc(0x36d)][E+0x1],this['data'][E+0x2]]);};this['ctx'][jc(0x228)](this[jc(0x2d1)],0x0,0x0);}};Q[jI(0x1bf)]=0x0,Q[jI(0x2b5)]=0x1,Q[jI(0x261)]=0x2,j[jI(0x2d9)]=Q;},{'./functions':0xa}],0xa:[function(r,j,i){var iM=P;function b(Y,l,s){return l>Y&&l<s;};function Q(Y,l){var jz=P;Y[jz(0x1c5)]=Y[jz(0x32e)]=Y[jz(0x284)]=Y[jz(0x242)]=l;};function M(Y,l){var jd=P;Object[jd(0x2ee)](Y)[jd(0x1f4)](s=>l(Y[s],s));};function E(Y){var jq=P;document[jq(0x1f6)]['appendChild'](p({'type':jq(0x358),'html':Y}));};function k(Y,l){var i0=P;if(!(i0(0x1bb)in window))return;const s=()=>new Notification(Y,l);if(Notification['permission']===i0(0x336))s();else Notification[i0(0x1a3)]!=='denied'&&Notification[i0(0x17c)](g=>{var i1=i0;if(g===i1(0x336))s();});;};function p(Y,l=[]){var i2=P;let s=Y[i2(0x2e2)]===i2(0x1e3)?document[i2(0x343)](Y[i2(0x1e3)]||''):document[i2(0x36e)](Y[i2(0x2e2)]);Y['id']&&s[i2(0x2d4)]('id',Y['id']);Y[i2(0x360)]&&s[i2(0x2d4)](i2(0x360),Y[i2(0x360)]);Y[i2(0x358)]&&s[i2(0x2d4)](i2(0x358),Y[i2(0x358)]);if(Y[i2(0x335)])s['innerHTML']=Y[i2(0x335)];else Y[i2(0x1e3)]&&(s[i2(0x2e6)]=Y[i2(0x1e3)]);Y['listeners']&&Object['entries'](Y['listeners'])[i2(0x1f4)](([g,C])=>{var i3=i2;g[i3(0x33a)]('on')?s['addEventListener'](g['substring'](0x2),C):s['addEventListener'](g,C);});Y[i2(0x1ae)]&&Object[i2(0x2d3)](Y[i2(0x1ae)])[i2(0x1f4)](([g,C])=>s[i2(0x2d4)](g,C));Y[i2(0x29d)]===!![]&&s[i2(0x291)]({'mode':i2(0x176)});if(l[i2(0x263)]!==0x0){const g=Y[i2(0x29d)]?s[i2(0x2cc)]:s;l[i2(0x1f4)](C=>g[i2(0x22e)](C));}return s;}function F(Y){var i4=P;return Y?'On':i4(0x264);};function e(Y,l=void 0x0){var i5=P;let s=document[i5(0x36e)]('a');s[i5(0x1b4)]=Y[i5(0x200)](i5(0x22c)),s[i5(0x28b)]=l,s['click']();};function D(Y){return document['getElementById'](Y);};function J(Y){return new Promise((l,s)=>{var i6=P;let g=new Image();g[i6(0x17f)]='',g['onload']=()=>l(g),g[i6(0x268)]=s,g[i6(0x2fb)]=Y;});};function T(Y){var i7=P;return p({'type':i7(0x344)},[p({'type':i7(0x344),'class':i7(0x33e),'html':'<img\x20style=\x22width:inherit;\x20height:inherit;\x22\x20src=\x22'+Y+i7(0x2d8)})]);};function L(){var i8=P;let Y=![];try{Y=window!=window[i8(0x2ad)]||document!=top[i8(0x1df)]||self[i8(0x26d)]!=top[i8(0x26d)];}catch(l){Y=!![];};return Y;};function V(Y){var i9=P;return window['importObject']={'imports':{'imported_func':l=>console[i9(0x321)](l)}},fetch(Y)['then'](l=>l[i9(0x247)]())[i9(0x23c)](l=>WebAssembly[i9(0x1a8)](l,window[i9(0x237)]));};function X(Y,l,s){var ix=P;let g=document[ix(0x36e)](ix(0x1ff)),C=g['getContext']('2d');g['width']=l,g['height']=s;let R=C[ix(0x35c)](0x0,0x0,l,s);for(let Z=0x0;Z!==Y['length'];Z++)R[ix(0x36d)][Z]=Y[Z];return C['putImageData'](R,0x0,0x0),g;};function w(Y,l){var ir=P;return Math[ir(0x2a1)](Y-0.5+Math['random']()*(l-Y+0x1));}function n(){var ij=P;return W(ij(0x369));}async function G(Y){var ii=P;const l=new FormData();l[ii(0x2b8)](ii(0x2c3),!![]);const s=await fetch(a+ii(0x224),{'credentials':'include','method':ii(0x1c2),'body':l});s['ok']?Y(await s[ii(0x351)]()):Y([]);}async function K(Y,l){var ib=P;const s=new FormData();s[ib(0x2b8)](ib(0x325),Y);const g=await fetch(a+'/api/modtools',{'credentials':ib(0x2e3),'method':ib(0x1c2),'body':s});l(g['ok'],await g[ib(0x1e3)]());}function A(){var iP=P;return W(iP(0x26c));}const H=function Y(){var iQ=P;if(!window[iQ(0x1da)]||!window['ssv'][iQ(0x31d)]||window[iQ(0x26d)][iQ(0x1b2)]===iQ(0x186))return'';const l=window[iQ(0x26d)]['host']['split']('.');return l['length']>0x2&&l[iQ(0x1a4)](),window['ssv'][iQ(0x31d)]+'.'+l[iQ(0x1b1)]('.');}(),a=(H&&window[iM(0x26d)][iM(0x2bc)]+'//'+H)+iM(0x359);async function W(l,s=!![],g=!![]){var iE=iM;g&&(l=''+a+l);try{const C=await t(l,{'credentials':s?iE(0x2e3):iE(0x330)});return C[iE(0x351)]();}catch(R){return{'errors':['Could\x20not\x20connect\x20to\x20server,\x20please\x20try\x20again\x20later\x20:(']};}}async function t(l,s={}){var ik=iM;const {timeout:timeout=0x7530}=s,g=new AbortController(),C=setTimeout(()=>g[ik(0x1a1)](),timeout),R=await fetch(l,{...s,'signal':g[ik(0x1ce)]});return clearTimeout(C),R;}j[iM(0x2d9)]={'between':b,'antialiasing':Q,'objForEach':M,'injectCSS':E,'trySendNotification':k,'factory':p,'switcherText':F,'downloadCanvas':e,'$':D,'loadImage':J,'createPanelButton':T,'isFrame':L,'loadWASM':V,'createCanvasFromData':X,'rand':w,'fetchApiMe':n,'getModList':G,'submitRemMod':K,'banMe':A};},{}],0xb:[function(r,j,b){'use strict';var ip=P;b[ip(0x218)]=D,b[ip(0x278)]=T,b[ip(0x2c2)]=X;var Q=[],M=[],E=typeof Uint8Array!==ip(0x2ba)?Uint8Array:Array,k=ip(0x1be);for(var p=0x0,F=k['length'];p<F;++p){Q[p]=k[p],M[k['charCodeAt'](p)]=p;}M['-'[ip(0x30c)](0x0)]=0x3e,M['_'['charCodeAt'](0x0)]=0x3f;function e(w){var iF=ip,n=w['length'];if(n%0x4>0x0)throw new Error(iF(0x18e));var G=w['indexOf']('=');if(G===-0x1)G=n;var K=G===n?0x0:0x4-G%0x4;return[G,K];}function D(w){var n=e(w),G=n[0x0],K=n[0x1];return(G+K)*0x3/0x4-K;}function J(w,n,G){return(n+G)*0x3/0x4-G;}function T(w){var ie=ip,n,G=e(w),K=G[0x0],A=G[0x1],H=new E(J(w,K,A)),a=0x0,W=A>0x0?K-0x4:K,t;for(t=0x0;t<W;t+=0x4){n=M[w[ie(0x30c)](t)]<<0x12|M[w[ie(0x30c)](t+0x1)]<<0xc|M[w[ie(0x30c)](t+0x2)]<<0x6|M[w[ie(0x30c)](t+0x3)],H[a++]=n>>0x10&0xff,H[a++]=n>>0x8&0xff,H[a++]=n&0xff;}return A===0x2&&(n=M[w[ie(0x30c)](t)]<<0x2|M[w[ie(0x30c)](t+0x1)]>>0x4,H[a++]=n&0xff),A===0x1&&(n=M[w[ie(0x30c)](t)]<<0xa|M[w[ie(0x30c)](t+0x1)]<<0x4|M[w['charCodeAt'](t+0x2)]>>0x2,H[a++]=n>>0x8&0xff,H[a++]=n&0xff),H;}function L(w){return Q[w>>0x12&0x3f]+Q[w>>0xc&0x3f]+Q[w>>0x6&0x3f]+Q[w&0x3f];}function V(w,n,G){var iD=ip,K,A=[];for(var H=n;H<G;H+=0x3){K=(w[H]<<0x10&0xff0000)+(w[H+0x1]<<0x8&0xff00)+(w[H+0x2]&0xff),A['push'](L(K));}return A[iD(0x1b1)]('');}function X(w){var iJ=ip,n,G=w[iJ(0x263)],K=G%0x3,A=[],H=0x3fff;for(var a=0x0,W=G-K;a<W;a+=H){A[iJ(0x312)](V(w,a,a+H>W?W:a+H));}if(K===0x1)n=w[G-0x1],A[iJ(0x312)](Q[n>>0x2]+Q[n<<0x4&0x3f]+'==');else K===0x2&&(n=(w[G-0x2]<<0x8)+w[G-0x1],A[iJ(0x312)](Q[n>>0xa]+Q[n>>0x4&0x3f]+Q[n<<0x2&0x3f]+'='));return A[iJ(0x1b1)]('');}},{}],0xc:[function(r,j,i){var bl=P;(function(b){/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
'use strict';var iT=P;var Q=r(iT(0x249)),M=r(iT(0x2a4));i[iT(0x2c7)]=b,i['SlowBuffer']=n,i[iT(0x28d)]=0x32;var E=0x7fffffff;i[iT(0x2b1)]=E,b[iT(0x198)]=k();!b[iT(0x198)]&&typeof console!==iT(0x2ba)&&typeof console[iT(0x24f)]==='function'&&console[iT(0x24f)](iT(0x2ce)+'`buffer`\x20v5.x.\x20Use\x20`buffer`\x20v4.x\x20if\x20you\x20require\x20old\x20browser\x20support.');function k(){var iL=iT;try{var x5=new Uint8Array(0x1);return x5[iL(0x29a)]={'__proto__':Uint8Array['prototype'],'foo':function(){return 0x2a;}},x5[iL(0x274)]()===0x2a;}catch(x6){return![];}}Object[iT(0x202)](b['prototype'],iT(0x306),{'enumerable':!![],'get':function(){var iV=iT;if(!b[iV(0x246)](this))return undefined;return this['buffer'];}}),Object[iT(0x202)](b[iT(0x282)],iT(0x258),{'enumerable':!![],'get':function(){var iX=iT;if(!b[iX(0x246)](this))return undefined;return this[iX(0x27b)];}});function p(x5){var iw=iT;if(x5>E)throw new RangeError(iw(0x18a)+x5+iw(0x206));var x6=new Uint8Array(x5);return x6[iw(0x29a)]=b[iw(0x282)],x6;}function b(x5,x6,x7){var iG=iT;if(typeof x5===iG(0x1aa)){if(typeof x6==='string')throw new TypeError(iG(0x2e0));return J(x5);}return F(x5,x6,x7);}typeof Symbol!=='undefined'&&Symbol[iT(0x2d5)]!=null&&b[Symbol[iT(0x2d5)]]===b&&Object[iT(0x202)](b,Symbol[iT(0x2d5)],{'value':null,'configurable':!![],'enumerable':![],'writable':![]});b[iT(0x220)]=0x2000;function F(x5,x6,x7){var iK=iT;if(typeof x5===iK(0x250))return T(x5,x6);if(ArrayBuffer[iK(0x269)](x5))return L(x5);if(x5==null)throw TypeError(iK(0x18c)+iK(0x21d)+typeof x5);if(x3(x5,ArrayBuffer)||x5&&x3(x5[iK(0x292)],ArrayBuffer))return V(x5,x6,x7);if(typeof x5===iK(0x1aa))throw new TypeError(iK(0x1e4));var x8=x5[iK(0x1fa)]&&x5[iK(0x1fa)]();if(x8!=null&&x8!==x5)return b[iK(0x1ca)](x8,x6,x7);var x9=X(x5);if(x9)return x9;if(typeof Symbol!==iK(0x2ba)&&Symbol['toPrimitive']!=null&&typeof x5[Symbol[iK(0x2f1)]]===iK(0x170))return b[iK(0x1ca)](x5[Symbol['toPrimitive']](iK(0x250)),x6,x7);throw new TypeError(iK(0x18c)+iK(0x21d)+typeof x5);}b[iT(0x1ca)]=function(x5,x6,x7){return F(x5,x6,x7);},b[iT(0x282)]['__proto__']=Uint8Array[iT(0x282)],b[iT(0x29a)]=Uint8Array;function e(x5){var iy=iT;if(typeof x5!==iy(0x1aa))throw new TypeError(iy(0x236));else{if(x5<0x0)throw new RangeError(iy(0x18a)+x5+iy(0x206));}}function D(x5,x6,x7){e(x5);if(x5<=0x0)return p(x5);if(x6!==undefined)return typeof x7==='string'?p(x5)['fill'](x6,x7):p(x5)['fill'](x6);return p(x5);}b[iT(0x1d8)]=function(x5,x6,x7){return D(x5,x6,x7);};function J(x5){return e(x5),p(x5<0x0?0x0:w(x5)|0x0);}b[iT(0x34c)]=function(x5){return J(x5);},b['allocUnsafeSlow']=function(x5){return J(x5);};function T(x5,x6){var iA=iT;(typeof x6!==iA(0x250)||x6==='')&&(x6=iA(0x1cb));if(!b['isEncoding'](x6))throw new TypeError(iA(0x32c)+x6);var x7=G(x5,x6)|0x0,x8=p(x7),x9=x8[iA(0x354)](x5,x6);return x9!==x7&&(x8=x8['slice'](0x0,x9)),x8;}function L(x5){var iH=iT,x6=x5[iH(0x263)]<0x0?0x0:w(x5[iH(0x263)])|0x0,x7=p(x6);for(var x8=0x0;x8<x6;x8+=0x1){x7[x8]=x5[x8]&0xff;}return x7;}function V(x5,x6,x7){var ia=iT;if(x6<0x0||x5[ia(0x218)]<x6)throw new RangeError('\x22offset\x22\x20is\x20outside\x20of\x20buffer\x20bounds');if(x5[ia(0x218)]<x6+(x7||0x0))throw new RangeError(ia(0x2ec));var x8;if(x6===undefined&&x7===undefined)x8=new Uint8Array(x5);else x7===undefined?x8=new Uint8Array(x5,x6):x8=new Uint8Array(x5,x6,x7);return x8[ia(0x29a)]=b[ia(0x282)],x8;}function X(x5){var iW=iT;if(b[iW(0x246)](x5)){var x6=w(x5[iW(0x263)])|0x0,x7=p(x6);if(x7[iW(0x263)]===0x0)return x7;return x5[iW(0x2e5)](x7,0x0,0x0,x6),x7;}if(x5[iW(0x263)]!==undefined){if(typeof x5[iW(0x263)]!==iW(0x1aa)||x4(x5[iW(0x263)]))return p(0x0);return L(x5);}if(x5['type']===iW(0x2c7)&&Array['isArray'](x5[iW(0x36d)]))return L(x5[iW(0x36d)]);}function w(x5){var it=iT;if(x5>=E)throw new RangeError(it(0x36c)+it(0x2b4)+E[it(0x28c)](0x10)+'\x20bytes');return x5|0x0;}function n(x5){var iY=iT;return+x5!=x5&&(x5=0x0),b[iY(0x1d8)](+x5);}b[iT(0x246)]=function x5(x6){var il=iT;return x6!=null&&x6['_isBuffer']===!![]&&x6!==b[il(0x282)];},b[iT(0x1f9)]=function x6(x7,x8){var is=iT;if(x3(x7,Uint8Array))x7=b[is(0x1ca)](x7,x7[is(0x258)],x7[is(0x218)]);if(x3(x8,Uint8Array))x8=b[is(0x1ca)](x8,x8[is(0x258)],x8['byteLength']);if(!b['isBuffer'](x7)||!b['isBuffer'](x8))throw new TypeError('The\x20\x22buf1\x22,\x20\x22buf2\x22\x20arguments\x20must\x20be\x20one\x20of\x20type\x20Buffer\x20or\x20Uint8Array');if(x7===x8)return 0x0;var x9=x7[is(0x263)],xx=x8[is(0x263)];for(var xr=0x0,xj=Math[is(0x272)](x9,xx);xr<xj;++xr){if(x7[xr]!==x8[xr]){x9=x7[xr],xx=x8[xr];break;}}if(x9<xx)return-0x1;if(xx<x9)return 0x1;return 0x0;},b[iT(0x1dd)]=function x7(x8){var ig=iT;switch(String(x8)[ig(0x34d)]()){case ig(0x2ac):case'utf8':case ig(0x2dd):case'ascii':case ig(0x2f0):case ig(0x304):case ig(0x1a7):case'ucs2':case ig(0x1af):case ig(0x2e8):case ig(0x368):return!![];default:return![];}},b['concat']=function x8(x9,xx){var iC=iT;if(!Array['isArray'](x9))throw new TypeError(iC(0x2cf));if(x9[iC(0x263)]===0x0)return b[iC(0x1d8)](0x0);var xr;if(xx===undefined){xx=0x0;for(xr=0x0;xr<x9[iC(0x263)];++xr){xx+=x9[xr][iC(0x263)];}}var xj=b[iC(0x34c)](xx),xi=0x0;for(xr=0x0;xr<x9[iC(0x263)];++xr){var xb=x9[xr];x3(xb,Uint8Array)&&(xb=b['from'](xb));if(!b['isBuffer'](xb))throw new TypeError(iC(0x2cf));xb[iC(0x2e5)](xj,xi),xi+=xb['length'];}return xj;};function G(x9,xx){var iR=iT;if(b['isBuffer'](x9))return x9[iR(0x263)];if(ArrayBuffer[iR(0x269)](x9)||x3(x9,ArrayBuffer))return x9[iR(0x218)];if(typeof x9!==iR(0x250))throw new TypeError(iR(0x1ee)+iR(0x323)+typeof x9);var xr=x9[iR(0x263)],xj=arguments[iR(0x263)]>0x2&&arguments[0x2]===!![];if(!xj&&xr===0x0)return 0x0;var xi=![];for(;;){switch(xx){case iR(0x238):case iR(0x2f0):case iR(0x304):return xr;case iR(0x1cb):case'utf-8':return d(x9)['length'];case iR(0x27f):case'ucs-2':case iR(0x2e8):case iR(0x368):return xr*0x2;case iR(0x2ac):return xr>>>0x1;case iR(0x1a7):return x1(x9)[iR(0x263)];default:if(xi)return xj?-0x1:d(x9)[iR(0x263)];xx=(''+xx)['toLowerCase'](),xi=!![];}}}b[iT(0x218)]=G;function K(x9,xx,xr){var iZ=iT,xj=![];(xx===undefined||xx<0x0)&&(xx=0x0);if(xx>this[iZ(0x263)])return'';(xr===undefined||xr>this['length'])&&(xr=this[iZ(0x263)]);if(xr<=0x0)return'';xr>>>=0x0,xx>>>=0x0;if(xr<=xx)return'';if(!x9)x9=iZ(0x1cb);while(!![]){switch(x9){case iZ(0x2ac):return B(this,xx,xr);case iZ(0x1cb):case iZ(0x2dd):return R(this,xx,xr);case iZ(0x238):return u(this,xx,xr);case iZ(0x2f0):case iZ(0x304):return h(this,xx,xr);case iZ(0x1a7):return C(this,xx,xr);case'ucs2':case iZ(0x1af):case iZ(0x2e8):case'utf-16le':return m(this,xx,xr);default:if(xj)throw new TypeError('Unknown\x20encoding:\x20'+x9);x9=(x9+'')[iZ(0x34d)](),xj=!![];}}}b['prototype'][iT(0x2ff)]=!![];function A(x9,xx,xr){var xj=x9[xx];x9[xx]=x9[xr],x9[xr]=xj;}b['prototype']['swap16']=function x9(){var io=iT,xx=this[io(0x263)];if(xx%0x2!==0x0)throw new RangeError(io(0x1db));for(var xr=0x0;xr<xx;xr+=0x2){A(this,xr,xr+0x1);}return this;},b[iT(0x282)][iT(0x1cc)]=function xx(){var iu=iT,xr=this[iu(0x263)];if(xr%0x4!==0x0)throw new RangeError(iu(0x230));for(var xj=0x0;xj<xr;xj+=0x4){A(this,xj,xj+0x3),A(this,xj+0x1,xj+0x2);}return this;},b[iT(0x282)][iT(0x1c1)]=function xr(){var ih=iT,xj=this['length'];if(xj%0x8!==0x0)throw new RangeError(ih(0x36f));for(var xi=0x0;xi<xj;xi+=0x8){A(this,xi,xi+0x7),A(this,xi+0x1,xi+0x6),A(this,xi+0x2,xi+0x5),A(this,xi+0x3,xi+0x4);}return this;},b[iT(0x282)][iT(0x28c)]=function xj(){var iB=iT,xi=this[iB(0x263)];if(xi===0x0)return'';if(arguments[iB(0x263)]===0x0)return R(this,0x0,xi);return K[iB(0x2e7)](this,arguments);},b[iT(0x282)][iT(0x226)]=b[iT(0x282)]['toString'],b[iT(0x282)][iT(0x347)]=function xi(xb){var im=iT;if(!b['isBuffer'](xb))throw new TypeError('Argument\x20must\x20be\x20a\x20Buffer');if(this===xb)return!![];return b[im(0x1f9)](this,xb)===0x0;},b[iT(0x282)][iT(0x267)]=function xb(){var iv=iT,xf='',xP=i['INSPECT_MAX_BYTES'];xf=this['toString'](iv(0x2ac),0x0,xP)[iv(0x23f)](/(.{2})/g,iv(0x26a))[iv(0x177)]();if(this['length']>xP)xf+=iv(0x25e);return iv(0x203)+xf+'>';},b['prototype'][iT(0x1f9)]=function xf(xP,xQ,xM,xE,xk){var iI=iT;x3(xP,Uint8Array)&&(xP=b[iI(0x1ca)](xP,xP[iI(0x258)],xP['byteLength']));if(!b[iI(0x246)](xP))throw new TypeError(iI(0x26b)+iI(0x323)+typeof xP);xQ===undefined&&(xQ=0x0);xM===undefined&&(xM=xP?xP[iI(0x263)]:0x0);xE===undefined&&(xE=0x0);xk===undefined&&(xk=this[iI(0x263)]);if(xQ<0x0||xM>xP[iI(0x263)]||xE<0x0||xk>this[iI(0x263)])throw new RangeError(iI(0x2ed));if(xE>=xk&&xQ>=xM)return 0x0;if(xE>=xk)return-0x1;if(xQ>=xM)return 0x1;xQ>>>=0x0,xM>>>=0x0,xE>>>=0x0,xk>>>=0x0;if(this===xP)return 0x0;var xp=xk-xE,xF=xM-xQ,xe=Math['min'](xp,xF),xD=this[iI(0x1d7)](xE,xk),xJ=xP[iI(0x1d7)](xQ,xM);for(var xT=0x0;xT<xe;++xT){if(xD[xT]!==xJ[xT]){xp=xD[xT],xF=xJ[xT];break;}}if(xp<xF)return-0x1;if(xF<xp)return 0x1;return 0x0;};function H(xP,xQ,xM,xE,xk){var iN=iT;if(xP[iN(0x263)]===0x0)return-0x1;if(typeof xM===iN(0x250))xE=xM,xM=0x0;else{if(xM>0x7fffffff)xM=0x7fffffff;else xM<-0x80000000&&(xM=-0x80000000);}xM=+xM;x4(xM)&&(xM=xk?0x0:xP[iN(0x263)]-0x1);if(xM<0x0)xM=xP['length']+xM;if(xM>=xP[iN(0x263)]){if(xk)return-0x1;else xM=xP[iN(0x263)]-0x1;}else{if(xM<0x0){if(xk)xM=0x0;else return-0x1;}}typeof xQ===iN(0x250)&&(xQ=b[iN(0x1ca)](xQ,xE));if(b[iN(0x246)](xQ)){if(xQ[iN(0x263)]===0x0)return-0x1;return a(xP,xQ,xM,xE,xk);}else{if(typeof xQ===iN(0x1aa)){xQ=xQ&0xff;if(typeof Uint8Array[iN(0x282)][iN(0x262)]===iN(0x170))return xk?Uint8Array['prototype'][iN(0x262)][iN(0x301)](xP,xQ,xM):Uint8Array['prototype'][iN(0x2f2)][iN(0x301)](xP,xQ,xM);return a(xP,[xQ],xM,xE,xk);}}throw new TypeError(iN(0x197));}function a(xP,xQ,xM,xE,xk){var iS=iT,xp=0x1,xF=xP['length'],xe=xQ[iS(0x263)];if(xE!==undefined){xE=String(xE)[iS(0x34d)]();if(xE===iS(0x27f)||xE==='ucs-2'||xE===iS(0x2e8)||xE==='utf-16le'){if(xP['length']<0x2||xQ[iS(0x263)]<0x2)return-0x1;xp=0x2,xF/=0x2,xe/=0x2,xM/=0x2;}}function xD(xX,xw){var iU=iS;return xp===0x1?xX[xw]:xX[iU(0x1c7)](xw*xp);}var xJ;if(xk){var xT=-0x1;for(xJ=xM;xJ<xF;xJ++){if(xD(xP,xJ)===xD(xQ,xT===-0x1?0x0:xJ-xT)){if(xT===-0x1)xT=xJ;if(xJ-xT+0x1===xe)return xT*xp;}else{if(xT!==-0x1)xJ-=xJ-xT;xT=-0x1;}}}else{if(xM+xe>xF)xM=xF-xe;for(xJ=xM;xJ>=0x0;xJ--){var xL=!![];for(var xV=0x0;xV<xe;xV++){if(xD(xP,xJ+xV)!==xD(xQ,xV)){xL=![];break;}}if(xL)return xJ;}}return-0x1;}b[iT(0x282)][iT(0x25a)]=function xP(xQ,xM,xE){return this['indexOf'](xQ,xM,xE)!==-0x1;},b['prototype'][iT(0x262)]=function xQ(xM,xE,xk){return H(this,xM,xE,xk,!![]);},b[iT(0x282)][iT(0x2f2)]=function xM(xE,xk,xp){return H(this,xE,xk,xp,![]);};function W(xE,xk,xp,xF){var iO=iT;xp=Number(xp)||0x0;var xe=xE[iO(0x263)]-xp;!xF?xF=xe:(xF=Number(xF),xF>xe&&(xF=xe));var xD=xk[iO(0x263)];xF>xD/0x2&&(xF=xD/0x2);for(var xJ=0x0;xJ<xF;++xJ){var xT=parseInt(xk[iO(0x328)](xJ*0x2,0x2),0x10);if(x4(xT))return xJ;xE[xp+xJ]=xT;}return xJ;}function t(xE,xk,xp,xF){var ic=iT;return x2(d(xk,xE[ic(0x263)]-xp),xE,xp,xF);}function Y(xE,xk,xp,xF){return x2(q(xk),xE,xp,xF);}function l(xE,xk,xp,xF){return Y(xE,xk,xp,xF);}function s(xE,xk,xp,xF){return x2(x1(xk),xE,xp,xF);}function g(xE,xk,xp,xF){var iz=iT;return x2(x0(xk,xE[iz(0x263)]-xp),xE,xp,xF);}b['prototype'][iT(0x354)]=function xE(xk,xp,xF,xe){var id=iT;if(xp===undefined)xe=id(0x1cb),xF=this[id(0x263)],xp=0x0;else{if(xF===undefined&&typeof xp===id(0x250))xe=xp,xF=this[id(0x263)],xp=0x0;else{if(isFinite(xp)){xp=xp>>>0x0;if(isFinite(xF)){xF=xF>>>0x0;if(xe===undefined)xe=id(0x1cb);}else xe=xF,xF=undefined;}else throw new Error(id(0x1d5));}}var xD=this['length']-xp;if(xF===undefined||xF>xD)xF=xD;if(xk['length']>0x0&&(xF<0x0||xp<0x0)||xp>this[id(0x263)])throw new RangeError(id(0x2c6));if(!xe)xe=id(0x1cb);var xJ=![];for(;;){switch(xe){case'hex':return W(this,xk,xp,xF);case id(0x1cb):case'utf-8':return t(this,xk,xp,xF);case id(0x238):return Y(this,xk,xp,xF);case id(0x2f0):case'binary':return l(this,xk,xp,xF);case id(0x1a7):return s(this,xk,xp,xF);case id(0x27f):case'ucs-2':case'utf16le':case'utf-16le':return g(this,xk,xp,xF);default:if(xJ)throw new TypeError(id(0x32c)+xe);xe=(''+xe)[id(0x34d)](),xJ=!![];}}},b[iT(0x282)][iT(0x27d)]=function xk(){var iq=iT;return{'type':'Buffer','data':Array[iq(0x282)][iq(0x1d7)][iq(0x301)](this[iq(0x17e)]||this,0x0)};};function C(xp,xF,xe){var b0=iT;return xF===0x0&&xe===xp[b0(0x263)]?Q[b0(0x2c2)](xp):Q[b0(0x2c2)](xp[b0(0x1d7)](xF,xe));}function R(xp,xF,xe){var b1=iT;xe=Math[b1(0x272)](xp[b1(0x263)],xe);var xD=[],xJ=xF;while(xJ<xe){var xT=xp[xJ],xL=null,xV=xT>0xef?0x4:xT>0xdf?0x3:xT>0xbf?0x2:0x1;if(xJ+xV<=xe){var xX,xw,xn,xG;switch(xV){case 0x1:xT<0x80&&(xL=xT);break;case 0x2:xX=xp[xJ+0x1];(xX&0xc0)===0x80&&(xG=(xT&0x1f)<<0x6|xX&0x3f,xG>0x7f&&(xL=xG));break;case 0x3:xX=xp[xJ+0x1],xw=xp[xJ+0x2];(xX&0xc0)===0x80&&(xw&0xc0)===0x80&&(xG=(xT&0xf)<<0xc|(xX&0x3f)<<0x6|xw&0x3f,xG>0x7ff&&(xG<0xd800||xG>0xdfff)&&(xL=xG));break;case 0x4:xX=xp[xJ+0x1],xw=xp[xJ+0x2],xn=xp[xJ+0x3];(xX&0xc0)===0x80&&(xw&0xc0)===0x80&&(xn&0xc0)===0x80&&(xG=(xT&0xf)<<0x12|(xX&0x3f)<<0xc|(xw&0x3f)<<0x6|xn&0x3f,xG>0xffff&&xG<0x110000&&(xL=xG));}}if(xL===null)xL=0xfffd,xV=0x1;else xL>0xffff&&(xL-=0x10000,xD[b1(0x312)](xL>>>0xa&0x3ff|0xd800),xL=0xdc00|xL&0x3ff);xD[b1(0x312)](xL),xJ+=xV;}return o(xD);}var Z=0x1000;function o(xp){var b2=iT,xF=xp[b2(0x263)];if(xF<=Z)return String[b2(0x183)][b2(0x2e7)](String,xp);var xe='',xD=0x0;while(xD<xF){xe+=String[b2(0x183)][b2(0x2e7)](String,xp['slice'](xD,xD+=Z));}return xe;}function u(xp,xF,xe){var b3=iT,xD='';xe=Math['min'](xp['length'],xe);for(var xJ=xF;xJ<xe;++xJ){xD+=String[b3(0x183)](xp[xJ]&0x7f);}return xD;}function h(xp,xF,xe){var b4=iT,xD='';xe=Math['min'](xp['length'],xe);for(var xJ=xF;xJ<xe;++xJ){xD+=String[b4(0x183)](xp[xJ]);}return xD;}function B(xp,xF,xe){var xD=xp['length'];if(!xF||xF<0x0)xF=0x0;if(!xe||xe<0x0||xe>xD)xe=xD;var xJ='';for(var xT=xF;xT<xe;++xT){xJ+=z(xp[xT]);}return xJ;}function m(xp,xF,xe){var b5=iT,xD=xp[b5(0x1d7)](xF,xe),xJ='';for(var xT=0x0;xT<xD[b5(0x263)];xT+=0x2){xJ+=String['fromCharCode'](xD[xT]+xD[xT+0x1]*0x100);}return xJ;}b['prototype']['slice']=function xp(xF,xe){var b6=iT,xD=this[b6(0x263)];xF=~~xF,xe=xe===undefined?xD:~~xe;if(xF<0x0){xF+=xD;if(xF<0x0)xF=0x0;}else xF>xD&&(xF=xD);if(xe<0x0){xe+=xD;if(xe<0x0)xe=0x0;}else xe>xD&&(xe=xD);if(xe<xF)xe=xF;var xJ=this['subarray'](xF,xe);return xJ[b6(0x29a)]=b['prototype'],xJ;};function v(xF,xe,xD){var b7=iT;if(xF%0x1!==0x0||xF<0x0)throw new RangeError(b7(0x29e));if(xF+xe>xD)throw new RangeError(b7(0x2e1));}b[iT(0x282)][iT(0x260)]=function xF(xe,xD,xJ){var b8=iT;xe=xe>>>0x0,xD=xD>>>0x0;if(!xJ)v(xe,xD,this[b8(0x263)]);var xT=this[xe],xL=0x1,xV=0x0;while(++xV<xD&&(xL*=0x100)){xT+=this[xe+xV]*xL;}return xT;},b['prototype'][iT(0x29b)]=function xe(xD,xJ,xT){xD=xD>>>0x0,xJ=xJ>>>0x0;!xT&&v(xD,xJ,this['length']);var xL=this[xD+--xJ],xV=0x1;while(xJ>0x0&&(xV*=0x100)){xL+=this[xD+--xJ]*xV;}return xL;},b['prototype'][iT(0x253)]=function xD(xJ,xT){var b9=iT;xJ=xJ>>>0x0;if(!xT)v(xJ,0x1,this[b9(0x263)]);return this[xJ];},b[iT(0x282)][iT(0x32a)]=function xJ(xT,xL){var bx=iT;xT=xT>>>0x0;if(!xL)v(xT,0x2,this[bx(0x263)]);return this[xT]|this[xT+0x1]<<0x8;},b[iT(0x282)][iT(0x1c7)]=function xT(xL,xV){var br=iT;xL=xL>>>0x0;if(!xV)v(xL,0x2,this[br(0x263)]);return this[xL]<<0x8|this[xL+0x1];},b[iT(0x282)][iT(0x210)]=function xL(xV,xX){var bj=iT;xV=xV>>>0x0;if(!xX)v(xV,0x4,this[bj(0x263)]);return(this[xV]|this[xV+0x1]<<0x8|this[xV+0x2]<<0x10)+this[xV+0x3]*0x1000000;},b[iT(0x282)][iT(0x215)]=function xV(xX,xw){var bi=iT;xX=xX>>>0x0;if(!xw)v(xX,0x4,this[bi(0x263)]);return this[xX]*0x1000000+(this[xX+0x1]<<0x10|this[xX+0x2]<<0x8|this[xX+0x3]);},b[iT(0x282)][iT(0x35e)]=function xX(xw,xn,xG){var bb=iT;xw=xw>>>0x0,xn=xn>>>0x0;if(!xG)v(xw,xn,this[bb(0x263)]);var xK=this[xw],xy=0x1,xA=0x0;while(++xA<xn&&(xy*=0x100)){xK+=this[xw+xA]*xy;}xy*=0x80;if(xK>=xy)xK-=Math['pow'](0x2,0x8*xn);return xK;},b[iT(0x282)][iT(0x2c1)]=function xw(xn,xG,xK){var bf=iT;xn=xn>>>0x0,xG=xG>>>0x0;if(!xK)v(xn,xG,this[bf(0x263)]);var xy=xG,xA=0x1,xH=this[xn+--xy];while(xy>0x0&&(xA*=0x100)){xH+=this[xn+--xy]*xA;}xA*=0x80;if(xH>=xA)xH-=Math[bf(0x31c)](0x2,0x8*xG);return xH;},b[iT(0x282)][iT(0x259)]=function xn(xG,xK){var bP=iT;xG=xG>>>0x0;if(!xK)v(xG,0x1,this[bP(0x263)]);if(!(this[xG]&0x80))return this[xG];return(0xff-this[xG]+0x1)*-0x1;},b[iT(0x282)][iT(0x189)]=function xG(xK,xy){var bQ=iT;xK=xK>>>0x0;if(!xy)v(xK,0x2,this[bQ(0x263)]);var xA=this[xK]|this[xK+0x1]<<0x8;return xA&0x8000?xA|0xffff0000:xA;},b['prototype'][iT(0x181)]=function xK(xy,xA){xy=xy>>>0x0;if(!xA)v(xy,0x2,this['length']);var xH=this[xy+0x1]|this[xy]<<0x8;return xH&0x8000?xH|0xffff0000:xH;},b['prototype'][iT(0x31e)]=function xy(xA,xH){var bM=iT;xA=xA>>>0x0;if(!xH)v(xA,0x4,this[bM(0x263)]);return this[xA]|this[xA+0x1]<<0x8|this[xA+0x2]<<0x10|this[xA+0x3]<<0x18;},b[iT(0x282)][iT(0x1e2)]=function xA(xH,xa){var bE=iT;xH=xH>>>0x0;if(!xa)v(xH,0x4,this[bE(0x263)]);return this[xH]<<0x18|this[xH+0x1]<<0x10|this[xH+0x2]<<0x8|this[xH+0x3];},b['prototype'][iT(0x219)]=function xH(xa,xW){var bk=iT;xa=xa>>>0x0;if(!xW)v(xa,0x4,this[bk(0x263)]);return M[bk(0x1ba)](this,xa,!![],0x17,0x4);},b['prototype'][iT(0x326)]=function xa(xW,xt){xW=xW>>>0x0;if(!xt)v(xW,0x4,this['length']);return M['read'](this,xW,![],0x17,0x4);},b[iT(0x282)]['readDoubleLE']=function xW(xt,xY){var bp=iT;xt=xt>>>0x0;if(!xY)v(xt,0x8,this[bp(0x263)]);return M[bp(0x1ba)](this,xt,!![],0x34,0x8);},b[iT(0x282)]['readDoubleBE']=function xt(xY,xl){var bF=iT;xY=xY>>>0x0;if(!xl)v(xY,0x8,this['length']);return M[bF(0x1ba)](this,xY,![],0x34,0x8);};function I(xY,xl,xs,xg,xC,xR){var be=iT;if(!b[be(0x246)](xY))throw new TypeError(be(0x2f9));if(xl>xC||xl<xR)throw new RangeError(be(0x18f));if(xs+xg>xY['length'])throw new RangeError('Index\x20out\x20of\x20range');}b['prototype'][iT(0x1f1)]=function xY(xl,xs,xg,xC){var bD=iT;xl=+xl,xs=xs>>>0x0,xg=xg>>>0x0;if(!xC){var xR=Math[bD(0x31c)](0x2,0x8*xg)-0x1;I(this,xl,xs,xg,xR,0x0);}var xZ=0x1,xo=0x0;this[xs]=xl&0xff;while(++xo<xg&&(xZ*=0x100)){this[xs+xo]=xl/xZ&0xff;}return xs+xg;},b['prototype'][iT(0x31f)]=function xl(xs,xg,xC,xR){var bJ=iT;xs=+xs,xg=xg>>>0x0,xC=xC>>>0x0;if(!xR){var xZ=Math[bJ(0x31c)](0x2,0x8*xC)-0x1;I(this,xs,xg,xC,xZ,0x0);}var xo=xC-0x1,xu=0x1;this[xg+xo]=xs&0xff;while(--xo>=0x0&&(xu*=0x100)){this[xg+xo]=xs/xu&0xff;}return xg+xC;},b['prototype'][iT(0x289)]=function xs(xg,xC,xR){xg=+xg,xC=xC>>>0x0;if(!xR)I(this,xg,xC,0x1,0xff,0x0);return this[xC]=xg&0xff,xC+0x1;},b['prototype'][iT(0x338)]=function xg(xC,xR,xZ){xC=+xC,xR=xR>>>0x0;if(!xZ)I(this,xC,xR,0x2,0xffff,0x0);return this[xR]=xC&0xff,this[xR+0x1]=xC>>>0x8,xR+0x2;},b[iT(0x282)][iT(0x2f3)]=function xC(xR,xZ,xo){xR=+xR,xZ=xZ>>>0x0;if(!xo)I(this,xR,xZ,0x2,0xffff,0x0);return this[xZ]=xR>>>0x8,this[xZ+0x1]=xR&0xff,xZ+0x2;},b['prototype'][iT(0x1dc)]=function xR(xZ,xo,xu){xZ=+xZ,xo=xo>>>0x0;if(!xu)I(this,xZ,xo,0x4,0xffffffff,0x0);return this[xo+0x3]=xZ>>>0x18,this[xo+0x2]=xZ>>>0x10,this[xo+0x1]=xZ>>>0x8,this[xo]=xZ&0xff,xo+0x4;},b['prototype'][iT(0x30a)]=function xZ(xo,xu,xh){xo=+xo,xu=xu>>>0x0;if(!xh)I(this,xo,xu,0x4,0xffffffff,0x0);return this[xu]=xo>>>0x18,this[xu+0x1]=xo>>>0x10,this[xu+0x2]=xo>>>0x8,this[xu+0x3]=xo&0xff,xu+0x4;},b[iT(0x282)][iT(0x1c3)]=function xo(xu,xh,xB,xm){var bT=iT;xu=+xu,xh=xh>>>0x0;if(!xm){var xv=Math[bT(0x31c)](0x2,0x8*xB-0x1);I(this,xu,xh,xB,xv-0x1,-xv);}var xI=0x0,xN=0x1,xS=0x0;this[xh]=xu&0xff;while(++xI<xB&&(xN*=0x100)){xu<0x0&&xS===0x0&&this[xh+xI-0x1]!==0x0&&(xS=0x1),this[xh+xI]=(xu/xN>>0x0)-xS&0xff;}return xh+xB;},b['prototype'][iT(0x1bc)]=function xu(xh,xB,xm,xv){var bL=iT;xh=+xh,xB=xB>>>0x0;if(!xv){var xI=Math[bL(0x31c)](0x2,0x8*xm-0x1);I(this,xh,xB,xm,xI-0x1,-xI);}var xN=xm-0x1,xS=0x1,xU=0x0;this[xB+xN]=xh&0xff;while(--xN>=0x0&&(xS*=0x100)){xh<0x0&&xU===0x0&&this[xB+xN+0x1]!==0x0&&(xU=0x1),this[xB+xN]=(xh/xS>>0x0)-xU&0xff;}return xB+xm;},b['prototype']['writeInt8']=function xh(xB,xm,xv){xB=+xB,xm=xm>>>0x0;if(!xv)I(this,xB,xm,0x1,0x7f,-0x80);if(xB<0x0)xB=0xff+xB+0x1;return this[xm]=xB&0xff,xm+0x1;},b['prototype'][iT(0x222)]=function xB(xm,xv,xI){xm=+xm,xv=xv>>>0x0;if(!xI)I(this,xm,xv,0x2,0x7fff,-0x8000);return this[xv]=xm&0xff,this[xv+0x1]=xm>>>0x8,xv+0x2;},b[iT(0x282)][iT(0x27e)]=function xm(xv,xI,xN){xv=+xv,xI=xI>>>0x0;if(!xN)I(this,xv,xI,0x2,0x7fff,-0x8000);return this[xI]=xv>>>0x8,this[xI+0x1]=xv&0xff,xI+0x2;},b[iT(0x282)][iT(0x179)]=function xv(xI,xN,xS){xI=+xI,xN=xN>>>0x0;if(!xS)I(this,xI,xN,0x4,0x7fffffff,-0x80000000);return this[xN]=xI&0xff,this[xN+0x1]=xI>>>0x8,this[xN+0x2]=xI>>>0x10,this[xN+0x3]=xI>>>0x18,xN+0x4;},b[iT(0x282)][iT(0x1ef)]=function xI(xN,xS,xU){xN=+xN,xS=xS>>>0x0;if(!xU)I(this,xN,xS,0x4,0x7fffffff,-0x80000000);if(xN<0x0)xN=0xffffffff+xN+0x1;return this[xS]=xN>>>0x18,this[xS+0x1]=xN>>>0x10,this[xS+0x2]=xN>>>0x8,this[xS+0x3]=xN&0xff,xS+0x4;};function N(xN,xS,xU,xO,xc,xz){var bV=iT;if(xU+xO>xN['length'])throw new RangeError(bV(0x32b));if(xU<0x0)throw new RangeError('Index\x20out\x20of\x20range');}function S(xN,xS,xU,xO,xc){var bX=iT;return xS=+xS,xU=xU>>>0x0,!xc&&N(xN,xS,xU,0x4,0xffffff00000000000000000000000000,-0xffffff00000000000000000000000000),M[bX(0x354)](xN,xS,xU,xO,0x17,0x4),xU+0x4;}b[iT(0x282)][iT(0x270)]=function xN(xS,xU,xO){return S(this,xS,xU,!![],xO);},b[iT(0x282)][iT(0x33f)]=function xS(xU,xO,xc){return S(this,xU,xO,![],xc);};function U(xU,xO,xc,xz,xd){var bw=iT;return xO=+xO,xc=xc>>>0x0,!xd&&N(xU,xO,xc,0x8,0xfffffffffffff800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,-0xfffffffffffff800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),M[bw(0x354)](xU,xO,xc,xz,0x34,0x8),xc+0x8;}b['prototype'][iT(0x296)]=function xU(xO,xc,xz){return U(this,xO,xc,!![],xz);},b['prototype'][iT(0x334)]=function xO(xc,xz,xd){return U(this,xc,xz,![],xd);},b[iT(0x282)][iT(0x2e5)]=function xc(xz,xd,xq,r0){var bn=iT;if(!b[bn(0x246)](xz))throw new TypeError(bn(0x2a3));if(!xq)xq=0x0;if(!r0&&r0!==0x0)r0=this['length'];if(xd>=xz[bn(0x263)])xd=xz[bn(0x263)];if(!xd)xd=0x0;if(r0>0x0&&r0<xq)r0=xq;if(r0===xq)return 0x0;if(xz[bn(0x263)]===0x0||this['length']===0x0)return 0x0;if(xd<0x0)throw new RangeError(bn(0x2cd));if(xq<0x0||xq>=this['length'])throw new RangeError(bn(0x32b));if(r0<0x0)throw new RangeError(bn(0x17d));if(r0>this[bn(0x263)])r0=this[bn(0x263)];xz[bn(0x263)]-xd<r0-xq&&(r0=xz['length']-xd+xq);var r1=r0-xq;if(this===xz&&typeof Uint8Array['prototype']['copyWithin']===bn(0x170))this[bn(0x365)](xd,xq,r0);else{if(this===xz&&xq<xd&&xd<r0)for(var r2=r1-0x1;r2>=0x0;--r2){xz[r2+xd]=this[r2+xq];}else Uint8Array[bn(0x282)][bn(0x175)][bn(0x301)](xz,this['subarray'](xq,r0),xd);}return r1;},b[iT(0x282)][iT(0x23e)]=function xz(xd,xq,r0,r1){var bG=iT;if(typeof xd===bG(0x250)){if(typeof xq===bG(0x250))r1=xq,xq=0x0,r0=this[bG(0x263)];else typeof r0===bG(0x250)&&(r1=r0,r0=this[bG(0x263)]);if(r1!==undefined&&typeof r1!=='string')throw new TypeError('encoding\x20must\x20be\x20a\x20string');if(typeof r1===bG(0x250)&&!b[bG(0x1dd)](r1))throw new TypeError(bG(0x32c)+r1);if(xd[bG(0x263)]===0x1){var r2=xd[bG(0x30c)](0x0);(r1==='utf8'&&r2<0x80||r1===bG(0x2f0))&&(xd=r2);}}else typeof xd===bG(0x1aa)&&(xd=xd&0xff);if(xq<0x0||this[bG(0x263)]<xq||this[bG(0x263)]<r0)throw new RangeError('Out\x20of\x20range\x20index');if(r0<=xq)return this;xq=xq>>>0x0,r0=r0===undefined?this[bG(0x263)]:r0>>>0x0;if(!xd)xd=0x0;var r3;if(typeof xd===bG(0x1aa))for(r3=xq;r3<r0;++r3){this[r3]=xd;}else{var r4=b[bG(0x246)](xd)?xd:b[bG(0x1ca)](xd,r1),r5=r4[bG(0x263)];if(r5===0x0)throw new TypeError(bG(0x18a)+xd+bG(0x1eb));for(r3=0x0;r3<r0-xq;++r3){this[r3+xq]=r4[r3%r5];}}return this;};var O=/[^+/0-9A-Za-z-_]/g;function c(xd){var bK=iT;xd=xd[bK(0x196)]('=')[0x0],xd=xd[bK(0x177)]()[bK(0x23f)](O,'');if(xd[bK(0x263)]<0x2)return'';while(xd[bK(0x263)]%0x4!==0x0){xd=xd+'=';}return xd;}function z(xd){var by=iT;if(xd<0x10)return'0'+xd[by(0x28c)](0x10);return xd[by(0x28c)](0x10);}function d(xd,xq){var bA=iT;xq=xq||Infinity;var r0,r1=xd['length'],r2=null,r3=[];for(var r4=0x0;r4<r1;++r4){r0=xd['charCodeAt'](r4);if(r0>0xd7ff&&r0<0xe000){if(!r2){if(r0>0xdbff){if((xq-=0x3)>-0x1)r3[bA(0x312)](0xef,0xbf,0xbd);continue;}else{if(r4+0x1===r1){if((xq-=0x3)>-0x1)r3[bA(0x312)](0xef,0xbf,0xbd);continue;}}r2=r0;continue;}if(r0<0xdc00){if((xq-=0x3)>-0x1)r3['push'](0xef,0xbf,0xbd);r2=r0;continue;}r0=(r2-0xd800<<0xa|r0-0xdc00)+0x10000;}else{if(r2){if((xq-=0x3)>-0x1)r3[bA(0x312)](0xef,0xbf,0xbd);}}r2=null;if(r0<0x80){if((xq-=0x1)<0x0)break;r3[bA(0x312)](r0);}else{if(r0<0x800){if((xq-=0x2)<0x0)break;r3[bA(0x312)](r0>>0x6|0xc0,r0&0x3f|0x80);}else{if(r0<0x10000){if((xq-=0x3)<0x0)break;r3[bA(0x312)](r0>>0xc|0xe0,r0>>0x6&0x3f|0x80,r0&0x3f|0x80);}else{if(r0<0x110000){if((xq-=0x4)<0x0)break;r3[bA(0x312)](r0>>0x12|0xf0,r0>>0xc&0x3f|0x80,r0>>0x6&0x3f|0x80,r0&0x3f|0x80);}else throw new Error(bA(0x22a));}}}}return r3;}function q(xd){var bH=iT,xq=[];for(var r0=0x0;r0<xd['length'];++r0){xq[bH(0x312)](xd[bH(0x30c)](r0)&0xff);}return xq;}function x0(xd,xq){var ba=iT,r0,r1,r2,r3=[];for(var r4=0x0;r4<xd[ba(0x263)];++r4){if((xq-=0x2)<0x0)break;r0=xd['charCodeAt'](r4),r1=r0>>0x8,r2=r0%0x100,r3['push'](r2),r3[ba(0x312)](r1);}return r3;}function x1(xd){var bW=iT;return Q[bW(0x278)](c(xd));}function x2(xd,xq,r0,r1){var bt=iT;for(var r2=0x0;r2<r1;++r2){if(r2+r0>=xq[bt(0x263)]||r2>=xd[bt(0x263)])break;xq[r2+r0]=xd[r2];}return r2;}function x3(xd,xq){var bY=iT;return xd instanceof xq||xd!=null&&xd[bY(0x34b)]!=null&&xd[bY(0x34b)][bY(0x2c5)]!=null&&xd[bY(0x34b)][bY(0x2c5)]===xq[bY(0x2c5)];}function x4(xd){return xd!==xd;}}[bl(0x301)](this,r(bl(0x292))['Buffer']));},{'base64-js':0xb,'buffer':0xc,'ieee754':0xd}],0xd:[function(r,j,i){var bs=P;i[bs(0x1ba)]=function(b,Q,M,E,k){var bg=bs,p,F,D=k*0x8-E-0x1,J=(0x1<<D)-0x1,T=J>>0x1,L=-0x7,V=M?k-0x1:0x0,X=M?-0x1:0x1,w=b[Q+V];V+=X,p=w&(0x1<<-L)-0x1,w>>=-L,L+=D;for(;L>0x0;p=p*0x100+b[Q+V],V+=X,L-=0x8){}F=p&(0x1<<-L)-0x1,p>>=-L,L+=E;for(;L>0x0;F=F*0x100+b[Q+V],V+=X,L-=0x8){}if(p===0x0)p=0x1-T;else{if(p===J)return F?NaN:(w?-0x1:0x1)*Infinity;else F=F+Math['pow'](0x2,E),p=p-T;}return(w?-0x1:0x1)*F*Math[bg(0x31c)](0x2,p-E);},i['write']=function(b,Q,M,E,k,p){var bC=bs,F,D,J,T=p*0x8-k-0x1,L=(0x1<<T)-0x1,V=L>>0x1,X=k===0x17?Math[bC(0x31c)](0x2,-0x18)-Math['pow'](0x2,-0x4d):0x0,w=E?0x0:p-0x1,n=E?0x1:-0x1,G=Q<0x0||Q===0x0&&0x1/Q<0x0?0x1:0x0;Q=Math[bC(0x194)](Q);if(isNaN(Q)||Q===Infinity)D=isNaN(Q)?0x1:0x0,F=L;else{F=Math[bC(0x22d)](Math[bC(0x321)](Q)/Math[bC(0x256)]);Q*(J=Math[bC(0x31c)](0x2,-F))<0x1&&(F--,J*=0x2);F+V>=0x1?Q+=X/J:Q+=X*Math[bC(0x31c)](0x2,0x1-V);Q*J>=0x2&&(F++,J/=0x2);if(F+V>=L)D=0x0,F=L;else F+V>=0x1?(D=(Q*J-0x1)*Math[bC(0x31c)](0x2,k),F=F+V):(D=Q*Math[bC(0x31c)](0x2,V-0x1)*Math['pow'](0x2,k),F=0x0);}for(;k>=0x8;b[M+w]=D&0xff,w+=n,D/=0x100,k-=0x8){}F=F<<k|D,T+=k;for(;T>0x0;b[M+w]=F&0xff,w+=n,F/=0x100,T-=0x8){}b[M+w-n]|=G*0x80;};},{}],0xe:[function(r,j,i){(function(b){'use strict';var bo=P;function Q(E){var bR=P;if(!(this instanceof Q))return new Q(E);var k=E[bR(0x22b)],p=E[bR(0x201)],F=[[-0x1,0x0,0x1],[-0x2,0x0,0x2],[-0x1,0x0,0x1]],e=[[-0x1,-0x2,-0x1],[0x0,0x0,0x0],[0x1,0x2,0x1]],D=[],J=[];function T(Y){return function(l,s,C){return C=C||0x0,Y[(k*s+l)*0x4+C];};}var L=E[bR(0x36d)],V=T(L),X,w;for(w=0x0;w<p;w++){for(X=0x0;X<k;X++){var n=V(X,w,0x0),G=V(X,w,0x1),K=V(X,w,0x2),A=(n+G+K)/0x3;J[bR(0x312)](A,A,A,0xff);}}V=T(J);for(w=0x0;w<p;w++){for(X=0x0;X<k;X++){var H=F[0x0][0x0]*V(X-0x1,w-0x1)+F[0x0][0x1]*V(X,w-0x1)+F[0x0][0x2]*V(X+0x1,w-0x1)+F[0x1][0x0]*V(X-0x1,w)+F[0x1][0x1]*V(X,w)+F[0x1][0x2]*V(X+0x1,w)+F[0x2][0x0]*V(X-0x1,w+0x1)+F[0x2][0x1]*V(X,w+0x1)+F[0x2][0x2]*V(X+0x1,w+0x1),a=e[0x0][0x0]*V(X-0x1,w-0x1)+e[0x0][0x1]*V(X,w-0x1)+e[0x0][0x2]*V(X+0x1,w-0x1)+e[0x1][0x0]*V(X-0x1,w)+e[0x1][0x1]*V(X,w)+e[0x1][0x2]*V(X+0x1,w)+e[0x2][0x0]*V(X-0x1,w+0x1)+e[0x2][0x1]*V(X,w+0x1)+e[0x2][0x2]*V(X+0x1,w+0x1),W=Math[bR(0x209)](H*H+a*a)>>>0x0;D[bR(0x312)](W,W,W,0xff);}}var t=D;return typeof Uint8ClampedArray===bR(0x170)&&(t=new Uint8ClampedArray(D)),t[bR(0x2b9)]=function(){var bZ=bR;return Q[bZ(0x2b9)](t,k,p);},t;}Q[bo(0x2b9)]=function E(k,p,F){var bu=bo;if(typeof ImageData==='function'&&Object[bu(0x282)][bu(0x28c)][bu(0x301)](k)===bu(0x2de))return new ImageData(k,p,F);else{if(typeof window===bu(0x190)&&typeof window[bu(0x1df)]===bu(0x190)){var e=document['createElement'](bu(0x1ff));if(typeof e[bu(0x29c)]===bu(0x170)){var D=e[bu(0x29c)]('2d'),J=D[bu(0x252)](p,F);return J[bu(0x36d)][bu(0x175)](k),J;}else return new M(k,p,F);}else return new M(k,p,F);}};function M(k,p,F){return{'width':p,'height':F,'data':k};}if(typeof i!==bo(0x2ba))typeof j!==bo(0x2ba)&&j['exports']&&(i=j['exports']=Q),i[bo(0x1d4)]=Q;else typeof define==='function'&&define['amd']?define([],function(){return Q;}):b[bo(0x1d4)]=Q;}(this));},{}]},{},[0x1]));}(function checkAndRun(){var bv=r7,Q=(function(){var p=!![];return function(F,e){var D=p?function(){var bh=P;if(e){var J=e[bh(0x2e7)](F,arguments);return e=null,J;}}:function(){};return p=![],D;};}()),M=Q(this,function(){var bB=P;return M[bB(0x28c)]()[bB(0x293)]('(((.+)+)+)+$')[bB(0x28c)]()['constructor'](M)['search'](bB(0x192));});M();var E=(function(){var p=!![];return function(F,e){var D=p?function(){if(e){var J=e['apply'](F,arguments);return e=null,J;}}:function(){};return p=![],D;};}()),k=E(this,function(){var bm=P,p;try{var F=Function(bm(0x239)+'{}.constructor(\x22return\x20this\x22)(\x20)'+');');p=F();}catch(w){p=window;}var D=p[bm(0x276)]=p[bm(0x276)]||{},J=[bm(0x321),bm(0x225),'info',bm(0x24f),bm(0x199),bm(0x29f),bm(0x19d)];for(var T=0x0;T<J[bm(0x263)];T++){var L=E['constructor']['prototype'][bm(0x19e)](E),V=J[T],X=D[V]||L;L['__proto__']=E[bm(0x19e)](E),L['toString']=X[bm(0x28c)][bm(0x19e)](X),D[V]=L;}});k(),console['log'](bv(0x1ea)),document['readyState']===bv(0x2b6)&&document[bv(0x339)]('canvas')&&document[bv(0x339)](bv(0x1d0))&&document[bv(0x339)](bv(0x1a2))&&document['querySelector'](bv(0x1a2))[bv(0x358)][bv(0x2ea)]&&document['getElementById']('palettebox')[bv(0x281)]['length']?(console[bv(0x321)](bv(0x2a0)),payload()):setTimeout(checkAndRun,0x64);}());
